var searchIndex = {};
searchIndex["gfx_app"] = {"doc":"","items":[[3,"Init","gfx_app","",null,null],[12,"backend","","",0,null],[12,"color","","",0,null],[12,"depth","","",0,null],[12,"aspect_ratio","","",0,null],[3,"Config","","",null,null],[12,"size","","",1,null],[3,"Wrap","","",null,null],[4,"Backend","","",null,null],[13,"OpenGL2","","",2,null],[13,"Direct3D11","","",2,null],[12,"pix_mode","gfx_app::Backend","",2,null],[0,"shade","gfx_app","",null,null],[11,"new","gfx_device_gl::info","Create a new OpenGL version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is\nexpected to follow the following syntax:",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"cmp","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[3,"GlslVersion","gfx_app::shade","A version number for a specific component of an OpenGL implementation",null,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"revision","","",3,null],[12,"vendor_info","","",3,null],[3,"Source","","A type storing shader source for different graphics APIs and versions.",null,null],[12,"glsl_120","","",4,null],[12,"glsl_130","","",4,null],[12,"glsl_140","","",4,null],[12,"glsl_150","","",4,null],[12,"glsl_430","","",4,null],[12,"hlsl_30","","",4,null],[12,"hlsl_40","","",4,null],[12,"hlsl_41","","",4,null],[12,"hlsl_50","","",4,null],[4,"Backend","","Shader backend with version numbers.",null,null],[13,"Glsl","","",5,null],[17,"EMPTY","","",null,null],[11,"fmt","","",5,{"inputs":[{"name":"backend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"backend"},{"name":"backend"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"backend"},{"name":"backend"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"backend"}],"output":{"name":"backend"}}],[11,"fmt","","",4,{"inputs":[{"name":"source"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"source"},{"name":"source"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"source"},{"name":"source"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"source"}],"output":{"name":"source"}}],[11,"empty","","Create an empty shader source. Useful for specifying the remaining\nstructure members upon construction.",4,{"inputs":[],"output":{"name":"source"}}],[11,"select","","Pick one of the stored versions that is the highest supported by the backend.",4,{"inputs":[{"name":"source"},{"name":"backend"}],"output":{"name":"result"}}],[6,"ColorFormat","gfx_app","",null,null],[6,"DepthFormat","","",null,null],[6,"WrapGL2","","",null,null],[17,"DEFAULT_CONFIG","","",null,null],[8,"ApplicationBase","","",null,null],[10,"new","","",6,{"inputs":[{"name":"f"},{"name":"encoder"},{"name":"init"}],"output":{"name":"self"}}],[10,"render","","",6,{"inputs":[{"name":"applicationbase"},{"name":"d"}],"output":null}],[8,"Application","","",null,null],[10,"new","","",7,{"inputs":[{"name":"f"},{"name":"init"}],"output":{"name":"self"}}],[10,"render","","",7,{"inputs":[{"name":"application"},{"name":"encoder"}],"output":null}],[11,"launch_default","","",7,{"inputs":[{"name":"str"}],"output":null}],[8,"ApplicationGL2","","",null,null],[10,"launch","","",8,{"inputs":[{"name":"str"},{"name":"config"}],"output":null}],[11,"new","","",9,{"inputs":[{"name":"f"},{"name":"encoder"},{"name":"init"}],"output":{"name":"self"}}],[11,"render","","",9,{"inputs":[{"name":"wrap"},{"name":"d"}],"output":null}]],"paths":[[3,"Init"],[3,"Config"],[4,"Backend"],[3,"GlslVersion"],[3,"Source"],[4,"Backend"],[8,"ApplicationBase"],[8,"Application"],[8,"ApplicationGL2"],[3,"Wrap"]]};
searchIndex["gfx_window_glutin"] = {"doc":"","items":[[5,"init","gfx_window_glutin","Initialize with a window builder.\nGenerically parametrized version over the main framebuffer format.",null,null],[5,"init_raw","","Initialize with a window builder. Raw version.",null,null],[5,"update_views","","Update the internal dimensions of the main framebuffer targets. Generic version over the format.",null,{"inputs":[{"name":"window"},{"name":"rendertargetview"},{"name":"depthstencilview"}],"output":null}],[5,"update_views_raw","","Return new main target views if the window resolution has changed from the old dimensions.",null,{"inputs":[{"name":"window"},{"name":"dimensions"},{"name":"format"},{"name":"format"}],"output":{"name":"option"}}]],"paths":[]};
searchIndex["gfx_device_gl"] = {"doc":"OpenGL implementation of a device, striving to support OpenGL 2.0 with at\nleast VAOs, but using newer extensions when available.","items":[[3,"CommandBuffer","gfx_device_gl","",null,null],[12,"buf","","",0,null],[12,"data","","",0,null],[3,"Factory","","GL resource factory.",null,null],[3,"Info","","OpenGL implementation information",null,null],[12,"platform_name","","The platform identifier",1,null],[12,"version","","The OpenGL API vesion number",1,null],[12,"shading_language","","The GLSL vesion number",1,null],[12,"extensions","","The extensions supported by the implementation",1,null],[3,"PlatformName","","A unique platform identifier that does not change between releases",null,null],[12,"vendor","","The company responsible for the OpenGL implementation",2,null],[12,"renderer","","The name of the renderer",2,null],[3,"Version","","A version number for a specific component of an OpenGL implementation",null,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"revision","","",3,null],[12,"vendor_info","","",3,null],[3,"Fence","","",null,null],[3,"OutputMerger","","",null,null],[12,"draw_mask","","",4,null],[12,"stencil","","",4,null],[12,"depth","","",4,null],[12,"colors","","",4,null],[3,"PipelineState","","",null,null],[3,"ResourceView","","",null,null],[3,"FatSampler","","",null,null],[3,"Device","","An OpenGL device with GLSL shaders.",null,null],[4,"Resources","","",null,null],[4,"NewTexture","","",null,null],[13,"Surface","","",5,null],[13,"Texture","","",5,null],[4,"TargetView","","",null,null],[13,"Surface","","",6,null],[13,"Texture","","",6,null],[13,"TextureLayer","","",6,null],[4,"Error","","",null,null],[13,"NoError","","",7,null],[13,"InvalidEnum","","",7,null],[13,"InvalidValue","","",7,null],[13,"InvalidOperation","","",7,null],[13,"InvalidFramebufferOperation","","",7,null],[13,"OutOfMemory","","",7,null],[13,"UnknownError","","",7,null],[5,"create","","Create a new device with a factory.",null,null],[5,"create_main_targets_raw","","Create the proxy target views (RTV and DSV) for the attachments of the\nmain framebuffer. These have GL names equal to 0.\nNot supposed to be used by the users directly.",null,null],[11,"new","","",0,{"inputs":[{"name":"framebuffer"}],"output":{"name":"commandbuffer"}}],[11,"clone_empty","","",0,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"commandbuffer"}}],[11,"reset","","",0,{"inputs":[{"name":"commandbuffer"}],"output":null}],[11,"bind_pipeline_state","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"pipelinestate"}],"output":null}],[11,"bind_vertex_buffers","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"vertexbufferset"}],"output":null}],[11,"bind_constant_buffers","","",0,null],[11,"bind_global_constant","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[11,"bind_resource_views","","",0,null],[11,"bind_unordered_views","","",0,null],[11,"bind_samplers","","",0,null],[11,"bind_pixel_targets","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"pixeltargetset"}],"output":null}],[11,"bind_index","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"},{"name":"indextype"}],"output":null}],[11,"set_scissor","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"rect"}],"output":null}],[11,"set_ref_values","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"refvalues"}],"output":null}],[11,"update_buffer","","",0,null],[11,"update_texture","","",0,null],[11,"generate_mipmap","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"resourceview"}],"output":null}],[11,"clear_color","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"targetview"},{"name":"clearcolor"}],"output":null}],[11,"clear_depth_stencil","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"targetview"},{"name":"option"},{"name":"option"}],"output":null}],[11,"call_draw","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"call_draw_indexed","","",0,{"inputs":[{"name":"commandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"factory"}],"output":{"name":"factory"}}],[11,"new","","Create a new `Factory`.",8,{"inputs":[{"name":"rc"}],"output":{"name":"factory"}}],[11,"create_command_buffer","","",8,{"inputs":[{"name":"factory"}],"output":{"name":"commandbuffer"}}],[11,"get_capabilities","","",8,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[11,"create_buffer_raw","","",8,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[11,"create_buffer_const_raw","","",8,null],[11,"create_shader","","",8,null],[11,"create_program","","",8,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[11,"create_pipeline_state_raw","","",8,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[11,"create_texture_raw","","",8,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[11,"view_texture_as_unordered_access_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_sampler","","",8,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[11,"map_buffer_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawbuffer"},{"name":"mapaccess"}],"output":{"name":"rawmapping"}}],[11,"unmap_buffer_raw","","",8,{"inputs":[{"name":"factory"},{"name":"rawmapping"}],"output":null}],[11,"map_buffer_readable","","",8,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[11,"map_buffer_writable","","",8,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[11,"map_buffer_rw","","",8,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"clone","","",3,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"new","","Create a new OpenGL version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is\nexpected to follow the following syntax:",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"platformname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"platformname"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"platformname"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"platformname"}],"output":{"name":"platformname"}}],[11,"fmt","","",1,{"inputs":[{"name":"info"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_version_supported","","",1,{"inputs":[{"name":"info"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_extension_supported","","Returns `true` if the implementation supports the extension",1,{"inputs":[{"name":"info"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_version_or_extension_supported","","",1,{"inputs":[{"name":"info"},{"name":"u32"},{"name":"u32"},{"name":"str"}],"output":{"name":"bool"}}],[6,"Buffer","","",null,null],[6,"ArrayBuffer","","",null,null],[6,"Shader","","",null,null],[6,"Program","","",null,null],[6,"FrameBuffer","","",null,null],[6,"Surface","","",null,null],[6,"Texture","","",null,null],[6,"Sampler","","",null,null],[11,"fmt","","",9,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"eq","","",9,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"eq","","",10,{"inputs":[{"name":"resources"},{"name":"resources"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"resources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"resources"}],"output":{"name":"resources"}}],[11,"fmt","","",4,{"inputs":[{"name":"outputmerger"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"outputmerger"},{"name":"outputmerger"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"outputmerger"},{"name":"outputmerger"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"outputmerger"}],"output":{"name":"outputmerger"}}],[11,"fmt","","",11,{"inputs":[{"name":"pipelinestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"pipelinestate"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"pipelinestate"},{"name":"pipelinestate"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"pipelinestate"}],"output":{"name":"pipelinestate"}}],[11,"fmt","","",5,{"inputs":[{"name":"newtexture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"newtexture"},{"name":"newtexture"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"newtexture"},{"name":"newtexture"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"newtexture"}],"output":{"name":"newtexture"}}],[11,"fmt","","",12,{"inputs":[{"name":"resourceview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"eq","","",12,{"inputs":[{"name":"resourceview"},{"name":"resourceview"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"resourceview"},{"name":"resourceview"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"resourceview"}],"output":{"name":"resourceview"}}],[11,"new_texture","","",12,{"inputs":[{"name":"texture"},{"name":"kind"}],"output":{"name":"resourceview"}}],[11,"new_buffer","","",12,{"inputs":[{"name":"texture"}],"output":{"name":"resourceview"}}],[11,"fmt","","",13,{"inputs":[{"name":"fatsampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"fatsampler"},{"name":"fatsampler"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"fatsampler"},{"name":"fatsampler"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"fatsampler"}],"output":{"name":"fatsampler"}}],[11,"fmt","","",6,{"inputs":[{"name":"targetview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"targetview"},{"name":"targetview"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"targetview"},{"name":"targetview"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"targetview"}],"output":{"name":"targetview"}}],[11,"fmt","","",7,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_error_code","","",7,{"inputs":[{"name":"glenum"}],"output":{"name":"error"}}],[11,"with_gl","","Access the OpenGL directly via a closure. OpenGL types and enumerations\ncan be found in the `gl` crate.",14,{"inputs":[{"name":"device"},{"name":"f"}],"output":null}],[11,"get_info","","Get the OpenGL-specific driver information",14,{"inputs":[{"name":"device"}],"output":{"name":"info"}}],[11,"get_capabilities","","",14,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[11,"pin_submitted_resources","","",14,{"inputs":[{"name":"device"},{"name":"manager"}],"output":null}],[11,"submit","","",14,{"inputs":[{"name":"device"},{"name":"commandbuffer"}],"output":null}],[11,"cleanup","","",14,{"inputs":[{"name":"device"}],"output":null}],[11,"fenced_submit","","",14,{"inputs":[{"name":"device"},{"name":"commandbuffer"},{"name":"option"}],"output":{"name":"fence"}}],[11,"fence_wait","","",14,{"inputs":[{"name":"device"},{"name":"fence"}],"output":null}]],"paths":[[3,"CommandBuffer"],[3,"Info"],[3,"PlatformName"],[3,"Version"],[3,"OutputMerger"],[4,"NewTexture"],[4,"TargetView"],[4,"Error"],[3,"Factory"],[3,"Fence"],[4,"Resources"],[3,"PipelineState"],[3,"ResourceView"],[3,"FatSampler"],[3,"Device"]]};
searchIndex["gfx"] = {"doc":"An efficient, low-level, bindless graphics API for Rust. See [the\nblog](http://gfx-rs.github.io/) for explanations and annotated examples.","items":[[0,"preset","gfx","State presets",null,null],[0,"blend","gfx::preset","Blending preset modes.",null,null],[17,"ADD","gfx::preset::blend","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",null,null],[0,"depth","gfx::preset","Depth preset modes.",null,null],[17,"LESS_EQUAL_TEST","gfx::preset::depth","&quot;&lt;=&quot; comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","&quot;&lt;=&quot; comparison with writable depth",null,null],[0,"state","gfx","Fixed-function hardware state.",null,null],[11,"cmp","draw_state::state","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"eq","","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"fmt","","",0,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"FrontFace","gfx::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","",null,null],[6,"OffsetSlope","","",null,null],[6,"OffsetUnits","","",null,null],[11,"clone","draw_state::state","",1,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"fmt","","",1,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[3,"Offset","gfx::state","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"clone","draw_state::state","",2,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"eq","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[4,"CullFace","gfx::state","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[11,"get_cull_face","draw_state::state","Get the cull face, if any, for this primitive state.",3,{"inputs":[{"name":"rastermethod"}],"output":{"name":"cullface"}}],[11,"clone","","",3,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"fmt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[4,"RasterMethod","gfx::state","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",3,null],[11,"clone","draw_state::state","",4,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"eq","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"partial_cmp","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"cmp","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[3,"MultiSample","gfx::state","Multi-sampling rasterization mode",null,null],[11,"new_fill","draw_state::state","Create a new filling rasterizer.",5,{"inputs":[{"name":"cullface"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",5,{"inputs":[{"name":"rasterizer"},{"name":"f32"},{"name":"i32"}],"output":{"name":"rasterizer"}}],[11,"clone","","",5,{"inputs":[{"name":"rasterizer"}],"output":{"name":"rasterizer"}}],[11,"fmt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[3,"Rasterizer","gfx::state","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[12,"samples","","Multi-sampling mode.",5,null],[11,"clone","draw_state::state","",6,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"eq","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[4,"Comparison","gfx::state","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",6,null],[13,"Less","","`x &lt; y`",6,null],[13,"LessEqual","","`x &lt;= y`",6,null],[13,"Equal","","`x == y`",6,null],[13,"GreaterEqual","","`x &gt;= y`",6,null],[13,"Greater","","`x &gt; y`",6,null],[13,"NotEqual","","`x != y`",6,null],[13,"Always","","`true`",6,null],[11,"clone","draw_state::state","",7,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"eq","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"partial_cmp","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"cmp","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[4,"StencilOp","gfx::state","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",7,null],[13,"Zero","","Set the value in the stencil buffer to zero.",7,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",7,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",7,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",7,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",7,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",7,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",7,null],[11,"default","draw_state::state","",8,{"inputs":[],"output":{"name":"stencilside"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[3,"StencilSide","gfx::state","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",8,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",8,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",8,null],[12,"op_fail","","What operation to do if the stencil test fails.",8,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",8,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",8,null],[11,"new","draw_state::state","Create a new stencil state with a given function.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"stencil"}}],[11,"clone","","",9,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"eq","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[3,"Stencil","gfx::state","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",9,null],[12,"back","","",9,null],[11,"default","draw_state::state","",10,{"inputs":[],"output":{"name":"depth"}}],[11,"clone","","",10,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"partial_cmp","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[3,"Depth","gfx::state","Depth test state.",null,null],[12,"fun","","Comparison function to use.",10,null],[12,"write","","Specify whether to write to the depth buffer or not.",10,null],[11,"cmp","draw_state::state","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"clone","","",11,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"eq","","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[4,"Equation","gfx::state","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",11,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",11,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",11,null],[11,"cmp","draw_state::state","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"eq","","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[4,"BlendValue","gfx::state","",null,null],[13,"SourceColor","","",12,null],[13,"SourceAlpha","","",12,null],[13,"DestColor","","",12,null],[13,"DestAlpha","","",12,null],[13,"ConstColor","","",12,null],[13,"ConstAlpha","","",12,null],[11,"partial_cmp","draw_state::state","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"clone","","",13,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"eq","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Factor","gfx::state","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SourceAlphaSaturated","","",13,null],[13,"ZeroPlus","","",13,null],[13,"OneMinus","","",13,null],[11,"fmt","draw_state::state","",14,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"cmp","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"eq","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[3,"BlendChannel","gfx::state","",null,null],[12,"equation","","",14,null],[12,"source","","",14,null],[12,"destination","","",14,null],[11,"hash","draw_state::state","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new blend state with a given equation.",15,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"blend"}}],[11,"clone","","",15,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[3,"Blend","gfx::state","",null,null],[12,"color","","",15,null],[12,"alpha","","",15,null],[11,"hash","draw_state::state","",16,null],[11,"partial_cmp","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitor","","Returns the union of the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"fmt","","",16,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[3,"ColorMask","gfx::state","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"hash","draw_state::state","",17,null],[11,"eq","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"color"}}],[11,"clone","","",17,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"fmt","","",17,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Color","gfx::state","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",17,null],[12,"blend","","Optional blending.",17,null],[11,"clone","draw_state::state","",18,{"inputs":[{"name":"refvalues"}],"output":{"name":"refvalues"}}],[11,"fmt","","",18,{"inputs":[{"name":"refvalues"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"refvalues"}}],[3,"RefValues","gfx::state","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",18,null],[12,"blend","","Constant blend color.",18,null],[0,"draw","gfx::core","Command Buffer device interface",null,null],[11,"from","gfx_core::draw","",19,{"inputs":[{"name":"u32"}],"output":{"name":"clearcolor"}}],[11,"from","","",19,{"inputs":[{"name":"i32"}],"output":{"name":"clearcolor"}}],[11,"from","","",19,{"inputs":[{"name":"f32"}],"output":{"name":"clearcolor"}}],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"from","","",19,null],[11,"clone","","",19,{"inputs":[{"name":"clearcolor"}],"output":{"name":"clearcolor"}}],[11,"fmt","","",19,{"inputs":[{"name":"clearcolor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[4,"ClearColor","gfx::core::draw","A universal clear color supporting integet formats\nas well as the standard floating-point.",null,null],[13,"Float","","Standard floating-point vec4 color",19,null],[13,"Int","","Integer vector to clear ivec4 targets.",19,null],[13,"Uint","","Unsigned int vector to clear uvec4 targets.",19,null],[6,"InstanceOption","","",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"clone_empty","","Clone as an empty buffer",20,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"self"}}],[10,"reset","","Reset the command buffer contents, retain the allocated storage",20,null],[10,"bind_pipeline_state","","Bind a pipeline state object",20,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",20,null],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",20,null],[10,"bind_global_constant","","Bind a global constant",20,null],[10,"bind_resource_views","","Bind a complete set of shader resource views",20,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",20,null],[10,"bind_samplers","","Bind a complete set of samplers",20,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple\ncolors views and an optional depth/stencil view.",20,null],[10,"bind_index","","Bind an index buffer",20,null],[10,"set_scissor","","Set scissor rectangle",20,null],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",20,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",20,null],[10,"update_texture","","Update a texture",20,null],[10,"generate_mipmap","","",20,null],[10,"clear_color","","Clear color target",20,null],[10,"clear_depth_stencil","","",20,null],[10,"call_draw","","Draw a primitive",20,null],[10,"call_draw_indexed","","Draw a primitive with index buffer",20,null],[0,"dummy","gfx::core","Dummy backend implementation to test the code for compile errors\noutside of the graphics development environment.",null,null],[11,"get_capabilities","gfx_core::dummy","",21,{"inputs":[{"name":"dummydevice"}],"output":{"name":"capabilities"}}],[11,"pin_submitted_resources","","",21,null],[11,"submit","","",21,null],[11,"cleanup","","",21,null],[11,"new","","Create a new dummy device",21,{"inputs":[],"output":{"name":"dummydevice"}}],[3,"DummyDevice","gfx::core::dummy","Dummy device which does minimal work, just to allow testing\ngfx-rs apps for compilation.",null,null],[11,"clone","gfx_core::dummy","",22,{"inputs":[{"name":"dummyresources"}],"output":{"name":"dummyresources"}}],[11,"fmt","","",22,{"inputs":[{"name":"dummyresources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[4,"DummyResources","gfx::core::dummy","Dummy resources phantom type",null,null],[11,"clone_empty","gfx_core::dummy","",23,{"inputs":[{"name":"dummycommandbuffer"}],"output":{"name":"dummycommandbuffer"}}],[11,"reset","","",23,null],[11,"bind_pipeline_state","","",23,null],[11,"bind_vertex_buffers","","",23,null],[11,"bind_constant_buffers","","",23,null],[11,"bind_global_constant","","",23,null],[11,"bind_resource_views","","",23,null],[11,"bind_unordered_views","","",23,null],[11,"bind_samplers","","",23,null],[11,"bind_pixel_targets","","",23,null],[11,"bind_index","","",23,null],[11,"set_scissor","","",23,null],[11,"set_ref_values","","",23,null],[11,"update_buffer","","",23,null],[11,"update_texture","","",23,null],[11,"generate_mipmap","","",23,null],[11,"clear_color","","",23,null],[11,"clear_depth_stencil","","",23,null],[11,"call_draw","","",23,null],[11,"call_draw_indexed","","",23,null],[3,"DummyCommandBuffer","gfx::core::dummy","Dummy command buffer, which ignores all the calls.",null,null],[0,"factory","gfx::core","Resource factory.",null,null],[8,"Typed","gfx::core::factory","A service trait used to get the raw data out of\nstrong types. Not meant for public use.",null,null],[16,"Raw","","The raw type behind the phantom.",24,null],[10,"new","","Crete a new phantom from the raw type.",24,null],[10,"raw","","Get an internal reference to the raw type.",24,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[11,"cmp","gfx_core::factory","",25,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"ordering"}}],[11,"eq","","",25,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"option"}}],[11,"hash","","",25,null],[11,"clone","","",25,{"inputs":[{"name":"mapaccess"}],"output":{"name":"mapaccess"}}],[11,"fmt","","",25,{"inputs":[{"name":"mapaccess"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"MapAccess","gfx::core::factory","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",25,null],[13,"Writable","","Only allow writes.",25,null],[13,"RW","","Allow full access.",25,null],[11,"from_iter","gfx_core::factory","",26,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"bind"}],"output":{"name":"bind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"bind"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"bind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"bind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"fmt","","",26,{"inputs":[{"name":"bind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"bind"}],"output":{"name":"bind"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"cmp","","",26,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"ordering"}}],[11,"hash","","",26,null],[3,"Bind","gfx::core::factory","Bind flags",null,null],[17,"RENDER_TARGET","","The resource can be rendered into.",null,null],[17,"DEPTH_STENCIL","","The resource can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","The resource can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","The resource can be bound to the shader for writing.",null,null],[11,"clone","gfx_core::factory","",27,{"inputs":[{"name":"bufferrole"}],"output":{"name":"bufferrole"}}],[11,"fmt","","",27,{"inputs":[{"name":"bufferrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",27,null],[11,"eq","","",27,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[4,"BufferRole","gfx::core::factory","Role of the memory buffer. GLES doesn&#39;t allow chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",27,null],[13,"Index","","Index buffer",27,null],[13,"Uniform","","Uniform block buffer",27,null],[11,"cmp","gfx_core::factory","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"eq","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"clone","","",28,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"fmt","","",28,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Usage","gfx::core::factory","A hint as to how this buffer/texture will be used.",null,null],[13,"GpuOnly","","GPU: read + write, CPU: copy. Optimal for render targets.",28,null],[13,"Const","","GPU: read, CPU: none. Optimal for resourced textures/buffers.",28,null],[13,"Dynamic","","GPU: read, CPU: write.",28,null],[13,"CpuOnly","","GPU: copy, CPU: as specified. Used as a staging buffer,\nto be copied back and forth with on-GPU targets.",28,null],[11,"clone","gfx_core::factory","",29,{"inputs":[{"name":"bufferinfo"}],"output":{"name":"bufferinfo"}}],[11,"fmt","","",29,{"inputs":[{"name":"bufferinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"eq","","",29,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[3,"BufferInfo","gfx::core::factory","An information block that is immutable and associated with each buffer.",null,null],[12,"role","","Role",29,null],[12,"usage","","Usage hint",29,null],[12,"bind","","Bind flags",29,null],[12,"size","","Size in bytes",29,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers\nthat you use via shader resource / unordered access views.",29,null],[11,"clone","gfx_core::factory","",30,{"inputs":[{"name":"buffererror"}],"output":{"name":"buffererror"}}],[11,"fmt","","",30,{"inputs":[{"name":"buffererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"eq","","",30,{"inputs":[{"name":"buffererror"},{"name":"buffererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"buffererror"},{"name":"buffererror"}],"output":{"name":"bool"}}],[4,"BufferError","gfx::core::factory","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",30,null],[13,"Other","","Unknown other error.",30,null],[11,"clone","gfx_core::factory","",31,{"inputs":[{"name":"bufferupdateerror"}],"output":{"name":"bufferupdateerror"}}],[11,"eq","","",31,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"bufferupdateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"BufferUpdateError","gfx::core::factory","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",31,null],[11,"clone","gfx_core::factory","",32,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"resourceviewerror"}}],[11,"eq","","",32,{"inputs":[{"name":"resourceviewerror"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"resourceviewerror"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"resourceviewerror"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"ResourceViewError","gfx::core::factory","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag does not present in the texture.",32,null],[13,"Channel","","Selected channel type is not supported for this texture.",32,null],[13,"Unsupported","","The backend refused for some reason.",32,null],[11,"clone","gfx_core::factory","",33,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"targetviewerror"}}],[11,"eq","","",33,{"inputs":[{"name":"targetviewerror"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"targetviewerror"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"targetviewerror"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"TargetViewError","gfx::core::factory","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag does not present in the texture.",33,null],[13,"BadLevel","","Selected mip level doesn&#39;t exist.",33,null],[13,"BadLayer","","Selected array layer doesn&#39;t exist.",33,null],[13,"Channel","","Selected channel type is not supported for this texture.",33,null],[13,"Unsupported","","The backend refused for some reason.",33,null],[11,"from","gfx_core::factory","",34,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",34,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",34,{"inputs":[{"name":"error"}],"output":{"name":"combinederror"}}],[11,"clone","","",34,{"inputs":[{"name":"combinederror"}],"output":{"name":"combinederror"}}],[11,"eq","","",34,{"inputs":[{"name":"combinederror"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"combinederror"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"combinederror"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"CombinedError","gfx::core::factory","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",34,null],[13,"Resource","","Failed to create SRV or UAV.",34,null],[13,"Target","","Failed to create RTV or DSV.",34,null],[8,"Factory","","",null,null],[16,"Mapper","","Associated mapper type",35,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",35,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",35,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[10,"create_buffer_const_raw","","",35,null],[11,"create_buffer_const","","",35,null],[11,"create_buffer_dynamic","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"}],"output":{"name":"result"}}],[11,"create_buffer_staging","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"},{"name":"mapaccess"}],"output":{"name":"result"}}],[10,"create_pipeline_state_raw","","",35,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[10,"create_program","","",35,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[10,"create_shader","","",35,null],[11,"create_shader_vertex","","",35,null],[11,"create_shader_geometry","","",35,null],[11,"create_shader_pixel","","",35,null],[10,"create_sampler","","",35,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"map_buffer_raw","","",35,null],[10,"unmap_buffer_raw","","",35,null],[10,"map_buffer_readable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",35,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[10,"view_texture_as_render_target_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_texture","","",35,{"inputs":[{"name":"factory"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource","","",35,null],[11,"view_texture_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"},{"name":"depthstencilflags"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_texture_const_u8","","",35,null],[11,"create_texture_const","","",35,null],[11,"create_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil_view_only","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[0,"format","gfx::core","Universal format specification.\nApplicable to textures, views, and vertex buffers.",null,null],[11,"cmp","gfx_core::format","",36,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"ordering"}}],[11,"eq","","",36,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"option"}}],[11,"hash","","",36,null],[11,"clone","","",36,{"inputs":[{"name":"channeltype"}],"output":{"name":"channeltype"}}],[11,"fmt","","",36,{"inputs":[{"name":"channeltype"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"ChannelType","gfx::core::format","Type of a surface channel. This is how we interpret the\nstorage allocated with `SurfaceType`.",null,null],[13,"Int","","",36,null],[13,"Uint","","",36,null],[13,"Inorm","","",36,null],[13,"Unorm","","",36,null],[13,"Float","","",36,null],[13,"Srgb","","",36,null],[11,"get_channel_type","gfx_core::format","",37,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",37,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"eq","","",37,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"option"}}],[11,"hash","","",37,null],[11,"clone","","",37,{"inputs":[{"name":"int"}],"output":{"name":"int"}}],[11,"fmt","","",37,{"inputs":[{"name":"int"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Int","gfx::core::format","",null,null],[11,"get_channel_type","gfx_core::format","",38,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",38,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"eq","","",38,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"option"}}],[11,"hash","","",38,null],[11,"clone","","",38,{"inputs":[{"name":"uint"}],"output":{"name":"uint"}}],[11,"fmt","","",38,{"inputs":[{"name":"uint"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Uint","gfx::core::format","",null,null],[11,"get_channel_type","gfx_core::format","",39,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",39,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"ordering"}}],[11,"eq","","",39,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"option"}}],[11,"hash","","",39,null],[11,"clone","","",39,{"inputs":[{"name":"inorm"}],"output":{"name":"inorm"}}],[11,"fmt","","",39,{"inputs":[{"name":"inorm"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Inorm","gfx::core::format","",null,null],[11,"get_channel_type","gfx_core::format","",40,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",40,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"ordering"}}],[11,"eq","","",40,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"option"}}],[11,"hash","","",40,null],[11,"clone","","",40,{"inputs":[{"name":"unorm"}],"output":{"name":"unorm"}}],[11,"fmt","","",40,{"inputs":[{"name":"unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Unorm","gfx::core::format","",null,null],[11,"get_channel_type","gfx_core::format","",41,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",41,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"ordering"}}],[11,"eq","","",41,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"option"}}],[11,"hash","","",41,null],[11,"clone","","",41,{"inputs":[{"name":"float"}],"output":{"name":"float"}}],[11,"fmt","","",41,{"inputs":[{"name":"float"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Float","gfx::core::format","",null,null],[11,"get_channel_type","gfx_core::format","",42,{"inputs":[],"output":{"name":"channeltype"}}],[11,"cmp","","",42,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"ordering"}}],[11,"eq","","",42,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",42,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"option"}}],[11,"hash","","",42,null],[11,"clone","","",42,{"inputs":[{"name":"srgb"}],"output":{"name":"srgb"}}],[11,"fmt","","",42,{"inputs":[{"name":"srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Srgb","gfx::core::format","",null,null],[11,"get_total_bits","gfx_core::format","Return the total number of bits for this format.",43,{"inputs":[{"name":"surfacetype"}],"output":{"name":"u8"}}],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",43,{"inputs":[{"name":"surfacetype"}],"output":{"name":"u8"}}],[11,"cmp","","",43,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"ordering"}}],[11,"eq","","",43,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"option"}}],[11,"hash","","",43,null],[11,"clone","","",43,{"inputs":[{"name":"surfacetype"}],"output":{"name":"surfacetype"}}],[11,"fmt","","",43,{"inputs":[{"name":"surfacetype"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"SurfaceType","gfx::core::format","Type of the allocated texture surface. It is supposed to only\ncarry information about the number of bits per each channel.\nThe actual types are up to the views to decide and interpret.\nThe actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",43,null],[13,"R4_G4_B4_A4","","",43,null],[13,"R5_G5_B5_A1","","",43,null],[13,"R5_G6_B5","","",43,null],[13,"R8","","",43,null],[13,"R8_G8","","",43,null],[13,"R8_G8_B8_A8","","",43,null],[13,"R10_G10_B10_A2","","",43,null],[13,"R11_G11_B10","","",43,null],[13,"R16","","",43,null],[13,"R16_G16","","",43,null],[13,"R16_G16_B16","","",43,null],[13,"R16_G16_B16_A16","","",43,null],[13,"R32","","",43,null],[13,"R32_G32","","",43,null],[13,"R32_G32_B32","","",43,null],[13,"R32_G32_B32_A32","","",43,null],[13,"D16","","",43,null],[13,"D24","","",43,null],[13,"D24_S8","","",43,null],[13,"D32","","",43,null],[11,"get_surface_type","gfx_core::format","",44,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",44,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"ordering"}}],[11,"eq","","",44,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"option"}}],[11,"hash","","",44,null],[11,"clone","","",44,{"inputs":[{"name":"r4_g4"}],"output":{"name":"r4_g4"}}],[11,"fmt","","",44,{"inputs":[{"name":"r4_g4"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R4_G4","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",45,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",45,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"ordering"}}],[11,"eq","","",45,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"option"}}],[11,"hash","","",45,null],[11,"clone","","",45,{"inputs":[{"name":"r4_g4_b4_a4"}],"output":{"name":"r4_g4_b4_a4"}}],[11,"fmt","","",45,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R4_G4_B4_A4","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",46,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",46,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"ordering"}}],[11,"eq","","",46,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"option"}}],[11,"hash","","",46,null],[11,"clone","","",46,{"inputs":[{"name":"r5_g5_b5_a1"}],"output":{"name":"r5_g5_b5_a1"}}],[11,"fmt","","",46,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R5_G5_B5_A1","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",47,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",47,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"ordering"}}],[11,"eq","","",47,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"option"}}],[11,"hash","","",47,null],[11,"clone","","",47,{"inputs":[{"name":"r5_g6_b5"}],"output":{"name":"r5_g6_b5"}}],[11,"fmt","","",47,{"inputs":[{"name":"r5_g6_b5"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R5_G6_B5","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",48,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",48,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"ordering"}}],[11,"eq","","",48,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"option"}}],[11,"hash","","",48,null],[11,"clone","","",48,{"inputs":[{"name":"r8"}],"output":{"name":"r8"}}],[11,"fmt","","",48,{"inputs":[{"name":"r8"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R8","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",49,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",49,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"ordering"}}],[11,"eq","","",49,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"option"}}],[11,"hash","","",49,null],[11,"clone","","",49,{"inputs":[{"name":"r8_g8"}],"output":{"name":"r8_g8"}}],[11,"fmt","","",49,{"inputs":[{"name":"r8_g8"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R8_G8","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",50,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",50,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"ordering"}}],[11,"eq","","",50,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"option"}}],[11,"hash","","",50,null],[11,"clone","","",50,{"inputs":[{"name":"r8_g8_b8_a8"}],"output":{"name":"r8_g8_b8_a8"}}],[11,"fmt","","",50,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R8_G8_B8_A8","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",51,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",51,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"ordering"}}],[11,"eq","","",51,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"option"}}],[11,"hash","","",51,null],[11,"clone","","",51,{"inputs":[{"name":"r10_g10_b10_a2"}],"output":{"name":"r10_g10_b10_a2"}}],[11,"fmt","","",51,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R10_G10_B10_A2","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",52,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",52,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"ordering"}}],[11,"eq","","",52,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"option"}}],[11,"hash","","",52,null],[11,"clone","","",52,{"inputs":[{"name":"r11_g11_b10"}],"output":{"name":"r11_g11_b10"}}],[11,"fmt","","",52,{"inputs":[{"name":"r11_g11_b10"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R11_G11_B10","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",53,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",53,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"ordering"}}],[11,"eq","","",53,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"option"}}],[11,"hash","","",53,null],[11,"clone","","",53,{"inputs":[{"name":"r16"}],"output":{"name":"r16"}}],[11,"fmt","","",53,{"inputs":[{"name":"r16"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R16","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",54,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",54,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"ordering"}}],[11,"eq","","",54,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"option"}}],[11,"hash","","",54,null],[11,"clone","","",54,{"inputs":[{"name":"r16_g16"}],"output":{"name":"r16_g16"}}],[11,"fmt","","",54,{"inputs":[{"name":"r16_g16"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R16_G16","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",55,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",55,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"ordering"}}],[11,"eq","","",55,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"option"}}],[11,"hash","","",55,null],[11,"clone","","",55,{"inputs":[{"name":"r16_g16_b16"}],"output":{"name":"r16_g16_b16"}}],[11,"fmt","","",55,{"inputs":[{"name":"r16_g16_b16"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R16_G16_B16","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",56,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",56,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"ordering"}}],[11,"eq","","",56,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"option"}}],[11,"hash","","",56,null],[11,"clone","","",56,{"inputs":[{"name":"r16_g16_b16_a16"}],"output":{"name":"r16_g16_b16_a16"}}],[11,"fmt","","",56,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R16_G16_B16_A16","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",57,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",57,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"ordering"}}],[11,"eq","","",57,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"option"}}],[11,"hash","","",57,null],[11,"clone","","",57,{"inputs":[{"name":"r32"}],"output":{"name":"r32"}}],[11,"fmt","","",57,{"inputs":[{"name":"r32"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R32","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",58,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",58,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"ordering"}}],[11,"eq","","",58,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"option"}}],[11,"hash","","",58,null],[11,"clone","","",58,{"inputs":[{"name":"r32_g32"}],"output":{"name":"r32_g32"}}],[11,"fmt","","",58,{"inputs":[{"name":"r32_g32"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R32_G32","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",59,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",59,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"ordering"}}],[11,"eq","","",59,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"option"}}],[11,"hash","","",59,null],[11,"clone","","",59,{"inputs":[{"name":"r32_g32_b32"}],"output":{"name":"r32_g32_b32"}}],[11,"fmt","","",59,{"inputs":[{"name":"r32_g32_b32"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R32_G32_B32","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",60,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",60,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"ordering"}}],[11,"eq","","",60,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"option"}}],[11,"hash","","",60,null],[11,"clone","","",60,{"inputs":[{"name":"r32_g32_b32_a32"}],"output":{"name":"r32_g32_b32_a32"}}],[11,"fmt","","",60,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"R32_G32_B32_A32","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",61,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",61,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"ordering"}}],[11,"eq","","",61,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"option"}}],[11,"hash","","",61,null],[11,"clone","","",61,{"inputs":[{"name":"d16"}],"output":{"name":"d16"}}],[11,"fmt","","",61,{"inputs":[{"name":"d16"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"D16","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",62,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",62,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"ordering"}}],[11,"eq","","",62,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"option"}}],[11,"hash","","",62,null],[11,"clone","","",62,{"inputs":[{"name":"d24"}],"output":{"name":"d24"}}],[11,"fmt","","",62,{"inputs":[{"name":"d24"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"D24","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",63,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",63,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"ordering"}}],[11,"eq","","",63,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"option"}}],[11,"hash","","",63,null],[11,"clone","","",63,{"inputs":[{"name":"d24_s8"}],"output":{"name":"d24_s8"}}],[11,"fmt","","",63,{"inputs":[{"name":"d24_s8"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"D24_S8","gfx::core::format","",null,null],[11,"get_surface_type","gfx_core::format","",64,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"cmp","","",64,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"ordering"}}],[11,"eq","","",64,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"option"}}],[11,"hash","","",64,null],[11,"clone","","",64,{"inputs":[{"name":"d32"}],"output":{"name":"d32"}}],[11,"fmt","","",64,{"inputs":[{"name":"d32"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"D32","gfx::core::format","",null,null],[11,"partial_cmp","gfx_core::format","",65,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"option"}}],[11,"hash","","",65,null],[11,"clone","","",65,{"inputs":[{"name":"channelsource"}],"output":{"name":"channelsource"}}],[11,"fmt","","",65,{"inputs":[{"name":"channelsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",65,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"ordering"}}],[11,"eq","","",65,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"bool"}}],[4,"ChannelSource","gfx::core::format","Source channel in a swizzle configuration. Some may redirect onto\ndifferent physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",65,null],[13,"One","","",65,null],[13,"X","","",65,null],[13,"Y","","",65,null],[13,"Z","","",65,null],[13,"W","","",65,null],[11,"eq","gfx_core::format","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"option"}}],[11,"lt","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"le","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"gt","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ge","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"hash","","",66,null],[11,"clone","","",66,{"inputs":[{"name":"swizzle"}],"output":{"name":"swizzle"}}],[11,"fmt","","",66,{"inputs":[{"name":"swizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",66,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"ordering"}}],[11,"new","","Create a new swizzle where each channel is unmapped.",66,{"inputs":[],"output":{"name":"swizzle"}}],[3,"Swizzle","gfx::core::format","Channel swizzle configuration for the resource views.\nNote: It&#39;s not currently mirrored at compile-time,\nthus providing less safety and convenience.",null,null],[12,"0","","",66,null],[12,"1","","",66,null],[12,"2","","",66,null],[12,"3","","",66,null],[11,"cmp","gfx_core::format","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"eq","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"clone","","",67,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"fmt","","",67,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Format","gfx::core::format","Complete run-time surface format.",null,null],[12,"0","","",67,null],[12,"1","","",67,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",68,null],[10,"get_surface_type","","Return the run-time value of the type.",68,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel.\nFor example, normalized integers are visible as floats.",69,null],[10,"get_channel_type","","Return the run-time value of the type.",69,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",70,null],[16,"Channel","","Associated channel type.",70,null],[16,"View","","Shader view type of this format.",70,null],[11,"get_format","","Return the run-time value of the type.",70,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[11,"cmp","gfx_core::format","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"ordering"}}],[11,"eq","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"option"}}],[11,"lt","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"le","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"gt","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ge","","",71,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"hash","","",71,null],[11,"clone","","",71,{"inputs":[{"name":"u8norm"}],"output":{"name":"u8norm"}}],[11,"fmt","","",71,{"inputs":[{"name":"u8norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cast2","","Convert a 2-element slice.",71,null],[11,"cast3","","Convert a 3-element slice.",71,null],[11,"cast4","","Convert a 4-element slice.",71,null],[11,"cast_slice","","Convert a generic slice by transmutation.",71,null],[11,"from","","",71,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[3,"U8Norm","gfx::core::format","",null,null],[12,"0","","",71,null],[11,"cmp","gfx_core::format","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"ordering"}}],[11,"eq","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"option"}}],[11,"lt","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"le","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"gt","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ge","","",72,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"hash","","",72,null],[11,"clone","","",72,{"inputs":[{"name":"i8norm"}],"output":{"name":"i8norm"}}],[11,"fmt","","",72,{"inputs":[{"name":"i8norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cast2","","Convert a 2-element slice.",72,null],[11,"cast3","","Convert a 3-element slice.",72,null],[11,"cast4","","Convert a 4-element slice.",72,null],[11,"cast_slice","","Convert a generic slice by transmutation.",72,null],[11,"from","","",72,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[3,"I8Norm","gfx::core::format","",null,null],[12,"0","","",72,null],[11,"cast2","gfx_core::format","Convert a 2-element slice.",73,null],[11,"cast3","","Convert a 3-element slice.",73,null],[11,"cast4","","Convert a 4-element slice.",73,null],[11,"cast_slice","","Convert a generic slice by transmutation.",73,null],[11,"from","","",73,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"cmp","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"ordering"}}],[11,"eq","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"option"}}],[11,"lt","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"le","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"gt","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ge","","",73,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"hash","","",73,null],[11,"clone","","",73,{"inputs":[{"name":"u16norm"}],"output":{"name":"u16norm"}}],[11,"fmt","","",73,{"inputs":[{"name":"u16norm"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"U16Norm","gfx::core::format","",null,null],[12,"0","","",73,null],[11,"cast2","gfx_core::format","Convert a 2-element slice.",74,null],[11,"cast3","","Convert a 3-element slice.",74,null],[11,"cast4","","Convert a 4-element slice.",74,null],[11,"cast_slice","","Convert a generic slice by transmutation.",74,null],[11,"from","","",74,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"cmp","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"ordering"}}],[11,"eq","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"option"}}],[11,"lt","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"le","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"gt","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ge","","",74,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"hash","","",74,null],[11,"clone","","",74,{"inputs":[{"name":"i16norm"}],"output":{"name":"i16norm"}}],[11,"fmt","","",74,{"inputs":[{"name":"i16norm"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"I16Norm","gfx::core::format","",null,null],[12,"0","","",74,null],[11,"clone","gfx_core::format","",75,{"inputs":[{"name":"f16"}],"output":{"name":"f16"}}],[11,"fmt","","",75,{"inputs":[{"name":"f16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cast2","","Convert a 2-element slice.",75,null],[11,"cast3","","Convert a 3-element slice.",75,null],[11,"cast4","","Convert a 4-element slice.",75,null],[11,"cast_slice","","Convert a generic slice by transmutation.",75,null],[11,"from","","",75,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"cmp","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"ordering"}}],[11,"eq","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"hash","","",75,null],[3,"F16","gfx::core::format","",null,null],[12,"0","","",75,null],[6,"Vec1","","",null,null],[6,"Vec2","","",null,null],[6,"Vec3","","",null,null],[6,"Vec4","","",null,null],[6,"Rgba8","","",null,null],[6,"Srgba8","","",null,null],[6,"Rgb10a2F","","",null,null],[6,"Rgba16F","","",null,null],[6,"Rgba32F","","",null,null],[6,"Depth","","",null,null],[6,"DepthStencil","","",null,null],[6,"Depth32F","","",null,null],[0,"handle","gfx::core","Device resource handles",null,null],[11,"get_info","gfx_core::handle","Get raw buffer info",76,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"bufferinfo"}}],[11,"clone","","",76,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"rawbuffer"}}],[11,"fmt","","",76,{"inputs":[{"name":"rawbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,null],[11,"eq","","",76,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[3,"RawBuffer","gfx::core::handle","Raw (untyped) Buffer Handle",null,null],[11,"hash","gfx_core::handle","",77,null],[11,"eq","","",77,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"get_info","","Get the associated information about the buffer",77,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferinfo"}}],[11,"len","","Get the number of elements in the buffer.",77,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"new","","",77,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"raw","","",77,{"inputs":[{"name":"buffer"}],"output":{"name":"rawbuffer"}}],[11,"clone","","",77,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"fmt","","",77,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Buffer","gfx::core::handle","Type-safe buffer handle",null,null],[11,"clone","gfx_core::handle","",78,{"inputs":[{"name":"shader"}],"output":{"name":"shader"}}],[11,"fmt","","",78,{"inputs":[{"name":"shader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",78,null],[11,"eq","","",78,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[3,"Shader","gfx::core::handle","Shader Handle",null,null],[11,"get_info","gfx_core::handle","Get program info",79,{"inputs":[{"name":"program"}],"output":{"name":"programinfo"}}],[11,"clone","","",79,{"inputs":[{"name":"program"}],"output":{"name":"program"}}],[11,"fmt","","",79,{"inputs":[{"name":"program"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[3,"Program","gfx::core::handle","Program Handle",null,null],[11,"clone","gfx_core::handle","",80,{"inputs":[{"name":"rawpipelinestate"}],"output":{"name":"rawpipelinestate"}}],[11,"fmt","","",80,{"inputs":[{"name":"rawpipelinestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"rawpipelinestate"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"rawpipelinestate"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[3,"RawPipelineState","gfx::core::handle","Raw Pipeline State Handle",null,null],[11,"get_info","gfx_core::handle","Get texture descriptor",81,{"inputs":[{"name":"rawtexture"}],"output":{"name":"descriptor"}}],[11,"clone","","",81,{"inputs":[{"name":"rawtexture"}],"output":{"name":"rawtexture"}}],[11,"fmt","","",81,{"inputs":[{"name":"rawtexture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,null],[11,"eq","","",81,{"inputs":[{"name":"rawtexture"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"rawtexture"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[3,"RawTexture","gfx::core::handle","Raw texture object",null,null],[11,"clone","gfx_core::handle","",82,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"fmt","","",82,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"get_info","","Get texture descriptor",82,{"inputs":[{"name":"texture"}],"output":{"name":"descriptor"}}],[11,"new","","",82,{"inputs":[{"name":"rawtexture"}],"output":{"name":"texture"}}],[11,"raw","","",82,{"inputs":[{"name":"texture"}],"output":{"name":"rawtexture"}}],[3,"Texture","gfx::core::handle","Typed texture object",null,null],[11,"clone","gfx_core::handle","",83,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"rawshaderresourceview"}}],[11,"fmt","","",83,{"inputs":[{"name":"rawshaderresourceview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,null],[11,"eq","","",83,{"inputs":[{"name":"rawshaderresourceview"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"rawshaderresourceview"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[3,"RawShaderResourceView","gfx::core::handle","Raw Shader Resource View Handle",null,null],[11,"hash","gfx_core::handle","",84,null],[11,"eq","","",84,{"inputs":[{"name":"shaderresourceview"},{"name":"shaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"shaderresourceview"},{"name":"shaderresourceview"}],"output":{"name":"bool"}}],[11,"new","","",84,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"raw","","",84,{"inputs":[{"name":"shaderresourceview"}],"output":{"name":"rawshaderresourceview"}}],[11,"clone","","",84,{"inputs":[{"name":"shaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"fmt","","",84,{"inputs":[{"name":"shaderresourceview"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ShaderResourceView","gfx::core::handle","Type-safe Shader Resource View Handle",null,null],[11,"clone","gfx_core::handle","",85,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"rawunorderedaccessview"}}],[11,"fmt","","",85,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"eq","","",85,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[3,"RawUnorderedAccessView","gfx::core::handle","Raw Unordered Access View Handle",null,null],[11,"new","gfx_core::handle","",86,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"raw","","",86,{"inputs":[{"name":"unorderedaccessview"}],"output":{"name":"rawunorderedaccessview"}}],[11,"clone","","",86,{"inputs":[{"name":"unorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"fmt","","",86,{"inputs":[{"name":"unorderedaccessview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"unorderedaccessview"},{"name":"unorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"unorderedaccessview"},{"name":"unorderedaccessview"}],"output":{"name":"bool"}}],[3,"UnorderedAccessView","gfx::core::handle","Type-safe Unordered Access View Handle",null,null],[11,"get_dimensions","gfx_core::handle","Get target dimensions",87,null],[11,"clone","","",87,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rawrendertargetview"}}],[11,"fmt","","",87,{"inputs":[{"name":"rawrendertargetview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"rawrendertargetview"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"rawrendertargetview"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[3,"RawRenderTargetView","gfx::core::handle","Raw RTV",null,null],[11,"get_dimensions","gfx_core::handle","Get target dimensions",88,null],[11,"clone","","",88,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"rawdepthstencilview"}}],[11,"fmt","","",88,{"inputs":[{"name":"rawdepthstencilview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"inputs":[{"name":"rawdepthstencilview"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"rawdepthstencilview"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[3,"RawDepthStencilView","gfx::core::handle","Raw DSV",null,null],[11,"new","gfx_core::handle","",89,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"raw","","",89,{"inputs":[{"name":"rendertargetview"}],"output":{"name":"rawrendertargetview"}}],[11,"get_dimensions","","Get target dimensions",89,null],[11,"clone","","",89,{"inputs":[{"name":"rendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"fmt","","",89,{"inputs":[{"name":"rendertargetview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",89,null],[11,"eq","","",89,{"inputs":[{"name":"rendertargetview"},{"name":"rendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"rendertargetview"},{"name":"rendertargetview"}],"output":{"name":"bool"}}],[3,"RenderTargetView","gfx::core::handle","Typed RTV",null,null],[11,"clone","gfx_core::handle","",90,{"inputs":[{"name":"depthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"fmt","","",90,{"inputs":[{"name":"depthstencilview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"depthstencilview"},{"name":"depthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"depthstencilview"},{"name":"depthstencilview"}],"output":{"name":"bool"}}],[11,"new","","",90,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"raw","","",90,{"inputs":[{"name":"depthstencilview"}],"output":{"name":"rawdepthstencilview"}}],[11,"get_dimensions","","Get target dimensions",90,null],[3,"DepthStencilView","gfx::core::handle","Typed DSV",null,null],[11,"get_info","gfx_core::handle","Get sampler info",91,{"inputs":[{"name":"sampler"}],"output":{"name":"samplerinfo"}}],[11,"clone","","",91,{"inputs":[{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"fmt","","",91,{"inputs":[{"name":"sampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[3,"Sampler","gfx::core::handle","Sampler Handle",null,null],[11,"clone","gfx_core::handle","",92,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"fmt","","",92,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[3,"Fence","gfx::core::handle","Fence Handle",null,null],[11,"new","gfx_core::handle","Create a new handle manager",93,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",93,null],[11,"extend","","Extend with all references of another handle manager",93,null],[11,"count","","Count the total number of referenced resources",93,{"inputs":[{"name":"manager"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",93,null],[11,"ref_shader","","Reference a shader",93,null],[11,"ref_program","","Reference a program",93,null],[11,"ref_pso","","Reference a pipeline state object",93,null],[11,"ref_texture","","Reference a texture",93,null],[11,"ref_srv","","Reference a shader resource view",93,null],[11,"ref_uav","","Reference an unordered access view",93,null],[11,"ref_rtv","","Reference an RTV",93,null],[11,"ref_dsv","","Reference a DSV",93,null],[11,"ref_sampler","","Reference a sampler",93,null],[11,"ref_fence","","Reference a fence",93,null],[11,"make_buffer","","",93,null],[11,"make_shader","","",93,null],[11,"make_program","","",93,null],[11,"make_pso","","",93,null],[11,"make_texture","","",93,null],[11,"make_buffer_srv","","",93,null],[11,"make_texture_srv","","",93,null],[11,"make_buffer_uav","","",93,null],[11,"make_texture_uav","","",93,null],[11,"make_rtv","","",93,null],[11,"make_dsv","","",93,null],[11,"make_sampler","","",93,null],[11,"make_fence","","",93,null],[11,"clean_with","","",93,null],[3,"Manager","gfx::core::handle","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",94,null],[10,"make_shader","","",94,null],[10,"make_program","","",94,null],[10,"make_pso","","",94,null],[10,"make_texture","","",94,null],[10,"make_buffer_srv","","",94,null],[10,"make_texture_srv","","",94,null],[10,"make_buffer_uav","","",94,null],[10,"make_texture_uav","","",94,null],[10,"make_rtv","","",94,null],[10,"make_dsv","","",94,null],[10,"make_sampler","","",94,null],[10,"make_fence","","",94,null],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",94,null],[0,"mapping","gfx::core","Memory mapping",null,null],[8,"Raw","gfx::core::mapping","Unsafe operations for a buffer mapping",null,null],[10,"set","","Set the element at `index` to `val`. Not bounds-checked.",95,null],[10,"to_slice","","Returns a slice of the specified length.",95,null],[10,"to_mut_slice","","Returns a mutable slice of the specified length.",95,null],[11,"drop","gfx_core::mapping","",96,null],[11,"deref","","",96,null],[3,"Readable","gfx::core::mapping","A handle to a readable map, which can be sliced.",null,null],[11,"drop","gfx_core::mapping","",97,null],[11,"set","","Set a value in the buffer",97,null],[11,"to_mut_slice","","Returns a mutable slice of the specified length.",97,null],[3,"Writable","gfx::core::mapping","A handle to a writable map, which only allows setting elements.",null,null],[11,"drop","gfx_core::mapping","",98,null],[11,"deref_mut","","",98,null],[11,"deref","","",98,null],[3,"RW","gfx::core::mapping","A handle to a complete readable/writable map, which can be sliced both ways.",null,null],[8,"Builder","","A service trait with methods for mapping already implemented.\nTo be used by device back ends.",null,null],[16,"RawMapping","","",99,null],[10,"map_readable","","",99,null],[10,"map_writable","","",99,null],[10,"map_read_write","","",99,null],[0,"pso","gfx::core","Pipeline State Objects",null,null],[6,"BufferOffset","gfx::core::pso","",null,null],[11,"eq","gfx_core::pso","",100,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"creationerror"}],"output":{"name":"creationerror"}}],[3,"CreationError","gfx::core::pso","Error types happening upon PSO creation on the device side.",null,null],[11,"from","gfx_core::pso","",101,{"inputs":[{"name":"blend"}],"output":{"name":"colorinfo"}}],[11,"from","","",101,{"inputs":[{"name":"colormask"}],"output":{"name":"colorinfo"}}],[11,"clone","","",101,{"inputs":[{"name":"colorinfo"}],"output":{"name":"colorinfo"}}],[11,"fmt","","",101,{"inputs":[{"name":"colorinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",101,null],[11,"eq","","",101,{"inputs":[{"name":"colorinfo"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"colorinfo"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[3,"ColorInfo","gfx::core::pso","Color output configuration of the PSO.",null,null],[12,"mask","","Color channel mask",101,null],[12,"color","","Optional color blending",101,null],[12,"alpha","","Optional alpha blending",101,null],[11,"hash","gfx_core::pso","",102,null],[11,"eq","","",102,{"inputs":[{"name":"depthstencilinfo"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"depthstencilinfo"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"from","","",102,null],[11,"from","","",102,{"inputs":[{"name":"stencil"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",102,{"inputs":[{"name":"depth"}],"output":{"name":"depthstencilinfo"}}],[11,"clone","","",102,{"inputs":[{"name":"depthstencilinfo"}],"output":{"name":"depthstencilinfo"}}],[11,"fmt","","",102,{"inputs":[{"name":"depthstencilinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"DepthStencilInfo","gfx::core::pso","Depth and stencil state of the PSO.",null,null],[12,"depth","","Optional depth test configuration",102,null],[12,"front","","Optional stencil test on the front faces",102,null],[12,"back","","Optional stencil test on the back faces",102,null],[6,"ElemOffset","","",null,null],[6,"ElemStride","","",null,null],[6,"InstanceRate","","",null,null],[11,"fmt","gfx_core::pso","",103,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",103,null],[11,"eq","","",103,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[3,"Element","gfx::core::pso","A struct element descriptor.",null,null],[12,"format","","Element format",103,null],[12,"offset","","Offset from the beginning of the container, in bytes",103,null],[12,"stride","","Total container size, in bytes",103,null],[6,"AttributeDesc","","",null,null],[6,"ColorTargetDesc","","",null,null],[6,"DepthStencilDesc","","",null,null],[11,"new","gfx_core::pso","Create a new empty PSO descriptor.",104,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"clone","","",104,{"inputs":[{"name":"descriptor"}],"output":{"name":"descriptor"}}],[11,"fmt","","",104,{"inputs":[{"name":"descriptor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",104,null],[11,"eq","","",104,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[3,"Descriptor","gfx::core::pso","All the information surrounding a shader program that is required\nfor PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",104,null],[12,"rasterizer","","Rasterizer setup",104,null],[12,"scissor","","Enable scissor test",104,null],[12,"attributes","","Vertex attributes",104,null],[12,"color_targets","","Render target views (RTV)",104,null],[12,"depth_stencil","","Depth stencil view (DSV)",104,null],[11,"new","gfx_core::pso","Create an empty set",105,{"inputs":[],"output":{"name":"vertexbufferset"}}],[11,"clone","","",105,{"inputs":[{"name":"vertexbufferset"}],"output":{"name":"vertexbufferset"}}],[11,"fmt","","",105,{"inputs":[{"name":"vertexbufferset"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"VertexBufferSet","gfx::core::pso","A complete set of vertex buffers to be used for vertex import in PSO.",null,null],[12,"0","","Array of buffer handles with offsets in them",105,null],[11,"clone","gfx_core::pso","",106,{"inputs":[{"name":"constantbufferparam"}],"output":{"name":"constantbufferparam"}}],[11,"fmt","","",106,{"inputs":[{"name":"constantbufferparam"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ConstantBufferParam","gfx::core::pso","A constant buffer run-time parameter for PSO.",null,null],[12,"0","","",106,null],[12,"1","","",106,null],[12,"2","","",106,null],[11,"clone","gfx_core::pso","",107,{"inputs":[{"name":"resourceviewparam"}],"output":{"name":"resourceviewparam"}}],[11,"fmt","","",107,{"inputs":[{"name":"resourceviewparam"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ResourceViewParam","gfx::core::pso","A shader resource view (SRV) run-time parameter for PSO.",null,null],[12,"0","","",107,null],[12,"1","","",107,null],[12,"2","","",107,null],[11,"clone","gfx_core::pso","",108,{"inputs":[{"name":"unorderedviewparam"}],"output":{"name":"unorderedviewparam"}}],[11,"fmt","","",108,{"inputs":[{"name":"unorderedviewparam"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"UnorderedViewParam","gfx::core::pso","An unordered access view (UAV) run-time parameter for PSO.",null,null],[12,"0","","",108,null],[12,"1","","",108,null],[12,"2","","",108,null],[11,"clone","gfx_core::pso","",109,{"inputs":[{"name":"samplerparam"}],"output":{"name":"samplerparam"}}],[11,"fmt","","",109,{"inputs":[{"name":"samplerparam"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"SamplerParam","gfx::core::pso","A sampler run-time parameter for PSO.",null,null],[12,"0","","",109,null],[12,"1","","",109,null],[12,"2","","",109,null],[11,"new","gfx_core::pso","Create an empty set",110,{"inputs":[],"output":{"name":"pixeltargetset"}}],[11,"add_color","","Add a color view to the specified slot",110,null],[11,"add_depth_stencil","","Add a depth or stencil view to the specified slot",110,null],[11,"clone","","",110,{"inputs":[{"name":"pixeltargetset"}],"output":{"name":"pixeltargetset"}}],[11,"fmt","","",110,{"inputs":[{"name":"pixeltargetset"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"PixelTargetSet","gfx::core::pso","A complete set of render targets to be used for pixel export in PSO.",null,null],[12,"colors","","Array of color target views",110,null],[12,"depth","","Depth target view",110,null],[12,"stencil","","Stencil target view",110,null],[12,"size","","Rendering dimensions",110,null],[0,"shade","gfx::core","Shader handling.",null,null],[6,"Dimension","gfx::core::shade","",null,null],[11,"clone","gfx_core::shade","",111,{"inputs":[{"name":"isarray"}],"output":{"name":"isarray"}}],[11,"eq","","",111,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"isarray"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"IsArray","gfx::core::shade","Whether the sampler samples an array texture.",null,null],[13,"Array","","",111,null],[13,"NoArray","","",111,null],[11,"clone","gfx_core::shade","",112,{"inputs":[{"name":"iscomparison"}],"output":{"name":"iscomparison"}}],[11,"eq","","",112,{"inputs":[{"name":"iscomparison"},{"name":"iscomparison"}],"output":{"name":"bool"}}],[11,"fmt","","",112,{"inputs":[{"name":"iscomparison"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"IsComparison","gfx::core::shade","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",112,null],[13,"NoCompare","","",112,null],[11,"clone","gfx_core::shade","",113,{"inputs":[{"name":"ismultisample"}],"output":{"name":"ismultisample"}}],[11,"eq","","",113,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"fmt","","",113,{"inputs":[{"name":"ismultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"IsMultiSample","gfx::core::shade","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",113,null],[13,"NoMultiSample","","",113,null],[11,"clone","gfx_core::shade","",114,{"inputs":[{"name":"isrect"}],"output":{"name":"isrect"}}],[11,"eq","","",114,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"isrect"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"IsRect","gfx::core::shade","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",114,null],[13,"NoRect","","",114,null],[11,"clone","gfx_core::shade","",115,{"inputs":[{"name":"matrixformat"}],"output":{"name":"matrixformat"}}],[11,"eq","","",115,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"matrixformat"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"MatrixFormat","gfx::core::shade","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",115,null],[13,"RowMajor","","",115,null],[11,"can_sample","gfx_core::shade","Check if this texture can be used with a sampler.",116,{"inputs":[{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"texturetype"}],"output":{"name":"texturetype"}}],[11,"eq","","",116,{"inputs":[{"name":"texturetype"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"texturetype"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"texturetype"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"TextureType","gfx::core::shade","A type of the texture variable.\nThis has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",116,null],[13,"D1","","Sample from a 1D texture",116,null],[13,"D2","","Sample from a 2D texture",116,null],[13,"D3","","Sample from a 3D texture",116,null],[13,"Cube","","Sample from a cubemap.",116,null],[11,"clone","gfx_core::shade","",117,{"inputs":[{"name":"samplertype"}],"output":{"name":"samplertype"}}],[11,"eq","","",117,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"fmt","","",117,{"inputs":[{"name":"samplertype"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"SamplerType","gfx::core::shade","A type of the sampler variable.",null,null],[12,"0","","",117,null],[12,"1","","",117,null],[11,"clone","gfx_core::shade","",118,{"inputs":[{"name":"basetype"}],"output":{"name":"basetype"}}],[11,"eq","","",118,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"fmt","","",118,{"inputs":[{"name":"basetype"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"BaseType","gfx::core::shade","Base type of this shader parameter.",null,null],[13,"I32","","",118,null],[13,"U32","","",118,null],[13,"F32","","",118,null],[13,"F64","","",118,null],[13,"Bool","","",118,null],[11,"clone","gfx_core::shade","",119,{"inputs":[{"name":"containertype"}],"output":{"name":"containertype"}}],[11,"eq","","",119,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"fmt","","",119,{"inputs":[{"name":"containertype"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"ContainerType","gfx::core::shade","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",119,null],[13,"Vector","","A vector with `Dimension` components.",119,null],[13,"Matrix","","A matrix.",119,null],[11,"hash","gfx_core::shade","",120,null],[11,"eq","","",120,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"stage"}],"output":{"name":"stage"}}],[11,"fmt","","",120,{"inputs":[{"name":"stage"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Stage","gfx::core::shade","Which program stage this shader represents.",null,null],[13,"Vertex","","",120,null],[13,"Geometry","","",120,null],[13,"Pixel","","",120,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[6,"Location","","",null,null],[11,"fmt","gfx_core::shade","",121,{"inputs":[{"name":"uniformvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"uniformvalue"}],"output":{"name":"uniformvalue"}}],[4,"UniformValue","gfx::core::shade","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",121,null],[13,"F32","","",121,null],[13,"I32Vector2","","",121,null],[13,"I32Vector3","","",121,null],[13,"I32Vector4","","",121,null],[13,"F32Vector2","","",121,null],[13,"F32Vector3","","",121,null],[13,"F32Vector4","","",121,null],[13,"F32Matrix2","","",121,null],[13,"F32Matrix3","","",121,null],[13,"F32Matrix4","","",121,null],[6,"ConstFormat","","",null,null],[8,"BaseTyped","","A trait that statically links simple data types to\nbase types of the shader constants.",null,null],[10,"get_base_type","","",122,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",123,null],[11,"hash","gfx_core::shade","",124,null],[11,"eq","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"cmp","","",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"bitor","","Returns the union of the two sets of flags.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"empty","","Returns an empty set of flags.",124,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",124,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",124,{"inputs":[{"name":"usage"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",124,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",124,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,{"inputs":[{"name":"usage"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",124,{"inputs":[{"name":"usage"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",124,null],[11,"remove","","Removes the specified flags in-place.",124,null],[11,"toggle","","Toggles the specified flags in-place.",124,null],[11,"fmt","","",124,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","Returns the set difference of the two sets of flags.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",124,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"from","","",124,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"from_iter","","",124,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"not","","Returns the complement of this set of flags.",124,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[3,"Usage","gfx::core::shade","Parameter usage flags.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[11,"clone","gfx_core::shade","",125,{"inputs":[{"name":"attributevar"}],"output":{"name":"attributevar"}}],[11,"eq","","",125,{"inputs":[{"name":"attributevar"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"attributevar"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"attributevar"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"AttributeVar","gfx::core::shade","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",125,null],[12,"slot","","Slot of the vertex attribute.",125,null],[12,"base_type","","Type that this attribute is composed of.",125,null],[12,"container","","&quot;Scalarness&quot; of this attribute.",125,null],[11,"clone","gfx_core::shade","",126,{"inputs":[{"name":"constvar"}],"output":{"name":"constvar"}}],[11,"eq","","",126,{"inputs":[{"name":"constvar"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"constvar"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"constvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",126,{"inputs":[{"name":"constvar"},{"name":"uniformvalue"}],"output":{"name":"result"}}],[3,"ConstVar","gfx::core::shade","A constant in the shader - a bit of data that doesn&#39;t vary",null,null],[12,"name","","Name of this constant.",126,null],[12,"location","","Location of this constant in the program.",126,null],[12,"count","","Number of elements this constant represents.",126,null],[12,"base_type","","Type that this constant is composed of",126,null],[12,"container","","&quot;Scalarness&quot; of this constant.",126,null],[11,"clone","gfx_core::shade","",127,{"inputs":[{"name":"constantbuffervar"}],"output":{"name":"constantbuffervar"}}],[11,"eq","","",127,{"inputs":[{"name":"constantbuffervar"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"constantbuffervar"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"fmt","","",127,{"inputs":[{"name":"constantbuffervar"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ConstantBufferVar","gfx::core::shade","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",127,null],[12,"slot","","Slot of the constant buffer.",127,null],[12,"size","","Size (in bytes) of this buffer&#39;s data.",127,null],[12,"usage","","What program stage this buffer is used in.",127,null],[11,"clone","gfx_core::shade","",128,{"inputs":[{"name":"texturevar"}],"output":{"name":"texturevar"}}],[11,"eq","","",128,{"inputs":[{"name":"texturevar"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"texturevar"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"fmt","","",128,{"inputs":[{"name":"texturevar"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"TextureVar","gfx::core::shade","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",128,null],[12,"slot","","Slot of this texture variable.",128,null],[12,"base_type","","Base type for the texture.",128,null],[12,"ty","","Type of this texture.",128,null],[12,"usage","","What program stage this texture is used in.",128,null],[11,"clone","gfx_core::shade","",129,{"inputs":[{"name":"unorderedvar"}],"output":{"name":"unorderedvar"}}],[11,"eq","","",129,{"inputs":[{"name":"unorderedvar"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"unorderedvar"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"fmt","","",129,{"inputs":[{"name":"unorderedvar"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"UnorderedVar","gfx::core::shade","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",129,null],[12,"slot","","Slot of this unordered variable.",129,null],[12,"usage","","What program stage this UAV is used in.",129,null],[11,"clone","gfx_core::shade","",130,{"inputs":[{"name":"samplervar"}],"output":{"name":"samplervar"}}],[11,"eq","","",130,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"fmt","","",130,{"inputs":[{"name":"samplervar"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"SamplerVar","gfx::core::shade","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",130,null],[12,"slot","","Slot of this sampler variable.",130,null],[12,"ty","","Type of this sampler.",130,null],[12,"usage","","What program stage this texture is used in.",130,null],[11,"eq","gfx_core::shade","",131,{"inputs":[{"name":"outputvar"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"outputvar"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"fmt","","",131,{"inputs":[{"name":"outputvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"outputvar"}],"output":{"name":"outputvar"}}],[3,"OutputVar","gfx::core::shade","Target output variable.",null,null],[12,"name","","Name of this output variable.",131,null],[12,"slot","","Output color target index.",131,null],[12,"base_type","","Type of the output component.",131,null],[12,"container","","&quot;Scalarness&quot; of this output.",131,null],[11,"clone","gfx_core::shade","",132,{"inputs":[{"name":"programinfo"}],"output":{"name":"programinfo"}}],[11,"eq","","",132,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"programinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ProgramInfo","gfx::core::shade","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",132,null],[12,"globals","","Global constants in the program",132,null],[12,"constant_buffers","","Constant buffers in the program",132,null],[12,"textures","","Textures in the program",132,null],[12,"unordereds","","Unordered access resources in the program",132,null],[12,"samplers","","Samplers in the program",132,null],[12,"outputs","","Output targets in the program",132,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",132,null],[11,"fmt","gfx_core::shade","",133,{"inputs":[{"name":"compatibilityerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"compatibilityerror"}],"output":{"name":"compatibilityerror"}}],[4,"CompatibilityError","gfx::core::shade","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",133,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",133,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\netc)",133,null],[11,"clone","gfx_core::shade","",134,{"inputs":[{"name":"createshadererror"}],"output":{"name":"createshadererror"}}],[11,"eq","","",134,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"createshadererror"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"CreateShaderError","gfx::core::shade","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",134,null],[13,"StageNotSupported","","The device does not support the shader stage.",134,null],[13,"CompilationFailed","","The shader failed to compile.",134,null],[6,"CreateProgramError","","",null,null],[0,"tex","gfx::core","Texture creation and modification.",null,null],[11,"clone","gfx_core::tex","",135,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",135,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",135,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[4,"Error","gfx::core::tex","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",135,null],[13,"Kind","","The kind doesn&#39;t support a particular operation.",135,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",135,null],[13,"Size","","Unsupported size in one of the dimensions.",135,null],[13,"Data","","The given data has a different size than the target texture slice.",135,null],[6,"Size","","",null,null],[6,"Bits","","",null,null],[6,"NumSamples","","",null,null],[6,"NumFragments","","",null,null],[6,"Dimensions","","",null,null],[11,"eq","gfx_core::tex","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"option"}}],[11,"lt","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"hash","","",136,null],[11,"clone","","",136,{"inputs":[{"name":"aamode"}],"output":{"name":"aamode"}}],[11,"fmt","","",136,{"inputs":[{"name":"aamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_num_fragments","","Return the number of actual data fragments stored per texel.",136,{"inputs":[{"name":"aamode"}],"output":{"name":"u8"}}],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",136,{"inputs":[{"name":"aamode"}],"output":{"name":"bool"}}],[11,"from","","",136,{"inputs":[{"name":"u8"}],"output":{"name":"aamode"}}],[11,"cmp","","",136,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"ordering"}}],[4,"AaMode","gfx::core::tex","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",136,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",136,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",136,null],[11,"hash","gfx_core::tex","",137,null],[11,"clone","","",137,{"inputs":[{"name":"filtermethod"}],"output":{"name":"filtermethod"}}],[11,"fmt","","",137,{"inputs":[{"name":"filtermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"option"}}],[11,"lt","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"cmp","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"eq","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[4,"FilterMethod","gfx::core::tex","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They &quot;layer&quot; on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",137,null],[13,"Mipmap","","Add simple mipmapping.",137,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",137,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",137,null],[13,"Anisotropic","","Anisotropic filtering with a given &quot;max&quot;, must be between 1 and 16,\ninclusive.",137,null],[11,"eq","gfx_core::tex","",138,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"option"}}],[11,"hash","","",138,null],[11,"clone","","",138,{"inputs":[{"name":"cubeface"}],"output":{"name":"cubeface"}}],[11,"fmt","","",138,{"inputs":[{"name":"cubeface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",138,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[4,"CubeFace","gfx::core::tex","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",138,null],[13,"NegX","","",138,null],[13,"PosY","","",138,null],[13,"NegY","","",138,null],[13,"PosZ","","",138,null],[13,"NegZ","","",138,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[11,"get_dimensions","gfx_core::tex","Get texture dimensions, with 0 values where not applicable.",139,null],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",139,null],[11,"get_num_levels","","Count the number of mipmap levels.",139,{"inputs":[{"name":"kind"}],"output":{"name":"u8"}}],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",139,{"inputs":[{"name":"kind"}],"output":{"name":"option"}}],[11,"is_cube","","Check if it&#39;s one of the cube kinds.",139,{"inputs":[{"name":"kind"}],"output":{"name":"bool"}}],[11,"cmp","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"eq","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"hash","","",139,null],[11,"clone","","",139,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"fmt","","",139,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Kind","gfx::core::tex","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",139,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",139,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",139,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",139,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",139,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",139,null],[13,"CubeArray","","An array of Cube textures.",139,null],[11,"get_texel_count","gfx_core::tex","Get the total number of texels.",140,{"inputs":[{"name":"imageinfocommon"}],"output":{"name":"usize"}}],[11,"convert","","Convert into a differently typed format.",140,{"inputs":[{"name":"imageinfocommon"},{"name":"t"}],"output":{"name":"imageinfocommon"}}],[11,"is_inside","","Check if it fits inside given dimensions.",140,null],[11,"cmp","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"ordering"}}],[11,"eq","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"hash","","",140,null],[11,"clone","","",140,{"inputs":[{"name":"imageinfocommon"}],"output":{"name":"imageinfocommon"}}],[11,"fmt","","",140,{"inputs":[{"name":"imageinfocommon"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ImageInfoCommon","gfx::core::tex","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",140,null],[12,"yoffset","","",140,null],[12,"zoffset","","",140,null],[12,"width","","",140,null],[12,"height","","",140,null],[12,"depth","","",140,null],[12,"format","","Format of each texel.",140,null],[12,"mipmap","","Which mipmap to select.",140,null],[6,"RawImageInfo","","",null,null],[6,"NewImageInfo","","",null,null],[11,"fmt","gfx_core::tex","",141,{"inputs":[{"name":"wrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",141,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",141,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"option"}}],[11,"hash","","",141,null],[11,"eq","","",141,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"wrapmode"}],"output":{"name":"wrapmode"}}],[4,"WrapMode","gfx::core::tex","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",141,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",141,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",141,null],[13,"Border","","Use border color.",141,null],[11,"from","gfx_core::tex","",142,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"fmt","","",142,{"inputs":[{"name":"lod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",142,null],[11,"eq","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"into","","",142,{"inputs":[{"name":"lod"}],"output":{"name":"f32"}}],[11,"clone","","",142,{"inputs":[{"name":"lod"}],"output":{"name":"lod"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"option"}}],[11,"lt","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"le","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"gt","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ge","","",142,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[3,"Lod","gfx::core::tex","A wrapper for the LOD level of a texture.",null,null],[11,"from","gfx_core::tex","",143,null],[11,"hash","","",143,null],[11,"eq","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"packedcolor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"packedcolor"}],"output":{"name":"packedcolor"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"into","","",143,null],[3,"PackedColor","gfx::core::tex","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",143,null],[11,"new","gfx_core::tex","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",144,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",144,null],[11,"eq","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"samplerinfo"}],"output":{"name":"samplerinfo"}}],[3,"SamplerInfo","gfx::core::tex","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",144,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak).",144,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",144,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",144,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",144,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",144,null],[11,"eq","gfx_core::tex","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"option"}}],[11,"lt","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"le","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"gt","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ge","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"to_image_info","","Get image info for a given mip.",145,{"inputs":[{"name":"descriptor"},{"name":"u8"}],"output":{"name":"imageinfocommon"}}],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",145,{"inputs":[{"name":"descriptor"},{"name":"channeltype"},{"name":"u8"}],"output":{"name":"imageinfocommon"}}],[11,"cmp","","",145,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"ordering"}}],[11,"hash","","",145,null],[11,"clone","","",145,{"inputs":[{"name":"descriptor"}],"output":{"name":"descriptor"}}],[11,"fmt","","",145,{"inputs":[{"name":"descriptor"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Descriptor","gfx::core::tex","Texture storage descriptor.",null,null],[12,"kind","","",145,null],[12,"levels","","",145,null],[12,"format","","",145,null],[12,"bind","","",145,null],[12,"usage","","",145,null],[11,"hash","gfx_core::tex","",146,null],[11,"cmp","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"ordering"}}],[11,"eq","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"resourcedesc"}],"output":{"name":"resourcedesc"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"option"}}],[11,"lt","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"le","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"gt","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ge","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"fmt","","",146,{"inputs":[{"name":"resourcedesc"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"ResourceDesc","gfx::core::tex","Texture resource view descriptor.",null,null],[12,"channel","","",146,null],[12,"min","","",146,null],[12,"max","","",146,null],[12,"swizzle","","",146,null],[11,"eq","gfx_core::tex","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"fmt","","",147,{"inputs":[{"name":"renderdesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"renderdesc"}],"output":{"name":"renderdesc"}}],[11,"cmp","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"hash","","",147,null],[3,"RenderDesc","gfx::core::tex","Texture render view descriptor.",null,null],[12,"channel","","",147,null],[12,"level","","",147,null],[12,"layer","","",147,null],[11,"clone","gfx_core::tex","",148,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"option"}}],[11,"lt","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"le","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"gt","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ge","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"bitor","","Returns the union of the two sets of flags.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"hash","","",148,null],[11,"cmp","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"ordering"}}],[11,"eq","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"not","","Returns the complement of this set of flags.",148,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"from_iter","","",148,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"empty","","Returns an empty set of flags.",148,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",148,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",148,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",148,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",148,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",148,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",148,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",148,null],[11,"remove","","Removes the specified flags in-place.",148,null],[11,"toggle","","Toggles the specified flags in-place.",148,null],[11,"bitand","","Returns the intersection between the two sets of flags.",148,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"fmt","","",148,{"inputs":[{"name":"depthstencilflags"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"DepthStencilFlags","gfx::core::tex","Depth-stencil read-only flags",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[11,"cmp","gfx_core::tex","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"ordering"}}],[11,"fmt","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"hash","","",149,null],[11,"clone","","",149,{"inputs":[{"name":"depthstencildesc"}],"output":{"name":"depthstencildesc"}}],[11,"eq","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"from","","",149,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[3,"DepthStencilDesc","gfx::core::tex","Texture depth-stencil view descriptor.",null,null],[12,"level","","",149,null],[12,"layer","","",149,null],[12,"flags","","",149,null],[6,"Level","","",null,null],[6,"Layer","","",null,null],[17,"MAX_VERTEX_ATTRIBUTES","gfx::core","Compile-time maximum number of vertex attributes.",null,null],[17,"MAX_COLOR_TARGETS","","Compile-time maximum number of color targets.",null,null],[17,"MAX_CONSTANT_BUFFERS","","Compile-time maximum number of constant buffers.",null,null],[17,"MAX_RESOURCE_VIEWS","","Compile-time maximum number of shader resource views (SRV).",null,null],[17,"MAX_UNORDERED_VIEWS","","Compile-time maximum number of unordered access views (UAV).",null,null],[17,"MAX_SAMPLERS","","Compile-time maximum number of samplers.",null,null],[6,"VertexCount","","",null,null],[6,"InstanceCount","","",null,null],[6,"AttributeSlot","","",null,null],[6,"ConstantBufferSlot","","",null,null],[6,"ResourceViewSlot","","",null,null],[6,"UnorderedViewSlot","","",null,null],[6,"ColorSlot","","",null,null],[6,"SamplerSlot","","",null,null],[11,"reference","gfx_core","",150,null],[3,"VertexShader","gfx::core","",null,null],[11,"reference","gfx_core","",151,null],[3,"HullShader","gfx::core","",null,null],[11,"reference","gfx_core","",152,null],[3,"DomainShader","gfx::core","",null,null],[11,"reference","gfx_core","",153,null],[3,"GeometryShader","gfx::core","",null,null],[11,"reference","gfx_core","",154,null],[3,"PixelShader","gfx::core","",null,null],[11,"get_usage","gfx_core","Return the aggregated stage usage for the set.",155,{"inputs":[{"name":"shaderset"}],"output":{"name":"usage"}}],[4,"ShaderSet","gfx::core","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",155,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",155,null],[11,"clone","gfx_core","",156,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"fmt","","",156,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Capabilities","gfx::core","Features that the device supports.",null,null],[12,"max_vertex_count","","",156,null],[12,"max_index_count","","",156,null],[12,"max_texture_size","","",156,null],[12,"instance_base_supported","","",156,null],[12,"instance_call_supported","","",156,null],[12,"instance_rate_supported","","",156,null],[12,"vertex_base_supported","","",156,null],[12,"srgb_color_supported","","",156,null],[12,"constant_buffer_supported","","",156,null],[12,"unordered_access_view_supported","","",156,null],[12,"separate_blending_slots_supported","","",156,null],[11,"eq","gfx_core","",157,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",157,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"clone","","",157,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[4,"Primitive","gfx::core","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",157,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",157,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a &quot;path&quot; of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",157,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",157,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",157,null],[11,"clone","gfx_core","",158,{"inputs":[{"name":"indextype"}],"output":{"name":"indextype"}}],[11,"cmp","","",158,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"ordering"}}],[11,"fmt","","",158,{"inputs":[{"name":"indextype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"option"}}],[11,"hash","","",158,null],[4,"IndexType","gfx::core","A type of each index value in the mesh&#39;s index buffer",null,null],[13,"U8","","",158,null],[13,"U16","","",158,null],[13,"U32","","",158,null],[8,"Resources","","Resources pertaining to a specific API.",null,null],[16,"Buffer","","",159,null],[16,"Shader","","",159,null],[16,"Program","","",159,null],[16,"PipelineStateObject","","",159,null],[16,"Texture","","",159,null],[16,"ShaderResourceView","","",159,null],[16,"UnorderedAccessView","","",159,null],[16,"RenderTargetView","","",159,null],[16,"DepthStencilView","","",159,null],[16,"Sampler","","",159,null],[16,"Fence","","",159,null],[8,"Device","","An interface for performing draw calls using a specific graphics API",null,null],[16,"Resources","","Associated resources type.",160,null],[16,"CommandBuffer","","Associated command buffer type.",160,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation.",160,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",160,null],[10,"submit","","Submit a command buffer for execution.",160,null],[10,"cleanup","","Cleanup unused resources, to be called between frames.",160,null],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",161,null],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",161,null],[8,"Factory","","",null,null],[16,"Mapper","","Associated mapper type",35,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",35,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",35,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[10,"create_buffer_const_raw","","",35,null],[11,"create_buffer_const","","",35,null],[11,"create_buffer_dynamic","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"}],"output":{"name":"result"}}],[11,"create_buffer_staging","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"},{"name":"mapaccess"}],"output":{"name":"result"}}],[10,"create_pipeline_state_raw","","",35,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[10,"create_program","","",35,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[10,"create_shader","","",35,null],[11,"create_shader_vertex","","",35,null],[11,"create_shader_geometry","","",35,null],[11,"create_shader_pixel","","",35,null],[10,"create_sampler","","",35,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"map_buffer_raw","","",35,null],[10,"unmap_buffer_raw","","",35,null],[10,"map_buffer_readable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",35,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[10,"view_texture_as_render_target_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_texture","","",35,{"inputs":[{"name":"factory"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource","","",35,null],[11,"view_texture_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"},{"name":"depthstencilflags"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_texture_const_u8","","",35,null],[11,"create_texture_const","","",35,null],[11,"create_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil_view_only","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[0,"target","","Render target specification.",null,null],[6,"Layer","gfx::core::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[11,"fmt","draw_state::target","",162,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",162,null],[11,"eq","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",162,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[3,"Rect","gfx::core::target","A screen space rectangle",null,null],[12,"x","","",162,null],[12,"y","","",162,null],[12,"w","","",162,null],[12,"h","","",162,null],[6,"ColorValue","","",null,null],[11,"eq","draw_state::target","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"cmp","","",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"hash","","",163,null],[11,"from_iter","","",163,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",163,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitor","","Returns the union of the two sets of flags.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"empty","","Returns an empty set of flags.",163,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",163,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",163,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",163,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",163,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",163,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",163,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",163,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",163,null],[11,"remove","","Removes the specified flags in-place.",163,null],[11,"toggle","","Toggles the specified flags in-place.",163,null],[11,"fmt","","",163,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Mirror","gfx::core::target","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[0,"state","gfx::core","Fixed-function hardware state.",null,null],[4,"FrontFace","gfx::core::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","",null,null],[6,"OffsetSlope","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",3,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[12,"samples","","Multi-sampling mode.",5,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",6,null],[13,"Less","","`x &lt; y`",6,null],[13,"LessEqual","","`x &lt;= y`",6,null],[13,"Equal","","`x == y`",6,null],[13,"GreaterEqual","","`x &gt;= y`",6,null],[13,"Greater","","`x &gt; y`",6,null],[13,"NotEqual","","`x != y`",6,null],[13,"Always","","`true`",6,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",7,null],[13,"Zero","","Set the value in the stencil buffer to zero.",7,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",7,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",7,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",7,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",7,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",7,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",7,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",8,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",8,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",8,null],[12,"op_fail","","What operation to do if the stencil test fails.",8,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",8,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",8,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",9,null],[12,"back","","",9,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",10,null],[12,"write","","Specify whether to write to the depth buffer or not.",10,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",11,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",11,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",11,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",12,null],[13,"SourceAlpha","","",12,null],[13,"DestColor","","",12,null],[13,"DestAlpha","","",12,null],[13,"ConstColor","","",12,null],[13,"ConstAlpha","","",12,null],[4,"Factor","","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SourceAlphaSaturated","","",13,null],[13,"ZeroPlus","","",13,null],[13,"OneMinus","","",13,null],[3,"BlendChannel","","",null,null],[12,"equation","","",14,null],[12,"source","","",14,null],[12,"destination","","",14,null],[3,"Blend","","",null,null],[12,"color","","",15,null],[12,"alpha","","",15,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",17,null],[12,"blend","","Optional blending.",17,null],[3,"RefValues","","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",18,null],[12,"blend","","Constant blend color.",18,null],[8,"Device","gfx","An interface for performing draw calls using a specific graphics API",null,null],[16,"Resources","","Associated resources type.",160,null],[16,"CommandBuffer","","Associated command buffer type.",160,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation.",160,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",160,null],[10,"submit","","Submit a command buffer for execution.",160,null],[10,"cleanup","","Cleanup unused resources, to be called between frames.",160,null],[8,"Resources","","Resources pertaining to a specific API.",null,null],[16,"Buffer","","",159,null],[16,"Shader","","",159,null],[16,"Program","","",159,null],[16,"PipelineStateObject","","",159,null],[16,"Texture","","",159,null],[16,"ShaderResourceView","","",159,null],[16,"UnorderedAccessView","","",159,null],[16,"RenderTargetView","","",159,null],[16,"DepthStencilView","","",159,null],[16,"Sampler","","",159,null],[16,"Fence","","",159,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",157,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",157,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a &quot;path&quot; of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",157,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",157,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",157,null],[6,"VertexCount","","",null,null],[6,"InstanceCount","","",null,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",155,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",155,null],[3,"VertexShader","","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[0,"format","","Universal format specification.\nApplicable to textures, views, and vertex buffers.",null,null],[4,"ChannelType","gfx::format","Type of a surface channel. This is how we interpret the\nstorage allocated with `SurfaceType`.",null,null],[13,"Int","","",36,null],[13,"Uint","","",36,null],[13,"Inorm","","",36,null],[13,"Unorm","","",36,null],[13,"Float","","",36,null],[13,"Srgb","","",36,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only\ncarry information about the number of bits per each channel.\nThe actual types are up to the views to decide and interpret.\nThe actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",43,null],[13,"R4_G4_B4_A4","","",43,null],[13,"R5_G5_B5_A1","","",43,null],[13,"R5_G6_B5","","",43,null],[13,"R8","","",43,null],[13,"R8_G8","","",43,null],[13,"R8_G8_B8_A8","","",43,null],[13,"R10_G10_B10_A2","","",43,null],[13,"R11_G11_B10","","",43,null],[13,"R16","","",43,null],[13,"R16_G16","","",43,null],[13,"R16_G16_B16","","",43,null],[13,"R16_G16_B16_A16","","",43,null],[13,"R32","","",43,null],[13,"R32_G32","","",43,null],[13,"R32_G32_B32","","",43,null],[13,"R32_G32_B32_A32","","",43,null],[13,"D16","","",43,null],[13,"D24","","",43,null],[13,"D24_S8","","",43,null],[13,"D32","","",43,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto\ndifferent physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",65,null],[13,"One","","",65,null],[13,"X","","",65,null],[13,"Y","","",65,null],[13,"Z","","",65,null],[13,"W","","",65,null],[3,"Swizzle","","Channel swizzle configuration for the resource views.\nNote: It&#39;s not currently mirrored at compile-time,\nthus providing less safety and convenience.",null,null],[12,"0","","",66,null],[12,"1","","",66,null],[12,"2","","",66,null],[12,"3","","",66,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",67,null],[12,"1","","",67,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",68,null],[10,"get_surface_type","","Return the run-time value of the type.",68,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel.\nFor example, normalized integers are visible as floats.",69,null],[10,"get_channel_type","","Return the run-time value of the type.",69,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",70,null],[16,"Channel","","Associated channel type.",70,null],[16,"View","","Shader view type of this format.",70,null],[11,"get_format","","Return the run-time value of the type.",70,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[3,"U8Norm","","",null,null],[12,"0","","",71,null],[3,"I8Norm","","",null,null],[12,"0","","",72,null],[3,"U16Norm","","",null,null],[12,"0","","",73,null],[3,"I16Norm","","",null,null],[12,"0","","",74,null],[3,"F16","","",null,null],[12,"0","","",75,null],[6,"Vec1","","",null,null],[6,"Vec2","","",null,null],[6,"Vec3","","",null,null],[6,"Vec4","","",null,null],[6,"Rgba8","","",null,null],[6,"Srgba8","","",null,null],[6,"Rgb10a2F","","",null,null],[6,"Rgba16F","","",null,null],[6,"Rgba32F","","",null,null],[6,"Depth","","",null,null],[6,"DepthStencil","","",null,null],[6,"Depth32F","","",null,null],[0,"handle","gfx","Device resource handles",null,null],[3,"RawBuffer","gfx::handle","Raw (untyped) Buffer Handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture object",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",94,null],[10,"make_shader","","",94,null],[10,"make_program","","",94,null],[10,"make_pso","","",94,null],[10,"make_texture","","",94,null],[10,"make_buffer_srv","","",94,null],[10,"make_texture_srv","","",94,null],[10,"make_buffer_uav","","",94,null],[10,"make_texture_uav","","",94,null],[10,"make_rtv","","",94,null],[10,"make_dsv","","",94,null],[10,"make_sampler","","",94,null],[10,"make_fence","","",94,null],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",94,null],[0,"tex","gfx","Texture creation and modification.",null,null],[4,"Error","gfx::tex","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",135,null],[13,"Kind","","The kind doesn&#39;t support a particular operation.",135,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",135,null],[13,"Size","","Unsupported size in one of the dimensions.",135,null],[13,"Data","","The given data has a different size than the target texture slice.",135,null],[6,"Size","","",null,null],[6,"Bits","","",null,null],[6,"NumSamples","","",null,null],[6,"NumFragments","","",null,null],[6,"Dimensions","","",null,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",136,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",136,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",136,null],[4,"FilterMethod","","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They &quot;layer&quot; on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",137,null],[13,"Mipmap","","Add simple mipmapping.",137,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",137,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",137,null],[13,"Anisotropic","","Anisotropic filtering with a given &quot;max&quot;, must be between 1 and 16,\ninclusive.",137,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",138,null],[13,"NegX","","",138,null],[13,"PosY","","",138,null],[13,"NegY","","",138,null],[13,"PosZ","","",138,null],[13,"NegZ","","",138,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",139,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",139,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",139,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",139,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",139,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",139,null],[13,"CubeArray","","An array of Cube textures.",139,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",140,null],[12,"yoffset","","",140,null],[12,"zoffset","","",140,null],[12,"width","","",140,null],[12,"height","","",140,null],[12,"depth","","",140,null],[12,"format","","Format of each texel.",140,null],[12,"mipmap","","Which mipmap to select.",140,null],[6,"RawImageInfo","","",null,null],[6,"NewImageInfo","","",null,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",141,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",141,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",141,null],[13,"Border","","Use border color.",141,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",143,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",144,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak).",144,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",144,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",144,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",144,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",144,null],[3,"Descriptor","","Texture storage descriptor.",null,null],[12,"kind","","",145,null],[12,"levels","","",145,null],[12,"format","","",145,null],[12,"bind","","",145,null],[12,"usage","","",145,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",146,null],[12,"min","","",146,null],[12,"max","","",146,null],[12,"swizzle","","",146,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",147,null],[12,"level","","",147,null],[12,"layer","","",147,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",149,null],[12,"layer","","",149,null],[12,"flags","","",149,null],[6,"Level","","",null,null],[6,"Layer","","",null,null],[8,"Factory","gfx","",null,null],[16,"Mapper","","Associated mapper type",35,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",35,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",35,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[10,"create_buffer_const_raw","","",35,null],[11,"create_buffer_const","","",35,null],[11,"create_buffer_dynamic","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"}],"output":{"name":"result"}}],[11,"create_buffer_staging","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"},{"name":"mapaccess"}],"output":{"name":"result"}}],[10,"create_pipeline_state_raw","","",35,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[10,"create_program","","",35,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[10,"create_shader","","",35,null],[11,"create_shader_vertex","","",35,null],[11,"create_shader_geometry","","",35,null],[11,"create_shader_pixel","","",35,null],[10,"create_sampler","","",35,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"map_buffer_raw","","",35,null],[10,"unmap_buffer_raw","","",35,null],[10,"map_buffer_readable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",35,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[10,"view_texture_as_render_target_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_texture","","",35,{"inputs":[{"name":"factory"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource","","",35,null],[11,"view_texture_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"},{"name":"depthstencilflags"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_texture_const_u8","","",35,null],[11,"create_texture_const","","",35,null],[11,"create_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil_view_only","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[4,"Usage","","A hint as to how this buffer/texture will be used.",null,null],[13,"GpuOnly","","GPU: read + write, CPU: copy. Optimal for render targets.",28,null],[13,"Const","","GPU: read, CPU: none. Optimal for resourced textures/buffers.",28,null],[13,"Dynamic","","GPU: read, CPU: write.",28,null],[13,"CpuOnly","","GPU: copy, CPU: as specified. Used as a staging buffer,\nto be copied back and forth with on-GPU targets.",28,null],[3,"Bind","","Bind flags",null,null],[4,"MapAccess","","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",25,null],[13,"Writable","","Only allow writes.",25,null],[13,"RW","","Allow full access.",25,null],[4,"ResourceViewError","","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag does not present in the texture.",32,null],[13,"Channel","","Selected channel type is not supported for this texture.",32,null],[13,"Unsupported","","The backend refused for some reason.",32,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag does not present in the texture.",33,null],[13,"BadLevel","","Selected mip level doesn&#39;t exist.",33,null],[13,"BadLayer","","Selected array layer doesn&#39;t exist.",33,null],[13,"Channel","","Selected channel type is not supported for this texture.",33,null],[13,"Unsupported","","The backend refused for some reason.",33,null],[4,"BufferRole","","Role of the memory buffer. GLES doesn&#39;t allow chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",27,null],[13,"Index","","Index buffer",27,null],[13,"Uniform","","Uniform block buffer",27,null],[3,"BufferInfo","","An information block that is immutable and associated with each buffer.",null,null],[12,"role","","Role",29,null],[12,"usage","","Usage hint",29,null],[12,"bind","","Bind flags",29,null],[12,"size","","Size in bytes",29,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers\nthat you use via shader resource / unordered access views.",29,null],[4,"BufferError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",30,null],[13,"Other","","Unknown other error.",30,null],[4,"BufferUpdateError","","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",31,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",34,null],[13,"Resource","","Failed to create SRV or UAV.",34,null],[13,"Target","","Failed to create RTV or DSV.",34,null],[17,"RENDER_TARGET","","The resource can be rendered into.",null,null],[17,"DEPTH_STENCIL","","The resource can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","The resource can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","The resource can be bound to the shader for writing.",null,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"clone_empty","","Clone as an empty buffer",20,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"self"}}],[10,"reset","","Reset the command buffer contents, retain the allocated storage",20,null],[10,"bind_pipeline_state","","Bind a pipeline state object",20,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",20,null],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",20,null],[10,"bind_global_constant","","Bind a global constant",20,null],[10,"bind_resource_views","","Bind a complete set of shader resource views",20,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",20,null],[10,"bind_samplers","","Bind a complete set of samplers",20,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple\ncolors views and an optional depth/stencil view.",20,null],[10,"bind_index","","Bind an index buffer",20,null],[10,"set_scissor","","Set scissor rectangle",20,null],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",20,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",20,null],[10,"update_texture","","Update a texture",20,null],[10,"generate_mipmap","","",20,null],[10,"clear_color","","Clear color target",20,null],[10,"clear_depth_stencil","","",20,null],[10,"call_draw","","Draw a primitive",20,null],[10,"call_draw_indexed","","Draw a primitive with index buffer",20,null],[6,"InstanceOption","","",null,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",132,null],[12,"globals","","Global constants in the program",132,null],[12,"constant_buffers","","Constant buffers in the program",132,null],[12,"textures","","Textures in the program",132,null],[12,"unordereds","","Unordered access resources in the program",132,null],[12,"samplers","","Samplers in the program",132,null],[12,"outputs","","Output targets in the program",132,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",132,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",121,null],[13,"F32","","",121,null],[13,"I32Vector2","","",121,null],[13,"I32Vector3","","",121,null],[13,"I32Vector4","","",121,null],[13,"F32Vector2","","",121,null],[13,"F32Vector3","","",121,null],[13,"F32Vector4","","",121,null],[13,"F32Matrix2","","",121,null],[13,"F32Matrix3","","",121,null],[13,"F32Matrix4","","",121,null],[3,"Encoder","","Graphics commands encoder.",null,null],[3,"Slice","","Description of a subset of `Mesh` data to render.",null,null],[12,"start","","Start index of vertices to draw.",164,null],[12,"end","","End index of vertices to draw.",164,null],[12,"instances","","Instancing configuration.",164,null],[12,"kind","","Source of the vertex ordering when drawing.",164,null],[4,"UpdateError","","An error occuring in buffer/texture updates.",null,null],[13,"OutOfBounds","","",165,null],[12,"target","gfx::UpdateError","",165,null],[12,"source","","",165,null],[13,"UnitCountMismatch","gfx","",165,null],[12,"target","gfx::UpdateError","",165,null],[12,"slice","","",165,null],[4,"PipelineStateError","gfx","Error creating a PipelineState",null,null],[13,"Program","","Shader program failed to link.",166,null],[13,"DescriptorInit","","Unable to create PSO descriptor due to mismatched formats.",166,null],[13,"DeviceCreate","","Device failed to create the handle give the descriptor.",166,null],[4,"SliceKind","","Source of vertex ordering for a slice",null,null],[13,"Vertex","","Render vertex data directly from the `Mesh`&#39;s buffer.",167,null],[13,"Index8","","The `Index*` buffer contains a list of indices into the `Mesh`\ndata, so every vertex attribute does not need to be duplicated, only\nits position in the `Mesh`. The base index is added to this index\nbefore fetching the vertex from the buffer.  For example, when drawing\na square, two triangles are needed.  Using only `Vertex`, one\nwould need 6 separate vertices, 3 for each triangle. However, two of\nthe vertices will be identical, wasting space for the duplicated\nattributes.  Instead, the `Mesh` can store 4 vertices and an\n`Index8` can be used instead.",167,null],[13,"Index16","","As `Index8` but with `u16` indices",167,null],[13,"Index32","","As `Index8` but with `u32` indices",167,null],[0,"traits","","public re-exported traits",null,null],[8,"Device","gfx::traits","An interface for performing draw calls using a specific graphics API",null,null],[16,"Resources","","Associated resources type.",160,null],[16,"CommandBuffer","","Associated command buffer type.",160,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation.",160,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",160,null],[10,"submit","","Submit a command buffer for execution.",160,null],[10,"cleanup","","Cleanup unused resources, to be called between frames.",160,null],[8,"Factory","","",null,null],[16,"Mapper","","Associated mapper type",35,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",35,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",35,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[10,"create_buffer_const_raw","","",35,null],[11,"create_buffer_const","","",35,null],[11,"create_buffer_dynamic","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"}],"output":{"name":"result"}}],[11,"create_buffer_staging","","",35,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"},{"name":"mapaccess"}],"output":{"name":"result"}}],[10,"create_pipeline_state_raw","","",35,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[10,"create_program","","",35,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[10,"create_shader","","",35,null],[11,"create_shader_vertex","","",35,null],[11,"create_shader_geometry","","",35,null],[11,"create_shader_pixel","","",35,null],[10,"create_sampler","","",35,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"map_buffer_raw","","",35,null],[10,"unmap_buffer_raw","","",35,null],[10,"map_buffer_readable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",35,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[10,"view_texture_as_render_target_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",35,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_texture","","",35,{"inputs":[{"name":"factory"},{"name":"kind"},{"name":"u8"},{"name":"bind"},{"name":"usage"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource","","",35,null],[11,"view_texture_as_unordered_access","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"u8"},{"name":"option"},{"name":"depthstencilflags"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",35,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_texture_const_u8","","",35,null],[11,"create_texture_const","","",35,null],[11,"create_render_target","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_depth_stencil_view_only","","",35,{"inputs":[{"name":"factory"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",161,null],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",161,null],[8,"FactoryExt","","Factory extension trait",null,null],[11,"create_vertex_buffer","","Create a vertex buffer with an associated slice.",168,null],[11,"create_vertex_buffer_indexed","","Create a vertex buffer with an index, returned by a slice.",168,null],[11,"create_constant_buffer","","Create a constant buffer for `num` identical elements of type `T`.",168,{"inputs":[{"name":"factoryext"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"create_shader_set","","Create a shader set from a given vs/ps code for multiple shader models.",168,null],[11,"link_program","","Create a simple program given a vertex shader with a pixel one.",168,null],[11,"create_pipeline_state","","Create a strongly-typed Pipeline State.",168,{"inputs":[{"name":"factoryext"},{"name":"shaderset"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"name":"result"}}],[11,"create_pipeline_from_program","","Create PSO with a given program.",168,{"inputs":[{"name":"factoryext"},{"name":"program"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"name":"result"}}],[11,"create_pipeline_simple","","Create a simplified version of the Pipeline State,\nwhich works on triangles, and only has VS and PS shaders in it.",168,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",168,{"inputs":[{"name":"factoryext"}],"output":{"name":"sampler"}}],[11,"eq","gfx","",165,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",165,{"inputs":[{"name":"updateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"updateerror"}],"output":{"name":"updateerror"}}],[11,"from","","",169,{"inputs":[{"name":"c"}],"output":{"name":"encoder"}}],[11,"flush","","Flush the encoded commands onto the device, and clean.",169,{"inputs":[{"name":"encoder"},{"name":"d"}],"output":null}],[11,"clone_empty","","Clone the renderer shared data but ignore the commands.",169,{"inputs":[{"name":"encoder"}],"output":{"name":"encoder"}}],[11,"update_buffer","","Update a buffer with a slice of data.",169,null],[11,"update_constant_buffer","","Update a buffer with a single structure.",169,{"inputs":[{"name":"encoder"},{"name":"buffer"},{"name":"t"}],"output":null}],[11,"update_texture","","Update the contents of a texture.",169,null],[11,"clear","","Clear a target view with a specified value.",169,{"inputs":[{"name":"encoder"},{"name":"rendertargetview"},{"name":"view"}],"output":null}],[11,"clear_depth","","Clear a depth view with a specified value.",169,{"inputs":[{"name":"encoder"},{"name":"depthstencilview"},{"name":"depth"}],"output":null}],[11,"clear_stencil","","Clear a stencil view with a specified value.",169,{"inputs":[{"name":"encoder"},{"name":"depthstencilview"},{"name":"stencil"}],"output":null}],[11,"draw","","Draw a mesh slice using a typed pipeline state object (PSO).",169,{"inputs":[{"name":"encoder"},{"name":"slice"},{"name":"pipelinestate"},{"name":"d"}],"output":null}],[11,"create_vertex_buffer","gfx::factory","Create a vertex buffer with an associated slice.",168,null],[11,"create_vertex_buffer_indexed","","Create a vertex buffer with an index, returned by a slice.",168,null],[11,"create_constant_buffer","","Create a constant buffer for `num` identical elements of type `T`.",168,{"inputs":[{"name":"factoryext"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"create_shader_set","","Create a shader set from a given vs/ps code for multiple shader models.",168,null],[11,"link_program","","Create a simple program given a vertex shader with a pixel one.",168,null],[11,"create_pipeline_state","","Create a strongly-typed Pipeline State.",168,{"inputs":[{"name":"factoryext"},{"name":"shaderset"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"name":"result"}}],[11,"create_pipeline_from_program","","Create PSO with a given program.",168,{"inputs":[{"name":"factoryext"},{"name":"program"},{"name":"primitive"},{"name":"rasterizer"},{"name":"i"}],"output":{"name":"result"}}],[11,"create_pipeline_simple","","Create a simplified version of the Pipeline State,\nwhich works on triangles, and only has VS and PS shaders in it.",168,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",168,{"inputs":[{"name":"factoryext"}],"output":{"name":"sampler"}}],[11,"fmt","gfx","",166,{"inputs":[{"name":"pipelinestateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",166,{"inputs":[{"name":"pipelinestateerror"},{"name":"pipelinestateerror"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"pipelinestateerror"},{"name":"pipelinestateerror"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"pipelinestateerror"}],"output":{"name":"pipelinestateerror"}}],[11,"eq","","",164,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"get_prim_count","","Get the number of primitives in this slice.",164,{"inputs":[{"name":"slice"},{"name":"primitive"}],"output":{"name":"u32"}}],[11,"eq","","",167,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"slicekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"slicekind"}],"output":{"name":"slicekind"}}],[11,"from","","",164,{"inputs":[{"name":"buffer"}],"output":{"name":"slice"}}],[11,"from","","",164,{"inputs":[{"name":"buffer"}],"output":{"name":"slice"}}],[11,"from","","",164,{"inputs":[{"name":"buffer"}],"output":{"name":"slice"}}],[0,"pso","","Pipeline states\nPipeline State Objects - typed higher-level version.",null,null],[3,"Descriptor","gfx::pso","All the information surrounding a shader program that is required\nfor PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",104,null],[12,"rasterizer","","Rasterizer setup",104,null],[12,"scissor","","Enable scissor test",104,null],[12,"attributes","","Vertex attributes",104,null],[12,"color_targets","","Render target views (RTV)",104,null],[12,"depth_stencil","","Depth stencil view (DSV)",104,null],[3,"RawDataSet","","A complete set of raw data that needs to be specified at run-time\nwhenever we draw something with a PSO. This is what &quot;data&quot; struct\ngets transformed into when we call `encoder.draw(...)` with it.\nIt doesn&#39;t have any typing information, since PSO knows what\nformat and layout to expect from each resource.",null,null],[12,"vertex_buffers","","",170,null],[12,"constant_buffers","","",170,null],[12,"global_constants","","",170,null],[12,"resource_views","","",170,null],[12,"unordered_views","","",170,null],[12,"samplers","","",170,null],[12,"pixel_targets","","",170,null],[12,"ref_values","","",170,null],[12,"scissor","","",170,null],[3,"PipelineState","","Strongly-typed compiled pipeline state.",null,null],[4,"InitError","","Failure to initilize the link between the shader and the data.",null,null],[13,"VertexImport","","Vertex attribute mismatch.",171,null],[13,"ConstantBuffer","","Constant buffer mismatch.",171,null],[13,"GlobalConstant","","Global constant mismatch.",171,null],[13,"ResourceView","","Shader resource view mismatch.",171,null],[13,"UnorderedView","","Unordered access view mismatch.",171,null],[13,"Sampler","","Sampler mismatch.",171,null],[13,"PixelExport","","Pixel target mismatch.",171,null],[0,"buffer","","Buffer components for PSO macro.",null,null],[3,"Element","gfx::pso::buffer","A struct element descriptor.",null,null],[12,"format","","Element format",103,null],[12,"offset","","Offset from the beginning of the container, in bytes",103,null],[12,"stride","","Total container size, in bytes",103,null],[6,"ElemOffset","","",null,null],[6,"ElemStride","","",null,null],[6,"InstanceRate","","",null,null],[3,"VertexBufferCommon","","Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.",null,null],[3,"RawVertexBuffer","","Raw vertex/instance buffer component.\n- init: ?\n- data: `RawBuffer`",null,null],[3,"ConstantBuffer","","Constant buffer component.\n- init: `&amp;str` = name of the buffer\n- data: `Buffer&lt;T&gt;`",null,null],[3,"Global","","Global (uniform) constant component. Describes a free-standing value passed into\nthe shader, which is not enclosed into any constant buffer. Deprecated in DX10 and higher.\n- init: `&amp;str` = name of the constant\n- data: `T` = value",null,null],[6,"VertexBuffer","","Vertex buffer component. Advanced per vertex.\n- init: `()`\n- data: `Buffer&lt;T&gt;`",null,null],[6,"InstanceBuffer","","Instance buffer component. Same as the vertex buffer but advances per instance.",null,null],[8,"Structure","","A trait to be implemented by any struct having the layout described\nin the graphics API, like a vertex buffer.",null,null],[10,"query","","Get the layout of an element by name.",172,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",173,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",173,{"inputs":[{"name":"vertexbuffercommon"}],"output":{"name":"bool"}}],[11,"link_input","","",173,{"inputs":[{"name":"vertexbuffercommon"},{"name":"attributevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",173,{"inputs":[{"name":"vertexbuffercommon"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",174,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",174,{"inputs":[{"name":"rawvertexbuffer"}],"output":{"name":"bool"}}],[11,"link_input","","",174,{"inputs":[{"name":"rawvertexbuffer"},{"name":"attributevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",174,{"inputs":[{"name":"rawvertexbuffer"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",175,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",175,{"inputs":[{"name":"constantbuffer"}],"output":{"name":"bool"}}],[11,"link_constant_buffer","","",175,{"inputs":[{"name":"constantbuffer"},{"name":"constantbuffervar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",175,{"inputs":[{"name":"constantbuffer"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",176,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",176,{"inputs":[{"name":"global"}],"output":{"name":"bool"}}],[11,"link_global_constant","","",176,{"inputs":[{"name":"global"},{"name":"constvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",176,{"inputs":[{"name":"global"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[0,"resource","gfx::pso","Resource components for PSO macro.",null,null],[3,"ShaderResource","gfx::pso::resource","Shader resource component (SRV). Typically is a view into some texture,\nbut can also be a buffer.\n- init: `&amp;str` = name of the resource\n- data: `ShaderResourceView&lt;T&gt;`",null,null],[3,"RawShaderResource","","Raw (untyped) shader resource (SRV).\n- init: `&amp;str` = name of the resource. This may change in the future.\n- data: `RawShaderResourceView`",null,null],[3,"UnorderedAccess","","Unordered access component (UAV). A writable resource (texture/buffer)\nwith no defined access order across simultaneously executing shaders.\nSupported on DX10 and higher.\n- init: `&amp;str` = name of the resource\n- data: `UnorderedAccessView&lt;T&gt;`",null,null],[3,"Sampler","","Sampler component.\n- init: `&amp;str` = name of the sampler\n- data: `Sampler`",null,null],[3,"TextureSampler","","A convenience type for a texture paired with a sampler.\nIt only makes sense for DX9 class hardware, where every texture by default\nis bundled with a sampler, hence they are represented by the same name.\nIn DX10 and higher samplers are totally separated from the textures.\n- init: `&amp;str` = name of the sampler/texture (assuming they match)\n- data: (`ShaderResourceView&lt;T&gt;`, `Sampler`)",null,null],[11,"new","","",177,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",177,{"inputs":[{"name":"shaderresource"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",177,{"inputs":[{"name":"shaderresource"},{"name":"texturevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",177,{"inputs":[{"name":"shaderresource"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",178,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",178,{"inputs":[{"name":"rawshaderresource"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",178,{"inputs":[{"name":"rawshaderresource"},{"name":"texturevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",178,{"inputs":[{"name":"rawshaderresource"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",179,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",179,{"inputs":[{"name":"unorderedaccess"}],"output":{"name":"bool"}}],[11,"link_unordered_view","","",179,{"inputs":[{"name":"unorderedaccess"},{"name":"unorderedvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",179,{"inputs":[{"name":"unorderedaccess"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",180,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",180,{"inputs":[{"name":"sampler"}],"output":{"name":"bool"}}],[11,"link_sampler","","",180,{"inputs":[{"name":"sampler"},{"name":"samplervar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",180,{"inputs":[{"name":"sampler"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",181,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",181,{"inputs":[{"name":"texturesampler"}],"output":{"name":"bool"}}],[11,"link_resource_view","","",181,{"inputs":[{"name":"texturesampler"},{"name":"texturevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_sampler","","",181,{"inputs":[{"name":"texturesampler"},{"name":"samplervar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",181,{"inputs":[{"name":"texturesampler"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[0,"target","gfx::pso","Render target components for the PSO macro.",null,null],[3,"RenderTarget","gfx::pso::target","Render target component. Typically points to a color-formatted texture.\n- init: `&amp;str` = name of the target\n- data: `RenderTargetView&lt;T&gt;`",null,null],[3,"BlendTarget","","Render target component with active blending mode.\n- init: (`&amp;str`, `ColorMask`, `Blend` = blending state)\n- data: `RenderTargetView&lt;T&gt;`",null,null],[3,"RawRenderTarget","","Raw (untyped) render target component with optional blending.\n- init: (`&amp;str`, `Format`, `ColorMask`, `Option&lt;Blend&gt;`)\n- data: `RawRenderTargetView`",null,null],[3,"DepthTarget","","Depth target component.\n- init: `Depth` = depth state\n- data: `DepthStencilView&lt;T&gt;`",null,null],[3,"StencilTarget","","Stencil target component.\n- init: `Stencil` = stencil state\n- data: (`DepthStencilView&lt;T&gt;`, `(front, back)` = stencil reference values)",null,null],[3,"DepthStencilTarget","","Depth + stencil target component.\n- init: (`Depth` = depth state, `Stencil` = stencil state)\n- data: (`DepthStencilView&lt;T&gt;`, `(front, back)` = stencil reference values)",null,null],[3,"Scissor","","Scissor component. Sets up the scissor test for rendering.\n- init: `()`\n- data: `Rect` = target area",null,null],[3,"BlendRef","","Blend reference component. Sets up the reference color for blending.\n- init: `()`\n- data: `ColorValue`",null,null],[11,"new","","",182,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",182,{"inputs":[{"name":"rendertarget"}],"output":{"name":"bool"}}],[11,"link_output","","",182,{"inputs":[{"name":"rendertarget"},{"name":"outputvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",182,{"inputs":[{"name":"rendertarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",183,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",183,{"inputs":[{"name":"blendtarget"}],"output":{"name":"bool"}}],[11,"link_output","","",183,{"inputs":[{"name":"blendtarget"},{"name":"outputvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",183,{"inputs":[{"name":"blendtarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",184,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",184,{"inputs":[{"name":"rawrendertarget"}],"output":{"name":"bool"}}],[11,"link_output","","",184,{"inputs":[{"name":"rawrendertarget"},{"name":"outputvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",184,{"inputs":[{"name":"rawrendertarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",185,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",185,{"inputs":[{"name":"depthtarget"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",185,{"inputs":[{"name":"depthtarget"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",185,{"inputs":[{"name":"depthtarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",186,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",186,{"inputs":[{"name":"stenciltarget"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",186,{"inputs":[{"name":"stenciltarget"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",186,{"inputs":[{"name":"stenciltarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",187,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",187,{"inputs":[{"name":"depthstenciltarget"}],"output":{"name":"bool"}}],[11,"link_depth_stencil","","",187,{"inputs":[{"name":"depthstenciltarget"},{"name":"init"}],"output":{"name":"option"}}],[11,"bind_to","","",187,{"inputs":[{"name":"depthstenciltarget"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",188,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",188,{"inputs":[{"name":"scissor"}],"output":{"name":"bool"}}],[11,"link_scissor","","",188,{"inputs":[{"name":"scissor"}],"output":{"name":"bool"}}],[11,"bind_to","","",188,{"inputs":[{"name":"scissor"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"new","","",189,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",189,{"inputs":[{"name":"blendref"}],"output":{"name":"bool"}}],[11,"bind_to","","",189,{"inputs":[{"name":"blendref"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[0,"bundle","gfx::pso","Combine mesh data with pipeline state.",null,null],[3,"Bundle","gfx::pso::bundle","Mesh-PSO bundle.",null,null],[12,"slice","","Mesh slice",190,null],[12,"pso","","Pipeline state",190,null],[12,"data","","Pipeline data for mesh",190,null],[11,"new","","Create new Bundle",190,{"inputs":[{"name":"slice"},{"name":"pipelinestate"},{"name":"data"}],"output":{"name":"self"}}],[11,"encode","","Draw bundle using encoder.",190,{"inputs":[{"name":"bundle"},{"name":"encoder"}],"output":null}],[8,"PipelineInit","gfx::pso","A service trait implemented by the &quot;init&quot; structure of PSO.",null,null],[16,"Meta","","The associated &quot;meta&quot; struct.",191,null],[10,"link_to","","Attempt to map a PSO descriptor to a give shader program,\nrepresented by `ProgramInfo`. Returns an instance of the\n&quot;meta&quot; struct upon successful mapping.",191,{"inputs":[{"name":"pipelineinit"},{"name":"descriptor"},{"name":"programinfo"}],"output":{"name":"result"}}],[8,"PipelineData","","a service trait implemented the &quot;data&quot; structure of PSO.",null,null],[16,"Meta","","The associated &quot;meta&quot; struct.",192,null],[10,"bake_to","","Dump all the contained data into the raw data set,\ngiven the mapping (&quot;meta&quot;), and a handle manager.",192,{"inputs":[{"name":"pipelinedata"},{"name":"rawdataset"},{"name":"meta"},{"name":"manager"}],"output":null}],[8,"DataLink","","The &quot;link&quot; logic portion of a PSO component.\nDefines the input data for the component.",null,null],[16,"Init","","The assotiated &quot;init&quot; type - a member of the PSO &quot;init&quot; struct.",193,null],[10,"new","","Create a new empty data link.",193,{"inputs":[],"output":{"name":"self"}}],[10,"is_active","","Check if this link is actually used by the shader.",193,{"inputs":[{"name":"datalink"}],"output":{"name":"bool"}}],[11,"link_input","","Attempt to link with a vertex attribute.",193,{"inputs":[{"name":"datalink"},{"name":"attributevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_constant_buffer","","Attempt to link with a constant buffer.",193,{"inputs":[{"name":"datalink"},{"name":"constantbuffervar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_global_constant","","Attempt to link with a global constant.",193,{"inputs":[{"name":"datalink"},{"name":"constvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_output","","Attempt to link with an output render target (RTV).",193,{"inputs":[{"name":"datalink"},{"name":"outputvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_depth_stencil","","Attempt to link with a depth-stencil target (DSV).",193,{"inputs":[{"name":"datalink"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_resource_view","","Attempt to link with a shader resource (SRV).",193,{"inputs":[{"name":"datalink"},{"name":"texturevar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_unordered_view","","Attempt to link with an unordered access (UAV).",193,{"inputs":[{"name":"datalink"},{"name":"unorderedvar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_sampler","","Attempt to link with a sampler.",193,{"inputs":[{"name":"datalink"},{"name":"samplervar"},{"name":"init"}],"output":{"name":"option"}}],[11,"link_scissor","","Attempt to enable scissor test.",193,{"inputs":[{"name":"datalink"}],"output":{"name":"bool"}}],[8,"DataBind","","The &quot;bind&quot; logic portion of the PSO component.\nDefines how the user data translates into the raw data set.",null,null],[16,"Data","","The associated &quot;data&quot; type - a member of the PSO &quot;data&quot; struct.",194,null],[10,"bind_to","","Dump the given data into the raw data set.",194,{"inputs":[{"name":"databind"},{"name":"rawdataset"},{"name":"data"},{"name":"manager"}],"output":null}],[11,"fmt","","",170,{"inputs":[{"name":"rawdataset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create an empty data set.",170,{"inputs":[],"output":{"name":"rawdataset"}}],[11,"clear","","Clear all contained data.",170,{"inputs":[{"name":"rawdataset"}],"output":null}],[11,"fmt","","",171,{"inputs":[{"name":"initerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",171,{"inputs":[{"name":"initerror"},{"name":"initerror"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"initerror"},{"name":"initerror"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"initerror"}],"output":{"name":"initerror"}}],[11,"new","","Create a new PSO from a raw handle and the &quot;meta&quot; instance.",195,{"inputs":[{"name":"rawpipelinestate"},{"name":"primitive"},{"name":"m"}],"output":{"name":"pipelinestate"}}],[11,"get_handle","","Get a raw handle reference.",195,{"inputs":[{"name":"pipelinestate"}],"output":{"name":"rawpipelinestate"}}],[11,"get_meta","","Get a &quot;meta&quot; struct reference. Can be used by the user to check\nwhat resources are actually used and what not.",195,{"inputs":[{"name":"pipelinestate"}],"output":{"name":"m"}}],[0,"shade","gfx","Shaders\nShader parameter handling.",null,null],[6,"ConstFormat","gfx::shade","",null,null],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",123,null],[3,"Usage","","Parameter usage flags.",null,null],[4,"ProgramError","","Program linking error",null,null],[13,"Vertex","","Unable to compile the vertex shader",196,null],[13,"Pixel","","Unable to compile the pixel shader",196,null],[13,"Link","","Unable to link",196,null],[8,"ToUniform","","",null,null],[10,"convert","","",197,{"inputs":[{"name":"touniform"}],"output":{"name":"uniformvalue"}}],[11,"fmt","","",196,{"inputs":[{"name":"programerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"programerror"}],"output":{"name":"programerror"}}],[0,"macros","gfx","Convenience macros\nVarious helper macros.",null,null],[8,"ToIndexSlice","","A helper trait to build index slices from data.",null,null],[10,"to_slice","","Make an index slice.",198,{"inputs":[{"name":"toindexslice"},{"name":"f"}],"output":{"name":"slice"}}],[14,"gfx_pipeline_inner!","","",null,null],[14,"gfx_pipeline_base!","","",null,null],[14,"gfx_pipeline!","","",null,null],[14,"gfx_impl_struct!","","",null,null],[14,"gfx_vertex_struct!","","",null,null],[14,"gfx_constant_struct!","","",null,null],[14,"gfx_format!","","",null,null]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"MultiSample"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Color"],[3,"RefValues"],[4,"ClearColor"],[8,"CommandBuffer"],[3,"DummyDevice"],[4,"DummyResources"],[3,"DummyCommandBuffer"],[8,"Typed"],[4,"MapAccess"],[3,"Bind"],[4,"BufferRole"],[4,"Usage"],[3,"BufferInfo"],[4,"BufferError"],[4,"BufferUpdateError"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Factory"],[4,"ChannelType"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"SurfaceType"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"ChannelSource"],[3,"Swizzle"],[3,"Format"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[8,"Producer"],[8,"Raw"],[3,"Readable"],[3,"Writable"],[3,"RW"],[8,"Builder"],[3,"CreationError"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[3,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[8,"BaseTyped"],[8,"Formatted"],[3,"Usage"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"CompatibilityError"],[4,"CreateShaderError"],[4,"Error"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[3,"ImageInfoCommon"],[4,"WrapMode"],[3,"Lod"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Descriptor"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilFlags"],[3,"DepthStencilDesc"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[4,"ShaderSet"],[3,"Capabilities"],[4,"Primitive"],[4,"IndexType"],[8,"Resources"],[8,"Device"],[8,"DeviceFence"],[3,"Rect"],[3,"Mirror"],[3,"Slice"],[4,"UpdateError"],[4,"PipelineStateError"],[4,"SliceKind"],[8,"FactoryExt"],[3,"Encoder"],[3,"RawDataSet"],[4,"InitError"],[8,"Structure"],[3,"VertexBufferCommon"],[3,"RawVertexBuffer"],[3,"ConstantBuffer"],[3,"Global"],[3,"ShaderResource"],[3,"RawShaderResource"],[3,"UnorderedAccess"],[3,"Sampler"],[3,"TextureSampler"],[3,"RenderTarget"],[3,"BlendTarget"],[3,"RawRenderTarget"],[3,"DepthTarget"],[3,"StencilTarget"],[3,"DepthStencilTarget"],[3,"Scissor"],[3,"BlendRef"],[3,"Bundle"],[8,"PipelineInit"],[8,"PipelineData"],[8,"DataLink"],[8,"DataBind"],[3,"PipelineState"],[4,"ProgramError"],[8,"ToUniform"],[8,"ToIndexSlice"]]};
searchIndex["gfx_core"] = {"doc":"Low-level graphics abstraction for Rust. Mostly operates on data, not types.\nDesigned for use by libraries and higher-level abstractions only.","items":[[0,"state","gfx_core","Fixed-function hardware state.",null,null],[11,"cmp","draw_state::state","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"eq","","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"fmt","","",0,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"FrontFace","gfx_core::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","",null,null],[6,"OffsetSlope","","",null,null],[6,"OffsetUnits","","",null,null],[11,"clone","draw_state::state","",1,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"fmt","","",1,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[3,"Offset","gfx_core::state","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"clone","draw_state::state","",2,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"eq","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[4,"CullFace","gfx_core::state","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[11,"get_cull_face","draw_state::state","Get the cull face, if any, for this primitive state.",3,{"inputs":[{"name":"rastermethod"}],"output":{"name":"cullface"}}],[11,"clone","","",3,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"fmt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[4,"RasterMethod","gfx_core::state","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",3,null],[11,"clone","draw_state::state","",4,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"eq","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"partial_cmp","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"cmp","","",4,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[3,"MultiSample","gfx_core::state","Multi-sampling rasterization mode",null,null],[11,"new_fill","draw_state::state","Create a new filling rasterizer.",5,{"inputs":[{"name":"cullface"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",5,{"inputs":[{"name":"rasterizer"},{"name":"f32"},{"name":"i32"}],"output":{"name":"rasterizer"}}],[11,"clone","","",5,{"inputs":[{"name":"rasterizer"}],"output":{"name":"rasterizer"}}],[11,"fmt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[3,"Rasterizer","gfx_core::state","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[12,"samples","","Multi-sampling mode.",5,null],[11,"clone","draw_state::state","",6,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"eq","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[4,"Comparison","gfx_core::state","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",6,null],[13,"Less","","`x &lt; y`",6,null],[13,"LessEqual","","`x &lt;= y`",6,null],[13,"Equal","","`x == y`",6,null],[13,"GreaterEqual","","`x &gt;= y`",6,null],[13,"Greater","","`x &gt; y`",6,null],[13,"NotEqual","","`x != y`",6,null],[13,"Always","","`true`",6,null],[11,"clone","draw_state::state","",7,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"eq","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"partial_cmp","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"cmp","","",7,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[4,"StencilOp","gfx_core::state","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",7,null],[13,"Zero","","Set the value in the stencil buffer to zero.",7,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",7,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",7,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",7,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",7,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",7,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",7,null],[11,"default","draw_state::state","",8,{"inputs":[],"output":{"name":"stencilside"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[3,"StencilSide","gfx_core::state","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",8,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",8,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",8,null],[12,"op_fail","","What operation to do if the stencil test fails.",8,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",8,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",8,null],[11,"new","draw_state::state","Create a new stencil state with a given function.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"stencil"}}],[11,"clone","","",9,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"eq","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[3,"Stencil","gfx_core::state","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",9,null],[12,"back","","",9,null],[11,"default","draw_state::state","",10,{"inputs":[],"output":{"name":"depth"}}],[11,"clone","","",10,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"partial_cmp","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[3,"Depth","gfx_core::state","Depth test state.",null,null],[12,"fun","","Comparison function to use.",10,null],[12,"write","","Specify whether to write to the depth buffer or not.",10,null],[11,"cmp","draw_state::state","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"clone","","",11,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"eq","","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[4,"Equation","gfx_core::state","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",11,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",11,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",11,null],[11,"cmp","draw_state::state","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"eq","","",12,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[4,"BlendValue","gfx_core::state","",null,null],[13,"SourceColor","","",12,null],[13,"SourceAlpha","","",12,null],[13,"DestColor","","",12,null],[13,"DestAlpha","","",12,null],[13,"ConstColor","","",12,null],[13,"ConstAlpha","","",12,null],[11,"partial_cmp","draw_state::state","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"clone","","",13,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"eq","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Factor","gfx_core::state","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SourceAlphaSaturated","","",13,null],[13,"ZeroPlus","","",13,null],[13,"OneMinus","","",13,null],[11,"fmt","draw_state::state","",14,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"cmp","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"eq","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[3,"BlendChannel","gfx_core::state","",null,null],[12,"equation","","",14,null],[12,"source","","",14,null],[12,"destination","","",14,null],[11,"hash","draw_state::state","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new blend state with a given equation.",15,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"blend"}}],[11,"clone","","",15,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[3,"Blend","gfx_core::state","",null,null],[12,"color","","",15,null],[12,"alpha","","",15,null],[11,"hash","draw_state::state","",16,null],[11,"partial_cmp","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitor","","Returns the union of the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"fmt","","",16,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",16,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",16,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[3,"ColorMask","gfx_core::state","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"hash","draw_state::state","",17,null],[11,"eq","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"color"}}],[11,"clone","","",17,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"fmt","","",17,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Color","gfx_core::state","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",17,null],[12,"blend","","Optional blending.",17,null],[11,"clone","draw_state::state","",18,{"inputs":[{"name":"refvalues"}],"output":{"name":"refvalues"}}],[11,"fmt","","",18,{"inputs":[{"name":"refvalues"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"refvalues"}}],[3,"RefValues","gfx_core::state","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",18,null],[12,"blend","","Constant blend color.",18,null],[0,"target","gfx_core","Render target specification.",null,null],[6,"Layer","gfx_core::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[11,"fmt","draw_state::target","",19,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[3,"Rect","gfx_core::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[6,"ColorValue","","",null,null],[11,"eq","draw_state::target","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"hash","","",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Mirror","gfx_core::target","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"VertexShader","gfx_core","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[3,"Capabilities","","Features that the device supports.",null,null],[12,"max_vertex_count","","",21,null],[12,"max_index_count","","",21,null],[12,"max_texture_size","","",21,null],[12,"instance_base_supported","","",21,null],[12,"instance_call_supported","","",21,null],[12,"instance_rate_supported","","",21,null],[12,"vertex_base_supported","","",21,null],[12,"srgb_color_supported","","",21,null],[12,"constant_buffer_supported","","",21,null],[12,"unordered_access_view_supported","","",21,null],[12,"separate_blending_slots_supported","","",21,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",22,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",22,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",23,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",23,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a &quot;path&quot; of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",23,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",23,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",23,null],[4,"IndexType","","A type of each index value in the mesh&#39;s index buffer",null,null],[13,"U8","","",24,null],[13,"U16","","",24,null],[13,"U32","","",24,null],[0,"draw","","Command Buffer device interface",null,null],[4,"ClearColor","gfx_core::draw","A universal clear color supporting integet formats\nas well as the standard floating-point.",null,null],[13,"Float","","Standard floating-point vec4 color",25,null],[13,"Int","","Integer vector to clear ivec4 targets.",25,null],[13,"Uint","","Unsigned int vector to clear uvec4 targets.",25,null],[6,"InstanceOption","","Optional instance parameters",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"clone_empty","","Clone as an empty buffer",26,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"self"}}],[10,"reset","","Reset the command buffer contents, retain the allocated storage",26,{"inputs":[{"name":"commandbuffer"}],"output":null}],[10,"bind_pipeline_state","","Bind a pipeline state object",26,{"inputs":[{"name":"commandbuffer"},{"name":"pipelinestateobject"}],"output":null}],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",26,{"inputs":[{"name":"commandbuffer"},{"name":"vertexbufferset"}],"output":null}],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",26,null],[10,"bind_global_constant","","Bind a global constant",26,{"inputs":[{"name":"commandbuffer"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[10,"bind_resource_views","","Bind a complete set of shader resource views",26,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",26,null],[10,"bind_samplers","","Bind a complete set of samplers",26,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple\ncolors views and an optional depth/stencil view.",26,{"inputs":[{"name":"commandbuffer"},{"name":"pixeltargetset"}],"output":null}],[10,"bind_index","","Bind an index buffer",26,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"},{"name":"indextype"}],"output":null}],[10,"set_scissor","","Set scissor rectangle",26,{"inputs":[{"name":"commandbuffer"},{"name":"rect"}],"output":null}],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",26,{"inputs":[{"name":"commandbuffer"},{"name":"refvalues"}],"output":null}],[10,"update_buffer","","Update a vertex/index/uniform buffer",26,null],[10,"update_texture","","Update a texture",26,null],[10,"generate_mipmap","","",26,{"inputs":[{"name":"commandbuffer"},{"name":"shaderresourceview"}],"output":null}],[10,"clear_color","","Clear color target",26,{"inputs":[{"name":"commandbuffer"},{"name":"rendertargetview"},{"name":"clearcolor"}],"output":null}],[10,"clear_depth_stencil","","",26,{"inputs":[{"name":"commandbuffer"},{"name":"depthstencilview"},{"name":"option"},{"name":"option"}],"output":null}],[10,"call_draw","","Draw a primitive",26,{"inputs":[{"name":"commandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[10,"call_draw_indexed","","Draw a primitive with index buffer",26,{"inputs":[{"name":"commandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"partial_cmp","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"eq","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"clearcolor"},{"name":"clearcolor"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"clearcolor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"clearcolor"}],"output":{"name":"clearcolor"}}],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,{"inputs":[{"name":"f32"}],"output":{"name":"clearcolor"}}],[11,"from","","",25,{"inputs":[{"name":"i32"}],"output":{"name":"clearcolor"}}],[11,"from","","",25,{"inputs":[{"name":"u32"}],"output":{"name":"clearcolor"}}],[0,"dummy","gfx_core","Dummy backend implementation to test the code for compile errors\noutside of the graphics development environment.",null,null],[3,"DummyDevice","gfx_core::dummy","Dummy device which does minimal work, just to allow testing\ngfx-rs apps for compilation.",null,null],[3,"DummyCommandBuffer","","Dummy command buffer, which ignores all the calls.",null,null],[4,"DummyResources","","Dummy resources phantom type",null,null],[11,"eq","","",27,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"dummyresources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"dummyresources"}],"output":{"name":"dummyresources"}}],[11,"new","","Create a new dummy device",28,{"inputs":[],"output":{"name":"dummydevice"}}],[11,"clone_empty","","",29,{"inputs":[{"name":"dummycommandbuffer"}],"output":{"name":"dummycommandbuffer"}}],[11,"reset","","",29,{"inputs":[{"name":"dummycommandbuffer"}],"output":null}],[11,"bind_pipeline_state","","",29,null],[11,"bind_vertex_buffers","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"vertexbufferset"}],"output":null}],[11,"bind_constant_buffers","","",29,null],[11,"bind_global_constant","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[11,"bind_resource_views","","",29,null],[11,"bind_unordered_views","","",29,null],[11,"bind_samplers","","",29,null],[11,"bind_pixel_targets","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"pixeltargetset"}],"output":null}],[11,"bind_index","","",29,null],[11,"set_scissor","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"rect"}],"output":null}],[11,"set_ref_values","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"refvalues"}],"output":null}],[11,"update_buffer","","",29,null],[11,"update_texture","","",29,null],[11,"generate_mipmap","","",29,null],[11,"clear_color","","",29,null],[11,"clear_depth_stencil","","",29,null],[11,"call_draw","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"call_draw_indexed","","",29,{"inputs":[{"name":"dummycommandbuffer"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"get_capabilities","","",28,{"inputs":[{"name":"dummydevice"}],"output":{"name":"capabilities"}}],[11,"pin_submitted_resources","","",28,{"inputs":[{"name":"dummydevice"},{"name":"manager"}],"output":null}],[11,"submit","","",28,{"inputs":[{"name":"dummydevice"},{"name":"dummycommandbuffer"}],"output":null}],[11,"cleanup","","",28,{"inputs":[{"name":"dummydevice"}],"output":null}],[0,"factory","gfx_core","Resource factory.",null,null],[3,"Bind","gfx_core::factory","Bind flags",null,null],[3,"BufferInfo","","An information block that is immutable and associated with each buffer.",null,null],[12,"role","","Role",30,null],[12,"usage","","Usage hint",30,null],[12,"bind","","Bind flags",30,null],[12,"size","","Size in bytes",30,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers\nthat you use via shader resource / unordered access views.",30,null],[4,"MapAccess","","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",31,null],[13,"Writable","","Only allow writes.",31,null],[13,"RW","","Allow full access.",31,null],[4,"BufferRole","","Role of the memory buffer. GLES doesn&#39;t allow chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",32,null],[13,"Index","","Index buffer",32,null],[13,"Uniform","","Uniform block buffer",32,null],[4,"Usage","","A hint as to how this buffer/texture will be used.",null,null],[13,"GpuOnly","","GPU: read + write, CPU: copy. Optimal for render targets.",33,null],[13,"Const","","GPU: read, CPU: none. Optimal for resourced textures/buffers.",33,null],[13,"Dynamic","","GPU: read, CPU: write.",33,null],[13,"CpuOnly","","GPU: copy, CPU: as specified. Used as a staging buffer,\nto be copied back and forth with on-GPU targets.",33,null],[4,"BufferError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",34,null],[13,"Other","","Unknown other error.",34,null],[4,"BufferUpdateError","","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",35,null],[4,"ResourceViewError","","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag does not present in the texture.",36,null],[13,"Channel","","Selected channel type is not supported for this texture.",36,null],[13,"Unsupported","","The backend refused for some reason.",36,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag does not present in the texture.",37,null],[13,"BadLevel","","Selected mip level doesn&#39;t exist.",37,null],[13,"BadLayer","","Selected array layer doesn&#39;t exist.",37,null],[13,"Channel","","Selected channel type is not supported for this texture.",37,null],[13,"Unsupported","","The backend refused for some reason.",37,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",38,null],[13,"Resource","","Failed to create SRV or UAV.",38,null],[13,"Target","","Failed to create RTV or DSV.",38,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[17,"RENDER_TARGET","","The resource can be rendered into.",null,null],[17,"DEPTH_STENCIL","","The resource can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","The resource can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","The resource can be bound to the shader for writing.",null,null],[8,"Typed","","A service trait used to get the raw data out of\nstrong types. Not meant for public use.",null,null],[16,"Raw","","The raw type behind the phantom.",39,null],[10,"new","","Crete a new phantom from the raw type.",39,{"inputs":[{"name":"raw"}],"output":{"name":"self"}}],[10,"raw","","Get an internal reference to the raw type.",39,{"inputs":[{"name":"typed"}],"output":{"name":"raw"}}],[8,"Factory","","",null,null],[16,"Mapper","","Associated mapper type",40,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",40,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",40,{"inputs":[{"name":"factory"},{"name":"bufferinfo"}],"output":{"name":"result"}}],[10,"create_buffer_const_raw","","",40,null],[11,"create_buffer_const","","",40,null],[11,"create_buffer_dynamic","","",40,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"}],"output":{"name":"result"}}],[11,"create_buffer_staging","","",40,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bind"},{"name":"mapaccess"}],"output":{"name":"result"}}],[10,"create_pipeline_state_raw","","",40,{"inputs":[{"name":"factory"},{"name":"program"},{"name":"descriptor"}],"output":{"name":"result"}}],[10,"create_program","","",40,{"inputs":[{"name":"factory"},{"name":"shaderset"}],"output":{"name":"result"}}],[10,"create_shader","","",40,null],[11,"create_shader_vertex","","",40,null],[11,"create_shader_geometry","","",40,null],[11,"create_shader_pixel","","",40,null],[10,"create_sampler","","",40,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"map_buffer_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawbuffer"},{"name":"mapaccess"}],"output":{"name":"mapper"}}],[10,"unmap_buffer_raw","","",40,{"inputs":[{"name":"factory"},{"name":"mapper"}],"output":null}],[10,"map_buffer_readable","","",40,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",40,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",40,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",40,{"inputs":[{"name":"factory"},{"name":"descriptor"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[10,"view_buffer_as_shader_resource_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_buffer_as_unordered_access_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawbuffer"}],"output":{"name":"result"}}],[10,"view_texture_as_shader_resource_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"resourcedesc"}],"output":{"name":"result"}}],[10,"view_texture_as_unordered_access_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawtexture"}],"output":{"name":"result"}}],[10,"view_texture_as_render_target_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"renderdesc"}],"output":{"name":"result"}}],[10,"view_texture_as_depth_stencil_raw","","",40,{"inputs":[{"name":"factory"},{"name":"rawtexture"},{"name":"depthstencildesc"}],"output":{"name":"result"}}],[11,"create_texture","","",40,{"inputs":[{"name":"factory"},{"name":"kind"},{"name":"level"},{"name":"bind"},{"name":"usage"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_buffer_as_shader_resource","","",40,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_buffer_as_unordered_access","","",40,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"view_texture_as_shader_resource","","",40,null],[11,"view_texture_as_unordered_access","","",40,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"view_texture_as_render_target","","",40,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"level"},{"name":"option"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil","","",40,{"inputs":[{"name":"factory"},{"name":"texture"},{"name":"level"},{"name":"option"},{"name":"depthstencilflags"}],"output":{"name":"result"}}],[11,"view_texture_as_depth_stencil_trivial","","",40,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_texture_const_u8","","",40,null],[11,"create_texture_const","","",40,null],[11,"create_render_target","","",40,{"inputs":[{"name":"factory"},{"name":"size"},{"name":"size"}],"output":{"name":"result"}}],[11,"create_depth_stencil","","",40,{"inputs":[{"name":"factory"},{"name":"size"},{"name":"size"}],"output":{"name":"result"}}],[11,"create_depth_stencil_view_only","","",40,{"inputs":[{"name":"factory"},{"name":"size"},{"name":"size"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"mapaccess"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"mapaccess"}],"output":{"name":"mapaccess"}}],[11,"hash","","",31,null],[11,"partial_cmp","","",31,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"bool"}}],[11,"cmp","","",31,{"inputs":[{"name":"mapaccess"},{"name":"mapaccess"}],"output":{"name":"ordering"}}],[11,"hash","","",41,null],[11,"cmp","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"bind"}],"output":{"name":"bind"}}],[11,"eq","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"bind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",41,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",41,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",41,{"inputs":[{"name":"bind"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",41,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",41,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,{"inputs":[{"name":"bind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",41,{"inputs":[{"name":"bind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",41,{"inputs":[{"name":"bind"},{"name":"bind"}],"output":{"name":"bind"}}],[11,"not","","Returns the complement of this set of flags.",41,{"inputs":[{"name":"bind"}],"output":{"name":"bind"}}],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"eq","","",32,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"bufferrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"bufferrole"}],"output":{"name":"bufferrole"}}],[11,"fmt","","",33,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"hash","","",33,null],[11,"partial_cmp","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"eq","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"eq","","",30,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"fmt","","",30,{"inputs":[{"name":"bufferinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"bufferinfo"}],"output":{"name":"bufferinfo"}}],[11,"eq","","",34,{"inputs":[{"name":"buffererror"},{"name":"buffererror"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"buffererror"},{"name":"buffererror"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"buffererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"buffererror"}],"output":{"name":"buffererror"}}],[11,"fmt","","",35,{"inputs":[{"name":"bufferupdateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"bufferupdateerror"}],"output":{"name":"bufferupdateerror"}}],[11,"fmt","","",36,{"inputs":[{"name":"resourceviewerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"resourceviewerror"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"resourceviewerror"},{"name":"resourceviewerror"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"resourceviewerror"}}],[11,"fmt","","",37,{"inputs":[{"name":"targetviewerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"targetviewerror"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"targetviewerror"},{"name":"targetviewerror"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"targetviewerror"}}],[11,"fmt","","",38,{"inputs":[{"name":"combinederror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"combinederror"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"combinederror"},{"name":"combinederror"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"combinederror"}],"output":{"name":"combinederror"}}],[11,"from","","",38,{"inputs":[{"name":"error"}],"output":{"name":"combinederror"}}],[11,"from","","",38,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",38,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[0,"format","gfx_core","Universal format specification.\nApplicable to textures, views, and vertex buffers.",null,null],[3,"Swizzle","gfx_core::format","Channel swizzle configuration for the resource views.\nNote: It&#39;s not currently mirrored at compile-time,\nthus providing less safety and convenience.",null,null],[12,"0","","",42,null],[12,"1","","",42,null],[12,"2","","",42,null],[12,"3","","",42,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",43,null],[12,"1","","",43,null],[3,"U8Norm","","",null,null],[12,"0","","",44,null],[3,"I8Norm","","",null,null],[12,"0","","",45,null],[3,"U16Norm","","",null,null],[12,"0","","",46,null],[3,"I16Norm","","",null,null],[12,"0","","",47,null],[3,"F16","","",null,null],[12,"0","","",48,null],[4,"ChannelType","","Type of a surface channel. This is how we interpret the\nstorage allocated with `SurfaceType`.",null,null],[13,"Int","","",49,null],[13,"Uint","","",49,null],[13,"Inorm","","",49,null],[13,"Unorm","","",49,null],[13,"Float","","",49,null],[13,"Srgb","","",49,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only\ncarry information about the number of bits per each channel.\nThe actual types are up to the views to decide and interpret.\nThe actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",50,null],[13,"R4_G4_B4_A4","","",50,null],[13,"R5_G5_B5_A1","","",50,null],[13,"R5_G6_B5","","",50,null],[13,"R8","","",50,null],[13,"R8_G8","","",50,null],[13,"R8_G8_B8_A8","","",50,null],[13,"R10_G10_B10_A2","","",50,null],[13,"R11_G11_B10","","",50,null],[13,"R16","","",50,null],[13,"R16_G16","","",50,null],[13,"R16_G16_B16","","",50,null],[13,"R16_G16_B16_A16","","",50,null],[13,"R32","","",50,null],[13,"R32_G32","","",50,null],[13,"R32_G32_B32","","",50,null],[13,"R32_G32_B32_A32","","",50,null],[13,"D16","","",50,null],[13,"D24","","",50,null],[13,"D24_S8","","",50,null],[13,"D32","","",50,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto\ndifferent physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",51,null],[13,"One","","",51,null],[13,"X","","",51,null],[13,"Y","","",51,null],[13,"Z","","",51,null],[13,"W","","",51,null],[6,"Vec1","","Abstracted 1-element container for macro internal use",null,null],[6,"Vec2","","Abstracted 2-element container for macro internal use",null,null],[6,"Vec3","","Abstracted 3-element container for macro internal use",null,null],[6,"Vec4","","Abstracted 4-element container for macro internal use",null,null],[6,"Rgba8","","Standard 8bits RGBA format.",null,null],[6,"Srgba8","","Standard 8bit gamma transforming RGB format.",null,null],[6,"Rgb10a2F","","Standard HDR floating-point format with 10 bits for RGB components\nand 2 bits for the alpha.",null,null],[6,"Rgba16F","","Standard 16-bit floating-point RGBA format.",null,null],[6,"Rgba32F","","Standard 32-bit floating-point RGBA format.",null,null],[6,"Depth","","Standard 24-bit depth format.",null,null],[6,"DepthStencil","","Standard 24-bit depth format with 8-bit stencil.",null,null],[6,"Depth32F","","Standard 32-bit floating-point depth format.",null,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",52,null],[10,"get_surface_type","","Return the run-time value of the type.",52,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel.\nFor example, normalized integers are visible as floats.",53,null],[10,"get_channel_type","","Return the run-time value of the type.",53,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",54,null],[16,"Channel","","Associated channel type.",54,null],[16,"View","","Shader view type of this format.",54,null],[11,"get_format","","Return the run-time value of the type.",54,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[11,"fmt","","",49,{"inputs":[{"name":"channeltype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"channeltype"}],"output":{"name":"channeltype"}}],[11,"hash","","",49,null],[11,"partial_cmp","","",49,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"option"}}],[11,"eq","","",49,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"cmp","","",49,{"inputs":[{"name":"channeltype"},{"name":"channeltype"}],"output":{"name":"ordering"}}],[11,"fmt","","",55,{"inputs":[{"name":"int"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"int"}],"output":{"name":"int"}}],[11,"hash","","",55,null],[11,"partial_cmp","","",55,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"option"}}],[11,"eq","","",55,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"bool"}}],[11,"cmp","","",55,{"inputs":[{"name":"int"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",55,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",56,{"inputs":[{"name":"uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"uint"}],"output":{"name":"uint"}}],[11,"hash","","",56,null],[11,"partial_cmp","","",56,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"option"}}],[11,"eq","","",56,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"uint"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",56,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",57,{"inputs":[{"name":"inorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"inorm"}],"output":{"name":"inorm"}}],[11,"hash","","",57,null],[11,"partial_cmp","","",57,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"option"}}],[11,"eq","","",57,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"bool"}}],[11,"cmp","","",57,{"inputs":[{"name":"inorm"},{"name":"inorm"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",57,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",58,{"inputs":[{"name":"unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"unorm"}],"output":{"name":"unorm"}}],[11,"hash","","",58,null],[11,"partial_cmp","","",58,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"option"}}],[11,"eq","","",58,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"unorm"},{"name":"unorm"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",58,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",59,{"inputs":[{"name":"float"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"float"}],"output":{"name":"float"}}],[11,"hash","","",59,null],[11,"partial_cmp","","",59,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"option"}}],[11,"eq","","",59,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"float"},{"name":"float"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",59,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",60,{"inputs":[{"name":"srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"srgb"}],"output":{"name":"srgb"}}],[11,"hash","","",60,null],[11,"partial_cmp","","",60,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"option"}}],[11,"eq","","",60,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"bool"}}],[11,"cmp","","",60,{"inputs":[{"name":"srgb"},{"name":"srgb"}],"output":{"name":"ordering"}}],[11,"get_channel_type","","",60,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",50,{"inputs":[{"name":"surfacetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"surfacetype"}],"output":{"name":"surfacetype"}}],[11,"hash","","",50,null],[11,"partial_cmp","","",50,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"option"}}],[11,"eq","","",50,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"cmp","","",50,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"ordering"}}],[11,"get_total_bits","","Return the total number of bits for this format.",50,{"inputs":[{"name":"surfacetype"}],"output":{"name":"u8"}}],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",50,{"inputs":[{"name":"surfacetype"}],"output":{"name":"u8"}}],[11,"fmt","","",61,{"inputs":[{"name":"r4_g4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"r4_g4"}],"output":{"name":"r4_g4"}}],[11,"hash","","",61,null],[11,"partial_cmp","","",61,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"option"}}],[11,"eq","","",61,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"r4_g4"},{"name":"r4_g4"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",61,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",62,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"r4_g4_b4_a4"}],"output":{"name":"r4_g4_b4_a4"}}],[11,"hash","","",62,null],[11,"partial_cmp","","",62,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"option"}}],[11,"eq","","",62,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"r4_g4_b4_a4"},{"name":"r4_g4_b4_a4"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",62,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",63,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"r5_g5_b5_a1"}],"output":{"name":"r5_g5_b5_a1"}}],[11,"hash","","",63,null],[11,"partial_cmp","","",63,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"option"}}],[11,"eq","","",63,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"bool"}}],[11,"cmp","","",63,{"inputs":[{"name":"r5_g5_b5_a1"},{"name":"r5_g5_b5_a1"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",63,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",64,{"inputs":[{"name":"r5_g6_b5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"r5_g6_b5"}],"output":{"name":"r5_g6_b5"}}],[11,"hash","","",64,null],[11,"partial_cmp","","",64,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"option"}}],[11,"eq","","",64,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"bool"}}],[11,"cmp","","",64,{"inputs":[{"name":"r5_g6_b5"},{"name":"r5_g6_b5"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",64,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",65,{"inputs":[{"name":"r8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"r8"}],"output":{"name":"r8"}}],[11,"hash","","",65,null],[11,"partial_cmp","","",65,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"option"}}],[11,"eq","","",65,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"bool"}}],[11,"cmp","","",65,{"inputs":[{"name":"r8"},{"name":"r8"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",65,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",66,{"inputs":[{"name":"r8_g8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"r8_g8"}],"output":{"name":"r8_g8"}}],[11,"hash","","",66,null],[11,"partial_cmp","","",66,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"option"}}],[11,"eq","","",66,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"bool"}}],[11,"cmp","","",66,{"inputs":[{"name":"r8_g8"},{"name":"r8_g8"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",66,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",67,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"r8_g8_b8_a8"}],"output":{"name":"r8_g8_b8_a8"}}],[11,"hash","","",67,null],[11,"partial_cmp","","",67,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"option"}}],[11,"eq","","",67,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"bool"}}],[11,"cmp","","",67,{"inputs":[{"name":"r8_g8_b8_a8"},{"name":"r8_g8_b8_a8"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",67,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",68,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"r10_g10_b10_a2"}],"output":{"name":"r10_g10_b10_a2"}}],[11,"hash","","",68,null],[11,"partial_cmp","","",68,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"option"}}],[11,"eq","","",68,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"bool"}}],[11,"cmp","","",68,{"inputs":[{"name":"r10_g10_b10_a2"},{"name":"r10_g10_b10_a2"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",68,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",69,{"inputs":[{"name":"r11_g11_b10"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"r11_g11_b10"}],"output":{"name":"r11_g11_b10"}}],[11,"hash","","",69,null],[11,"partial_cmp","","",69,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"option"}}],[11,"eq","","",69,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"bool"}}],[11,"cmp","","",69,{"inputs":[{"name":"r11_g11_b10"},{"name":"r11_g11_b10"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",69,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",70,{"inputs":[{"name":"r16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"r16"}],"output":{"name":"r16"}}],[11,"hash","","",70,null],[11,"partial_cmp","","",70,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"option"}}],[11,"eq","","",70,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"r16"},{"name":"r16"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",70,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",71,{"inputs":[{"name":"r16_g16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"r16_g16"}],"output":{"name":"r16_g16"}}],[11,"hash","","",71,null],[11,"partial_cmp","","",71,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"option"}}],[11,"eq","","",71,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"bool"}}],[11,"cmp","","",71,{"inputs":[{"name":"r16_g16"},{"name":"r16_g16"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",71,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",72,{"inputs":[{"name":"r16_g16_b16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"r16_g16_b16"}],"output":{"name":"r16_g16_b16"}}],[11,"hash","","",72,null],[11,"partial_cmp","","",72,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"bool"}}],[11,"cmp","","",72,{"inputs":[{"name":"r16_g16_b16"},{"name":"r16_g16_b16"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",72,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",73,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"r16_g16_b16_a16"}],"output":{"name":"r16_g16_b16_a16"}}],[11,"hash","","",73,null],[11,"partial_cmp","","",73,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"option"}}],[11,"eq","","",73,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"bool"}}],[11,"cmp","","",73,{"inputs":[{"name":"r16_g16_b16_a16"},{"name":"r16_g16_b16_a16"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",73,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",74,{"inputs":[{"name":"r32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"r32"}],"output":{"name":"r32"}}],[11,"hash","","",74,null],[11,"partial_cmp","","",74,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"option"}}],[11,"eq","","",74,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"bool"}}],[11,"cmp","","",74,{"inputs":[{"name":"r32"},{"name":"r32"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",74,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",75,{"inputs":[{"name":"r32_g32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"r32_g32"}],"output":{"name":"r32_g32"}}],[11,"hash","","",75,null],[11,"partial_cmp","","",75,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"option"}}],[11,"eq","","",75,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"bool"}}],[11,"cmp","","",75,{"inputs":[{"name":"r32_g32"},{"name":"r32_g32"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",75,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",76,{"inputs":[{"name":"r32_g32_b32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"r32_g32_b32"}],"output":{"name":"r32_g32_b32"}}],[11,"hash","","",76,null],[11,"partial_cmp","","",76,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"option"}}],[11,"eq","","",76,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"bool"}}],[11,"cmp","","",76,{"inputs":[{"name":"r32_g32_b32"},{"name":"r32_g32_b32"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",76,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",77,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"r32_g32_b32_a32"}],"output":{"name":"r32_g32_b32_a32"}}],[11,"hash","","",77,null],[11,"partial_cmp","","",77,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"option"}}],[11,"eq","","",77,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"bool"}}],[11,"cmp","","",77,{"inputs":[{"name":"r32_g32_b32_a32"},{"name":"r32_g32_b32_a32"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",77,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",78,{"inputs":[{"name":"d16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"d16"}],"output":{"name":"d16"}}],[11,"hash","","",78,null],[11,"partial_cmp","","",78,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"option"}}],[11,"eq","","",78,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"bool"}}],[11,"cmp","","",78,{"inputs":[{"name":"d16"},{"name":"d16"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",78,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",79,{"inputs":[{"name":"d24"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"d24"}],"output":{"name":"d24"}}],[11,"hash","","",79,null],[11,"partial_cmp","","",79,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"option"}}],[11,"eq","","",79,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"bool"}}],[11,"cmp","","",79,{"inputs":[{"name":"d24"},{"name":"d24"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",79,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",80,{"inputs":[{"name":"d24_s8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"d24_s8"}],"output":{"name":"d24_s8"}}],[11,"hash","","",80,null],[11,"partial_cmp","","",80,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"option"}}],[11,"eq","","",80,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"bool"}}],[11,"cmp","","",80,{"inputs":[{"name":"d24_s8"},{"name":"d24_s8"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",80,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",81,{"inputs":[{"name":"d32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"d32"}],"output":{"name":"d32"}}],[11,"hash","","",81,null],[11,"partial_cmp","","",81,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"option"}}],[11,"eq","","",81,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"bool"}}],[11,"cmp","","",81,{"inputs":[{"name":"d32"},{"name":"d32"}],"output":{"name":"ordering"}}],[11,"get_surface_type","","",81,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",51,{"inputs":[{"name":"channelsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"channelsource"}],"output":{"name":"channelsource"}}],[11,"hash","","",51,null],[11,"partial_cmp","","",51,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"option"}}],[11,"eq","","",51,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"bool"}}],[11,"cmp","","",51,{"inputs":[{"name":"channelsource"},{"name":"channelsource"}],"output":{"name":"ordering"}}],[11,"fmt","","",42,{"inputs":[{"name":"swizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"swizzle"}],"output":{"name":"swizzle"}}],[11,"hash","","",42,null],[11,"partial_cmp","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"option"}}],[11,"lt","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"le","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"gt","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ge","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"eq","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"cmp","","",42,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"ordering"}}],[11,"new","","Create a new swizzle where each channel is unmapped.",42,{"inputs":[],"output":{"name":"swizzle"}}],[11,"fmt","","",43,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"hash","","",43,null],[11,"partial_cmp","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"fmt","","",44,{"inputs":[{"name":"u8norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"u8norm"}],"output":{"name":"u8norm"}}],[11,"hash","","",44,null],[11,"partial_cmp","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"eq","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"bool"}}],[11,"cmp","","",44,{"inputs":[{"name":"u8norm"},{"name":"u8norm"}],"output":{"name":"ordering"}}],[11,"from","","",44,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[11,"cast2","","Convert a 2-element slice.",44,null],[11,"cast3","","Convert a 3-element slice.",44,null],[11,"cast4","","Convert a 4-element slice.",44,null],[11,"cast_slice","","Convert a generic slice by transmutation.",44,null],[11,"fmt","","",45,{"inputs":[{"name":"i8norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"i8norm"}],"output":{"name":"i8norm"}}],[11,"hash","","",45,null],[11,"partial_cmp","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"eq","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"bool"}}],[11,"cmp","","",45,{"inputs":[{"name":"i8norm"},{"name":"i8norm"}],"output":{"name":"ordering"}}],[11,"from","","",45,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[11,"cast2","","Convert a 2-element slice.",45,null],[11,"cast3","","Convert a 3-element slice.",45,null],[11,"cast4","","Convert a 4-element slice.",45,null],[11,"cast_slice","","Convert a generic slice by transmutation.",45,null],[11,"fmt","","",46,{"inputs":[{"name":"u16norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"u16norm"}],"output":{"name":"u16norm"}}],[11,"hash","","",46,null],[11,"partial_cmp","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"eq","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"bool"}}],[11,"cmp","","",46,{"inputs":[{"name":"u16norm"},{"name":"u16norm"}],"output":{"name":"ordering"}}],[11,"from","","",46,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"cast2","","Convert a 2-element slice.",46,null],[11,"cast3","","Convert a 3-element slice.",46,null],[11,"cast4","","Convert a 4-element slice.",46,null],[11,"cast_slice","","Convert a generic slice by transmutation.",46,null],[11,"fmt","","",47,{"inputs":[{"name":"i16norm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"i16norm"}],"output":{"name":"i16norm"}}],[11,"hash","","",47,null],[11,"partial_cmp","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"eq","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"bool"}}],[11,"cmp","","",47,{"inputs":[{"name":"i16norm"},{"name":"i16norm"}],"output":{"name":"ordering"}}],[11,"from","","",47,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"cast2","","Convert a 2-element slice.",47,null],[11,"cast3","","Convert a 3-element slice.",47,null],[11,"cast4","","Convert a 4-element slice.",47,null],[11,"cast_slice","","Convert a generic slice by transmutation.",47,null],[11,"fmt","","",48,{"inputs":[{"name":"f16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"f16"}],"output":{"name":"f16"}}],[11,"hash","","",48,null],[11,"partial_cmp","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"bool"}}],[11,"cmp","","",48,{"inputs":[{"name":"f16"},{"name":"f16"}],"output":{"name":"ordering"}}],[11,"from","","",48,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"cast2","","Convert a 2-element slice.",48,null],[11,"cast3","","Convert a 3-element slice.",48,null],[11,"cast4","","Convert a 4-element slice.",48,null],[11,"cast_slice","","Convert a generic slice by transmutation.",48,null],[0,"handle","gfx_core","Device resource handles",null,null],[3,"RawBuffer","gfx_core::handle","Raw (untyped) Buffer Handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture object",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",82,{"inputs":[{"name":"producer"},{"name":"buffer"},{"name":"bufferinfo"}],"output":{"name":"rawbuffer"}}],[10,"make_shader","","",82,{"inputs":[{"name":"producer"},{"name":"shader"}],"output":{"name":"shader"}}],[10,"make_program","","",82,{"inputs":[{"name":"producer"},{"name":"program"},{"name":"programinfo"}],"output":{"name":"program"}}],[10,"make_pso","","",82,{"inputs":[{"name":"producer"},{"name":"pipelinestateobject"},{"name":"program"}],"output":{"name":"rawpipelinestate"}}],[10,"make_texture","","",82,{"inputs":[{"name":"producer"},{"name":"texture"},{"name":"descriptor"}],"output":{"name":"rawtexture"}}],[10,"make_buffer_srv","","",82,{"inputs":[{"name":"producer"},{"name":"shaderresourceview"},{"name":"rawbuffer"}],"output":{"name":"rawshaderresourceview"}}],[10,"make_texture_srv","","",82,{"inputs":[{"name":"producer"},{"name":"shaderresourceview"},{"name":"rawtexture"}],"output":{"name":"rawshaderresourceview"}}],[10,"make_buffer_uav","","",82,{"inputs":[{"name":"producer"},{"name":"unorderedaccessview"},{"name":"rawbuffer"}],"output":{"name":"rawunorderedaccessview"}}],[10,"make_texture_uav","","",82,{"inputs":[{"name":"producer"},{"name":"unorderedaccessview"},{"name":"rawtexture"}],"output":{"name":"rawunorderedaccessview"}}],[10,"make_rtv","","",82,{"inputs":[{"name":"producer"},{"name":"rendertargetview"},{"name":"rawtexture"},{"name":"dimensions"}],"output":{"name":"rawrendertargetview"}}],[10,"make_dsv","","",82,{"inputs":[{"name":"producer"},{"name":"depthstencilview"},{"name":"rawtexture"},{"name":"dimensions"}],"output":{"name":"rawdepthstencilview"}}],[10,"make_sampler","","",82,{"inputs":[{"name":"producer"},{"name":"sampler"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"make_fence","","",82,{"inputs":[{"name":"producer"},{"name":"fence"}],"output":{"name":"fence"}}],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",82,{"inputs":[{"name":"producer"},{"name":"t"},{"name":"a"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"},{"name":"f"},{"name":"g"},{"name":"h"},{"name":"i"},{"name":"j"},{"name":"k"}],"output":null}],[11,"eq","","",83,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"hash","","",83,null],[11,"fmt","","",83,{"inputs":[{"name":"rawbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get raw buffer info",83,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"bufferinfo"}}],[11,"eq","","",84,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"new","","",84,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"raw","","",84,{"inputs":[{"name":"buffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get the associated information about the buffer",84,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferinfo"}}],[11,"len","","Get the number of elements in the buffer.",84,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"eq","","",85,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"shader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"shader"}],"output":{"name":"shader"}}],[11,"eq","","",86,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"program"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"program"}],"output":{"name":"program"}}],[11,"get_info","","Get program info",86,{"inputs":[{"name":"program"}],"output":{"name":"programinfo"}}],[11,"eq","","",87,{"inputs":[{"name":"rawpipelinestate"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"rawpipelinestate"},{"name":"rawpipelinestate"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"rawpipelinestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"rawpipelinestate"}],"output":{"name":"rawpipelinestate"}}],[11,"eq","","",88,{"inputs":[{"name":"rawtexture"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"rawtexture"},{"name":"rawtexture"}],"output":{"name":"bool"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"inputs":[{"name":"rawtexture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"rawtexture"}],"output":{"name":"rawtexture"}}],[11,"eq","","",89,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"hash","","",89,null],[11,"fmt","","",89,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"get_info","","Get texture descriptor",88,{"inputs":[{"name":"rawtexture"}],"output":{"name":"descriptor"}}],[11,"new","","",89,{"inputs":[{"name":"rawtexture"}],"output":{"name":"texture"}}],[11,"raw","","",89,{"inputs":[{"name":"texture"}],"output":{"name":"rawtexture"}}],[11,"get_info","","Get texture descriptor",89,{"inputs":[{"name":"texture"}],"output":{"name":"descriptor"}}],[11,"eq","","",90,{"inputs":[{"name":"rawshaderresourceview"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"rawshaderresourceview"},{"name":"rawshaderresourceview"}],"output":{"name":"bool"}}],[11,"hash","","",90,null],[11,"fmt","","",90,{"inputs":[{"name":"rawshaderresourceview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"rawshaderresourceview"}}],[11,"eq","","",91,{"inputs":[{"name":"shaderresourceview"},{"name":"shaderresourceview"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"shaderresourceview"},{"name":"shaderresourceview"}],"output":{"name":"bool"}}],[11,"hash","","",91,null],[11,"fmt","","",91,{"inputs":[{"name":"shaderresourceview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"shaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"new","","",91,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"raw","","",91,{"inputs":[{"name":"shaderresourceview"}],"output":{"name":"rawshaderresourceview"}}],[11,"eq","","",92,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"rawunorderedaccessview"}],"output":{"name":"bool"}}],[11,"hash","","",92,null],[11,"fmt","","",92,{"inputs":[{"name":"rawunorderedaccessview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"rawunorderedaccessview"}}],[11,"eq","","",93,{"inputs":[{"name":"unorderedaccessview"},{"name":"unorderedaccessview"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"unorderedaccessview"},{"name":"unorderedaccessview"}],"output":{"name":"bool"}}],[11,"hash","","",93,null],[11,"fmt","","",93,{"inputs":[{"name":"unorderedaccessview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"unorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"new","","",93,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"raw","","",93,{"inputs":[{"name":"unorderedaccessview"}],"output":{"name":"rawunorderedaccessview"}}],[11,"eq","","",94,{"inputs":[{"name":"rawrendertargetview"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"rawrendertargetview"},{"name":"rawrendertargetview"}],"output":{"name":"bool"}}],[11,"hash","","",94,null],[11,"fmt","","",94,{"inputs":[{"name":"rawrendertargetview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rawrendertargetview"}}],[11,"get_dimensions","","Get target dimensions",94,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"dimensions"}}],[11,"eq","","",95,{"inputs":[{"name":"rawdepthstencilview"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"rawdepthstencilview"},{"name":"rawdepthstencilview"}],"output":{"name":"bool"}}],[11,"hash","","",95,null],[11,"fmt","","",95,{"inputs":[{"name":"rawdepthstencilview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"rawdepthstencilview"}}],[11,"get_dimensions","","Get target dimensions",95,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"dimensions"}}],[11,"eq","","",96,{"inputs":[{"name":"rendertargetview"},{"name":"rendertargetview"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"rendertargetview"},{"name":"rendertargetview"}],"output":{"name":"bool"}}],[11,"hash","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"rendertargetview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"rendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"get_dimensions","","Get target dimensions",96,{"inputs":[{"name":"rendertargetview"}],"output":{"name":"dimensions"}}],[11,"new","","",96,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"raw","","",96,{"inputs":[{"name":"rendertargetview"}],"output":{"name":"rawrendertargetview"}}],[11,"eq","","",97,{"inputs":[{"name":"depthstencilview"},{"name":"depthstencilview"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"depthstencilview"},{"name":"depthstencilview"}],"output":{"name":"bool"}}],[11,"hash","","",97,null],[11,"fmt","","",97,{"inputs":[{"name":"depthstencilview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"depthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"get_dimensions","","Get target dimensions",97,{"inputs":[{"name":"depthstencilview"}],"output":{"name":"dimensions"}}],[11,"new","","",97,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"raw","","",97,{"inputs":[{"name":"depthstencilview"}],"output":{"name":"rawdepthstencilview"}}],[11,"eq","","",98,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"sampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"get_info","","Get sampler info",98,{"inputs":[{"name":"sampler"}],"output":{"name":"samplerinfo"}}],[11,"eq","","",99,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"make_buffer","","",100,{"inputs":[{"name":"manager"},{"name":"buffer"},{"name":"bufferinfo"}],"output":{"name":"rawbuffer"}}],[11,"make_shader","","",100,{"inputs":[{"name":"manager"},{"name":"shader"}],"output":{"name":"shader"}}],[11,"make_program","","",100,{"inputs":[{"name":"manager"},{"name":"program"},{"name":"programinfo"}],"output":{"name":"program"}}],[11,"make_pso","","",100,{"inputs":[{"name":"manager"},{"name":"pipelinestateobject"},{"name":"program"}],"output":{"name":"rawpipelinestate"}}],[11,"make_texture","","",100,{"inputs":[{"name":"manager"},{"name":"texture"},{"name":"descriptor"}],"output":{"name":"rawtexture"}}],[11,"make_buffer_srv","","",100,{"inputs":[{"name":"manager"},{"name":"shaderresourceview"},{"name":"rawbuffer"}],"output":{"name":"rawshaderresourceview"}}],[11,"make_texture_srv","","",100,{"inputs":[{"name":"manager"},{"name":"shaderresourceview"},{"name":"rawtexture"}],"output":{"name":"rawshaderresourceview"}}],[11,"make_buffer_uav","","",100,{"inputs":[{"name":"manager"},{"name":"unorderedaccessview"},{"name":"rawbuffer"}],"output":{"name":"rawunorderedaccessview"}}],[11,"make_texture_uav","","",100,{"inputs":[{"name":"manager"},{"name":"unorderedaccessview"},{"name":"rawtexture"}],"output":{"name":"rawunorderedaccessview"}}],[11,"make_rtv","","",100,{"inputs":[{"name":"manager"},{"name":"rendertargetview"},{"name":"rawtexture"},{"name":"dimensions"}],"output":{"name":"rawrendertargetview"}}],[11,"make_dsv","","",100,{"inputs":[{"name":"manager"},{"name":"depthstencilview"},{"name":"rawtexture"},{"name":"dimensions"}],"output":{"name":"rawdepthstencilview"}}],[11,"make_sampler","","",100,{"inputs":[{"name":"manager"},{"name":"sampler"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[11,"make_fence","","",100,{"inputs":[{"name":"manager"},{"name":"fence"}],"output":{"name":"fence"}}],[11,"clean_with","","",100,{"inputs":[{"name":"manager"},{"name":"t"},{"name":"a"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"},{"name":"f"},{"name":"g"},{"name":"h"},{"name":"i"},{"name":"j"},{"name":"k"}],"output":null}],[11,"new","","Create a new handle manager",100,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",100,{"inputs":[{"name":"manager"}],"output":null}],[11,"extend","","Extend with all references of another handle manager",100,{"inputs":[{"name":"manager"},{"name":"manager"}],"output":null}],[11,"count","","Count the total number of referenced resources",100,{"inputs":[{"name":"manager"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",100,{"inputs":[{"name":"manager"},{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"ref_shader","","Reference a shader",100,{"inputs":[{"name":"manager"},{"name":"shader"}],"output":{"name":"shader"}}],[11,"ref_program","","Reference a program",100,{"inputs":[{"name":"manager"},{"name":"program"}],"output":{"name":"program"}}],[11,"ref_pso","","Reference a pipeline state object",100,null],[11,"ref_texture","","Reference a texture",100,{"inputs":[{"name":"manager"},{"name":"rawtexture"}],"output":{"name":"texture"}}],[11,"ref_srv","","Reference a shader resource view",100,{"inputs":[{"name":"manager"},{"name":"rawshaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"ref_uav","","Reference an unordered access view",100,{"inputs":[{"name":"manager"},{"name":"rawunorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"ref_rtv","","Reference an RTV",100,{"inputs":[{"name":"manager"},{"name":"rawrendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"ref_dsv","","Reference a DSV",100,{"inputs":[{"name":"manager"},{"name":"rawdepthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"ref_sampler","","Reference a sampler",100,{"inputs":[{"name":"manager"},{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"ref_fence","","Reference a fence",100,{"inputs":[{"name":"manager"},{"name":"fence"}],"output":{"name":"fence"}}],[0,"mapping","gfx_core","Memory mapping",null,null],[3,"Readable","gfx_core::mapping","A handle to a readable map, which can be sliced.",null,null],[3,"Writable","","A handle to a writable map, which only allows setting elements.",null,null],[3,"RW","","A handle to a complete readable/writable map, which can be sliced both ways.",null,null],[8,"Raw","","Unsafe operations for a buffer mapping",null,null],[10,"set","","Set the element at `index` to `val`. Not bounds-checked.",101,{"inputs":[{"name":"raw"},{"name":"usize"},{"name":"t"}],"output":null}],[10,"to_slice","","Returns a slice of the specified length.",101,null],[10,"to_mut_slice","","Returns a mutable slice of the specified length.",101,null],[8,"Builder","","A service trait with methods for mapping already implemented.\nTo be used by device back ends.",null,null],[16,"RawMapping","","",102,null],[10,"map_readable","","",102,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"readable"}}],[10,"map_writable","","",102,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"writable"}}],[10,"map_read_write","","",102,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"rw"}}],[11,"deref","","",103,null],[11,"drop","","",103,{"inputs":[{"name":"readable"}],"output":null}],[11,"set","","Set a value in the buffer",104,{"inputs":[{"name":"writable"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"to_mut_slice","","Returns a mutable slice of the specified length.",104,null],[11,"drop","","",104,{"inputs":[{"name":"writable"}],"output":null}],[11,"deref","","",105,null],[11,"deref_mut","","",105,null],[11,"drop","","",105,{"inputs":[{"name":"rw"}],"output":null}],[0,"pso","gfx_core","Pipeline State Objects",null,null],[3,"CreationError","gfx_core::pso","Error types happening upon PSO creation on the device side.",null,null],[3,"ColorInfo","","Color output configuration of the PSO.",null,null],[12,"mask","","Color channel mask",106,null],[12,"color","","Optional color blending",106,null],[12,"alpha","","Optional alpha blending",106,null],[3,"DepthStencilInfo","","Depth and stencil state of the PSO.",null,null],[12,"depth","","Optional depth test configuration",107,null],[12,"front","","Optional stencil test on the front faces",107,null],[12,"back","","Optional stencil test on the back faces",107,null],[3,"Element","","A struct element descriptor.",null,null],[12,"format","","Element format",108,null],[12,"offset","","Offset from the beginning of the container, in bytes",108,null],[12,"stride","","Total container size, in bytes",108,null],[3,"Descriptor","","All the information surrounding a shader program that is required\nfor PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",109,null],[12,"rasterizer","","Rasterizer setup",109,null],[12,"scissor","","Enable scissor test",109,null],[12,"attributes","","Vertex attributes",109,null],[12,"color_targets","","Render target views (RTV)",109,null],[12,"depth_stencil","","Depth stencil view (DSV)",109,null],[3,"VertexBufferSet","","A complete set of vertex buffers to be used for vertex import in PSO.",null,null],[12,"0","","Array of buffer handles with offsets in them",110,null],[3,"ConstantBufferParam","","A constant buffer run-time parameter for PSO.",null,null],[12,"0","","",111,null],[12,"1","","",111,null],[12,"2","","",111,null],[3,"ResourceViewParam","","A shader resource view (SRV) run-time parameter for PSO.",null,null],[12,"0","","",112,null],[12,"1","","",112,null],[12,"2","","",112,null],[3,"UnorderedViewParam","","An unordered access view (UAV) run-time parameter for PSO.",null,null],[12,"0","","",113,null],[12,"1","","",113,null],[12,"2","","",113,null],[3,"SamplerParam","","A sampler run-time parameter for PSO.",null,null],[12,"0","","",114,null],[12,"1","","",114,null],[12,"2","","",114,null],[3,"PixelTargetSet","","A complete set of render targets to be used for pixel export in PSO.",null,null],[12,"colors","","Array of color target views",115,null],[12,"depth","","Depth target view",115,null],[12,"stencil","","Stencil target view",115,null],[12,"size","","Rendering dimensions",115,null],[6,"BufferOffset","","An offset inside a vertex buffer, in bytes.",null,null],[6,"ElemOffset","","Offset of an attribute from the start of the buffer, in bytes",null,null],[6,"ElemStride","","Offset between attribute values, in bytes",null,null],[6,"InstanceRate","","The number of instances between each subsequent attribute value",null,null],[6,"AttributeDesc","","PSO vertex attribute descriptor",null,null],[6,"ColorTargetDesc","","PSO color target descriptor",null,null],[6,"DepthStencilDesc","","PSO depth-stencil target descriptor",null,null],[11,"fmt","","",116,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"creationerror"}],"output":{"name":"creationerror"}}],[11,"eq","","",106,{"inputs":[{"name":"colorinfo"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"colorinfo"},{"name":"colorinfo"}],"output":{"name":"bool"}}],[11,"hash","","",106,null],[11,"fmt","","",106,{"inputs":[{"name":"colorinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"colorinfo"}],"output":{"name":"colorinfo"}}],[11,"from","","",106,{"inputs":[{"name":"colormask"}],"output":{"name":"colorinfo"}}],[11,"from","","",106,{"inputs":[{"name":"blend"}],"output":{"name":"colorinfo"}}],[11,"eq","","",107,{"inputs":[{"name":"depthstencilinfo"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"depthstencilinfo"},{"name":"depthstencilinfo"}],"output":{"name":"bool"}}],[11,"hash","","",107,null],[11,"fmt","","",107,{"inputs":[{"name":"depthstencilinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"depthstencilinfo"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",107,{"inputs":[{"name":"depth"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",107,{"inputs":[{"name":"stencil"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",107,null],[11,"eq","","",108,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"hash","","",108,null],[11,"fmt","","",108,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"eq","","",109,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"hash","","",109,null],[11,"fmt","","",109,{"inputs":[{"name":"descriptor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"descriptor"}],"output":{"name":"descriptor"}}],[11,"new","","Create a new empty PSO descriptor.",109,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"fmt","","",110,{"inputs":[{"name":"vertexbufferset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"vertexbufferset"}],"output":{"name":"vertexbufferset"}}],[11,"new","","Create an empty set",110,{"inputs":[],"output":{"name":"vertexbufferset"}}],[11,"fmt","","",111,{"inputs":[{"name":"constantbufferparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"constantbufferparam"}],"output":{"name":"constantbufferparam"}}],[11,"fmt","","",112,{"inputs":[{"name":"resourceviewparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"resourceviewparam"}],"output":{"name":"resourceviewparam"}}],[11,"fmt","","",113,{"inputs":[{"name":"unorderedviewparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"unorderedviewparam"}],"output":{"name":"unorderedviewparam"}}],[11,"fmt","","",114,{"inputs":[{"name":"samplerparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"samplerparam"}],"output":{"name":"samplerparam"}}],[11,"fmt","","",115,{"inputs":[{"name":"pixeltargetset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"pixeltargetset"}],"output":{"name":"pixeltargetset"}}],[11,"new","","Create an empty set",115,{"inputs":[],"output":{"name":"pixeltargetset"}}],[11,"add_color","","Add a color view to the specified slot",115,{"inputs":[{"name":"pixeltargetset"},{"name":"colorslot"},{"name":"rendertargetview"},{"name":"dimensions"}],"output":null}],[11,"add_depth_stencil","","Add a depth or stencil view to the specified slot",115,{"inputs":[{"name":"pixeltargetset"},{"name":"depthstencilview"},{"name":"bool"},{"name":"bool"},{"name":"dimensions"}],"output":null}],[0,"shade","gfx_core","Shader handling.",null,null],[3,"SamplerType","gfx_core::shade","A type of the sampler variable.",null,null],[12,"0","","",117,null],[12,"1","","",117,null],[3,"Usage","","Parameter usage flags.",null,null],[3,"AttributeVar","","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",118,null],[12,"slot","","Slot of the vertex attribute.",118,null],[12,"base_type","","Type that this attribute is composed of.",118,null],[12,"container","","&quot;Scalarness&quot; of this attribute.",118,null],[3,"ConstVar","","A constant in the shader - a bit of data that doesn&#39;t vary",null,null],[12,"name","","Name of this constant.",119,null],[12,"location","","Location of this constant in the program.",119,null],[12,"count","","Number of elements this constant represents.",119,null],[12,"base_type","","Type that this constant is composed of",119,null],[12,"container","","&quot;Scalarness&quot; of this constant.",119,null],[3,"ConstantBufferVar","","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",120,null],[12,"slot","","Slot of the constant buffer.",120,null],[12,"size","","Size (in bytes) of this buffer&#39;s data.",120,null],[12,"usage","","What program stage this buffer is used in.",120,null],[3,"TextureVar","","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",121,null],[12,"slot","","Slot of this texture variable.",121,null],[12,"base_type","","Base type for the texture.",121,null],[12,"ty","","Type of this texture.",121,null],[12,"usage","","What program stage this texture is used in.",121,null],[3,"UnorderedVar","","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",122,null],[12,"slot","","Slot of this unordered variable.",122,null],[12,"usage","","What program stage this UAV is used in.",122,null],[3,"SamplerVar","","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",123,null],[12,"slot","","Slot of this sampler variable.",123,null],[12,"ty","","Type of this sampler.",123,null],[12,"usage","","What program stage this texture is used in.",123,null],[3,"OutputVar","","Target output variable.",null,null],[12,"name","","Name of this output variable.",124,null],[12,"slot","","Output color target index.",124,null],[12,"base_type","","Type of the output component.",124,null],[12,"container","","&quot;Scalarness&quot; of this output.",124,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",125,null],[12,"globals","","Global constants in the program",125,null],[12,"constant_buffers","","Constant buffers in the program",125,null],[12,"textures","","Textures in the program",125,null],[12,"unordereds","","Unordered access resources in the program",125,null],[12,"samplers","","Samplers in the program",125,null],[12,"outputs","","Output targets in the program",125,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",125,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",126,null],[13,"NoArray","","",126,null],[4,"IsComparison","","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",127,null],[13,"NoCompare","","",127,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",128,null],[13,"NoMultiSample","","",128,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",129,null],[13,"NoRect","","",129,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",130,null],[13,"RowMajor","","",130,null],[4,"TextureType","","A type of the texture variable.\nThis has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",131,null],[13,"D1","","Sample from a 1D texture",131,null],[13,"D2","","Sample from a 2D texture",131,null],[13,"D3","","Sample from a 3D texture",131,null],[13,"Cube","","Sample from a cubemap.",131,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"I32","","",132,null],[13,"U32","","",132,null],[13,"F32","","",132,null],[13,"F64","","",132,null],[13,"Bool","","",132,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",133,null],[13,"Vector","","A vector with `Dimension` components.",133,null],[13,"Matrix","","A matrix.",133,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",134,null],[13,"Geometry","","",134,null],[13,"Pixel","","",134,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",135,null],[13,"F32","","",135,null],[13,"I32Vector2","","",135,null],[13,"I32Vector3","","",135,null],[13,"I32Vector4","","",135,null],[13,"F32Vector2","","",135,null],[13,"F32Vector3","","",135,null],[13,"F32Vector4","","",135,null],[13,"F32Matrix2","","",135,null],[13,"F32Matrix3","","",135,null],[13,"F32Matrix4","","",135,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",136,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",136,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\netc)",136,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",137,null],[13,"StageNotSupported","","The device does not support the shader stage.",137,null],[13,"CompilationFailed","","The shader failed to compile.",137,null],[6,"Dimension","","Number of components in a container type (vectors/matrices)",null,null],[6,"Location","","Location of a parameter in the program.",null,null],[6,"ConstFormat","","Format of a shader constant.",null,null],[6,"CreateProgramError","","An error type for creating programs.",null,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[8,"BaseTyped","","A trait that statically links simple data types to\nbase types of the shader constants.",null,null],[10,"get_base_type","","",138,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",139,{"inputs":[],"output":{"name":"constformat"}}],[11,"fmt","","",126,{"inputs":[{"name":"isarray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"isarray"}],"output":{"name":"isarray"}}],[11,"fmt","","",127,{"inputs":[{"name":"iscomparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",127,{"inputs":[{"name":"iscomparison"},{"name":"iscomparison"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"iscomparison"}],"output":{"name":"iscomparison"}}],[11,"fmt","","",128,{"inputs":[{"name":"ismultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",128,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"ismultisample"}],"output":{"name":"ismultisample"}}],[11,"fmt","","",129,{"inputs":[{"name":"isrect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"isrect"}],"output":{"name":"isrect"}}],[11,"fmt","","",130,{"inputs":[{"name":"matrixformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"matrixformat"}],"output":{"name":"matrixformat"}}],[11,"fmt","","",131,{"inputs":[{"name":"texturetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",131,{"inputs":[{"name":"texturetype"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"texturetype"},{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"texturetype"}],"output":{"name":"texturetype"}}],[11,"can_sample","","Check if this texture can be used with a sampler.",131,{"inputs":[{"name":"texturetype"}],"output":{"name":"bool"}}],[11,"fmt","","",117,{"inputs":[{"name":"samplertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"samplertype"}],"output":{"name":"samplertype"}}],[11,"fmt","","",132,{"inputs":[{"name":"basetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"basetype"}],"output":{"name":"basetype"}}],[11,"fmt","","",133,{"inputs":[{"name":"containertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",133,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"containertype"}],"output":{"name":"containertype"}}],[11,"eq","","",134,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"fmt","","",134,{"inputs":[{"name":"stage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"stage"}],"output":{"name":"stage"}}],[11,"clone","","",135,{"inputs":[{"name":"uniformvalue"}],"output":{"name":"uniformvalue"}}],[11,"fmt","","",135,{"inputs":[{"name":"uniformvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",140,null],[11,"cmp","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"eq","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",140,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",140,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",140,{"inputs":[{"name":"usage"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",140,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",140,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",140,{"inputs":[{"name":"usage"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",140,{"inputs":[{"name":"usage"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"sub","","Returns the set difference of the two sets of flags.",140,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"usage"}}],[11,"not","","Returns the complement of this set of flags.",140,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"from_iter","","",140,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"from","","",140,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"fmt","","",118,{"inputs":[{"name":"attributevar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"attributevar"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"attributevar"},{"name":"attributevar"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"attributevar"}],"output":{"name":"attributevar"}}],[11,"fmt","","",119,{"inputs":[{"name":"constvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"constvar"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"constvar"},{"name":"constvar"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"constvar"}],"output":{"name":"constvar"}}],[11,"fmt","","",120,{"inputs":[{"name":"constantbuffervar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",120,{"inputs":[{"name":"constantbuffervar"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"constantbuffervar"},{"name":"constantbuffervar"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"constantbuffervar"}],"output":{"name":"constantbuffervar"}}],[11,"fmt","","",121,{"inputs":[{"name":"texturevar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",121,{"inputs":[{"name":"texturevar"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"texturevar"},{"name":"texturevar"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"texturevar"}],"output":{"name":"texturevar"}}],[11,"fmt","","",122,{"inputs":[{"name":"unorderedvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"unorderedvar"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"unorderedvar"},{"name":"unorderedvar"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"unorderedvar"}],"output":{"name":"unorderedvar"}}],[11,"fmt","","",123,{"inputs":[{"name":"samplervar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"samplervar"}],"output":{"name":"samplervar"}}],[11,"fmt","","",124,{"inputs":[{"name":"outputvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"outputvar"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"outputvar"},{"name":"outputvar"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"outputvar"}],"output":{"name":"outputvar"}}],[11,"fmt","","",125,{"inputs":[{"name":"programinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"programinfo"}],"output":{"name":"programinfo"}}],[11,"fmt","","",136,{"inputs":[{"name":"compatibilityerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"compatibilityerror"}],"output":{"name":"compatibilityerror"}}],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",119,{"inputs":[{"name":"constvar"},{"name":"uniformvalue"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"createshadererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",137,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"createshadererror"}],"output":{"name":"createshadererror"}}],[0,"tex","gfx_core","Texture creation and modification.",null,null],[6,"Layer","gfx_core::tex","",null,null],[6,"Level","","",null,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",141,null],[12,"yoffset","","",141,null],[12,"zoffset","","",141,null],[12,"width","","",141,null],[12,"height","","",141,null],[12,"depth","","",141,null],[12,"format","","Format of each texel.",141,null],[12,"mipmap","","Which mipmap to select.",141,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",142,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",143,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak).",143,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",143,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",143,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",143,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",143,null],[3,"Descriptor","","Texture storage descriptor.",null,null],[12,"kind","","",144,null],[12,"levels","","",144,null],[12,"format","","",144,null],[12,"bind","","",144,null],[12,"usage","","",144,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",145,null],[12,"min","","",145,null],[12,"max","","",145,null],[12,"swizzle","","",145,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",146,null],[12,"level","","",146,null],[12,"layer","","",146,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",147,null],[12,"layer","","",147,null],[12,"flags","","",147,null],[4,"Error","","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",148,null],[13,"Kind","","The kind doesn&#39;t support a particular operation.",148,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",148,null],[13,"Size","","Unsupported size in one of the dimensions.",148,null],[13,"Data","","The given data has a different size than the target texture slice.",148,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",149,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",149,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",149,null],[4,"FilterMethod","","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They &quot;layer&quot; on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",150,null],[13,"Mipmap","","Add simple mipmapping.",150,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",150,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",150,null],[13,"Anisotropic","","Anisotropic filtering with a given &quot;max&quot;, must be between 1 and 16,\ninclusive.",150,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",151,null],[13,"NegX","","",151,null],[13,"PosY","","",151,null],[13,"NegY","","",151,null],[13,"PosZ","","",151,null],[13,"NegZ","","",151,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",152,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",152,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",152,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",152,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",152,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",152,null],[13,"CubeArray","","An array of Cube textures.",152,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",153,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",153,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",153,null],[13,"Border","","Use border color.",153,null],[6,"Size","","Dimension size",null,null],[6,"Bits","","Number of bits per component",null,null],[6,"NumSamples","","Number of MSAA samples",null,null],[6,"NumFragments","","Number of EQAA fragments",null,null],[6,"Dimensions","","Dimensions: width, height, depth, and samples.",null,null],[6,"RawImageInfo","","New raw image info based on the universal format spec.",null,null],[6,"NewImageInfo","","New image info based on the universal format spec.\nThe format is suppsed to come from compile-time information\nas opposed to run-time enum values.",null,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[11,"eq","","",148,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",148,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",149,{"inputs":[{"name":"aamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"aamode"}],"output":{"name":"aamode"}}],[11,"hash","","",149,null],[11,"partial_cmp","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"eq","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"cmp","","",149,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"ordering"}}],[11,"from","","",149,{"inputs":[{"name":"numsamples"}],"output":{"name":"aamode"}}],[11,"get_num_fragments","","Return the number of actual data fragments stored per texel.",149,{"inputs":[{"name":"aamode"}],"output":{"name":"numfragments"}}],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",149,{"inputs":[{"name":"aamode"}],"output":{"name":"bool"}}],[11,"fmt","","",150,{"inputs":[{"name":"filtermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"filtermethod"}],"output":{"name":"filtermethod"}}],[11,"hash","","",150,null],[11,"partial_cmp","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"eq","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"cmp","","",150,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"fmt","","",151,{"inputs":[{"name":"cubeface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"cubeface"}],"output":{"name":"cubeface"}}],[11,"hash","","",151,null],[11,"partial_cmp","","",151,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"option"}}],[11,"eq","","",151,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"cmp","","",151,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[11,"fmt","","",152,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"hash","","",152,null],[11,"partial_cmp","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"cmp","","",152,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"get_dimensions","","Get texture dimensions, with 0 values where not applicable.",152,{"inputs":[{"name":"kind"}],"output":{"name":"dimensions"}}],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",152,{"inputs":[{"name":"kind"},{"name":"level"}],"output":{"name":"dimensions"}}],[11,"get_num_levels","","Count the number of mipmap levels.",152,{"inputs":[{"name":"kind"}],"output":{"name":"level"}}],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",152,{"inputs":[{"name":"kind"}],"output":{"name":"option"}}],[11,"is_cube","","Check if it&#39;s one of the cube kinds.",152,{"inputs":[{"name":"kind"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"imageinfocommon"}],"output":{"name":"imageinfocommon"}}],[11,"hash","","",141,null],[11,"partial_cmp","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"option"}}],[11,"lt","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"le","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"gt","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ge","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"eq","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"bool"}}],[11,"cmp","","",141,{"inputs":[{"name":"imageinfocommon"},{"name":"imageinfocommon"}],"output":{"name":"ordering"}}],[11,"get_texel_count","","Get the total number of texels.",141,{"inputs":[{"name":"imageinfocommon"}],"output":{"name":"usize"}}],[11,"convert","","Convert into a differently typed format.",141,{"inputs":[{"name":"imageinfocommon"},{"name":"t"}],"output":{"name":"imageinfocommon"}}],[11,"is_inside","","Check if it fits inside given dimensions.",141,{"inputs":[{"name":"imageinfocommon"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"wrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"wrapmode"}],"output":{"name":"wrapmode"}}],[11,"hash","","",153,null],[11,"partial_cmp","","",153,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"option"}}],[11,"eq","","",153,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"cmp","","",153,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"lod"},{"name":"lod"}],"output":{"name":"bool"}}],[11,"hash","","",154,null],[11,"fmt","","",154,{"inputs":[{"name":"lod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"lod"}],"output":{"name":"lod"}}],[11,"from","","",154,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"into","","",154,{"inputs":[{"name":"lod"}],"output":{"name":"f32"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"option"}}],[11,"lt","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"le","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"gt","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ge","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"eq","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"packedcolor"},{"name":"packedcolor"}],"output":{"name":"bool"}}],[11,"hash","","",142,null],[11,"fmt","","",142,{"inputs":[{"name":"packedcolor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"packedcolor"}],"output":{"name":"packedcolor"}}],[11,"from","","",142,null],[11,"into","","",142,null],[11,"partial_cmp","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"eq","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"hash","","",143,null],[11,"fmt","","",143,{"inputs":[{"name":"samplerinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"samplerinfo"}],"output":{"name":"samplerinfo"}}],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",143,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",144,{"inputs":[{"name":"descriptor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"descriptor"}],"output":{"name":"descriptor"}}],[11,"hash","","",144,null],[11,"partial_cmp","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"bool"}}],[11,"cmp","","",144,{"inputs":[{"name":"descriptor"},{"name":"descriptor"}],"output":{"name":"ordering"}}],[11,"to_image_info","","Get image info for a given mip.",144,{"inputs":[{"name":"descriptor"},{"name":"level"}],"output":{"name":"newimageinfo"}}],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",144,{"inputs":[{"name":"descriptor"},{"name":"channeltype"},{"name":"level"}],"output":{"name":"rawimageinfo"}}],[11,"fmt","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"resourcedesc"}],"output":{"name":"resourcedesc"}}],[11,"hash","","",145,null],[11,"partial_cmp","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"option"}}],[11,"lt","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"le","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"gt","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ge","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"bool"}}],[11,"cmp","","",145,{"inputs":[{"name":"resourcedesc"},{"name":"resourcedesc"}],"output":{"name":"ordering"}}],[11,"fmt","","",146,{"inputs":[{"name":"renderdesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"renderdesc"}],"output":{"name":"renderdesc"}}],[11,"hash","","",146,null],[11,"partial_cmp","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"option"}}],[11,"lt","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"le","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"gt","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ge","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"eq","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"bool"}}],[11,"cmp","","",146,{"inputs":[{"name":"renderdesc"},{"name":"renderdesc"}],"output":{"name":"ordering"}}],[11,"hash","","",155,null],[11,"cmp","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"option"}}],[11,"lt","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"le","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"gt","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ge","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"eq","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"depthstencilflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",155,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",155,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",155,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",155,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",155,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",155,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",155,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",155,{"inputs":[{"name":"depthstencilflags"},{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"not","","Returns the complement of this set of flags.",155,{"inputs":[{"name":"depthstencilflags"}],"output":{"name":"depthstencilflags"}}],[11,"from_iter","","",155,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"fmt","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"depthstencildesc"}],"output":{"name":"depthstencildesc"}}],[11,"hash","","",147,null],[11,"partial_cmp","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"eq","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"bool"}}],[11,"cmp","","",147,{"inputs":[{"name":"depthstencildesc"},{"name":"depthstencildesc"}],"output":{"name":"ordering"}}],[11,"from","","",147,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[6,"VertexCount","gfx_core","Draw vertex count.",null,null],[6,"InstanceCount","","Draw number of instances",null,null],[6,"AttributeSlot","","Slot for an attribute.",null,null],[6,"ConstantBufferSlot","","Slot for a constant buffer object.",null,null],[6,"ResourceViewSlot","","Slot for a shader resource view.",null,null],[6,"UnorderedViewSlot","","Slot for an unordered access object.",null,null],[6,"ColorSlot","","Slot for an active color buffer.",null,null],[6,"SamplerSlot","","Slot for a sampler.",null,null],[17,"MAX_VERTEX_ATTRIBUTES","","Compile-time maximum number of vertex attributes.",null,null],[17,"MAX_COLOR_TARGETS","","Compile-time maximum number of color targets.",null,null],[17,"MAX_CONSTANT_BUFFERS","","Compile-time maximum number of constant buffers.",null,null],[17,"MAX_RESOURCE_VIEWS","","Compile-time maximum number of shader resource views (SRV).",null,null],[17,"MAX_UNORDERED_VIEWS","","Compile-time maximum number of unordered access views (UAV).",null,null],[17,"MAX_SAMPLERS","","Compile-time maximum number of samplers.",null,null],[8,"Resources","","Resources pertaining to a specific API.",null,null],[16,"Buffer","","",156,null],[16,"Shader","","",156,null],[16,"Program","","",156,null],[16,"PipelineStateObject","","",156,null],[16,"Texture","","",156,null],[16,"ShaderResourceView","","",156,null],[16,"UnorderedAccessView","","",156,null],[16,"RenderTargetView","","",156,null],[16,"DepthStencilView","","",156,null],[16,"Sampler","","",156,null],[16,"Fence","","",156,null],[8,"Device","","An interface for performing draw calls using a specific graphics API",null,null],[16,"Resources","","Associated resources type.",157,null],[16,"CommandBuffer","","Associated command buffer type.",157,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation.",157,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",157,{"inputs":[{"name":"device"},{"name":"manager"}],"output":null}],[10,"submit","","Submit a command buffer for execution.",157,{"inputs":[{"name":"device"},{"name":"commandbuffer"}],"output":null}],[10,"cleanup","","Cleanup unused resources, to be called between frames.",157,{"inputs":[{"name":"device"}],"output":null}],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",158,{"inputs":[{"name":"devicefence"},{"name":"commandbuffer"},{"name":"option"}],"output":{"name":"fence"}}],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",158,{"inputs":[{"name":"devicefence"},{"name":"fence"}],"output":null}],[11,"reference","","",159,{"inputs":[{"name":"vertexshader"},{"name":"manager"}],"output":{"name":"shader"}}],[11,"reference","","",160,{"inputs":[{"name":"hullshader"},{"name":"manager"}],"output":{"name":"shader"}}],[11,"reference","","",161,{"inputs":[{"name":"domainshader"},{"name":"manager"}],"output":{"name":"shader"}}],[11,"reference","","",162,{"inputs":[{"name":"geometryshader"},{"name":"manager"}],"output":{"name":"shader"}}],[11,"reference","","",163,{"inputs":[{"name":"pixelshader"},{"name":"manager"}],"output":{"name":"shader"}}],[11,"get_usage","","Return the aggregated stage usage for the set.",22,{"inputs":[{"name":"shaderset"}],"output":{"name":"usage"}}],[11,"fmt","","",21,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"eq","","",23,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"fmt","","",24,{"inputs":[{"name":"indextype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"indextype"}],"output":{"name":"indextype"}}],[11,"hash","","",24,null],[11,"partial_cmp","","",24,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"option"}}],[11,"eq","","",24,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"ordering"}}]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"MultiSample"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"Mirror"],[3,"Capabilities"],[4,"ShaderSet"],[4,"Primitive"],[4,"IndexType"],[4,"ClearColor"],[8,"CommandBuffer"],[4,"DummyResources"],[3,"DummyDevice"],[3,"DummyCommandBuffer"],[3,"BufferInfo"],[4,"MapAccess"],[4,"BufferRole"],[4,"Usage"],[4,"BufferError"],[4,"BufferUpdateError"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Typed"],[8,"Factory"],[3,"Bind"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[8,"Producer"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[8,"Raw"],[8,"Builder"],[3,"Readable"],[3,"Writable"],[3,"RW"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[3,"CreationError"],[3,"SamplerType"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[4,"CompatibilityError"],[4,"CreateShaderError"],[8,"BaseTyped"],[8,"Formatted"],[3,"Usage"],[3,"ImageInfoCommon"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Descriptor"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[4,"Error"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"WrapMode"],[3,"Lod"],[3,"DepthStencilFlags"],[8,"Resources"],[8,"Device"],[8,"DeviceFence"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"]]};
searchIndex["glutin"] = {"doc":"The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.","items":[[3,"Touch","glutin","Represents touch event",null,null],[12,"phase","","",0,null],[12,"location","","",0,null],[12,"id","","unique identifier of a finger.",0,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",1,null],[12,"opengl","","The OpenGL attributes to build the context with.",1,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",2,null],[12,"opengl","","The attributes to use to create the context.",2,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",3,null],[12,"color_bits","","",3,null],[12,"alpha_bits","","",3,null],[12,"depth_bits","","",3,null],[12,"stencil_bits","","",3,null],[12,"stereoscopy","","",3,null],[12,"double_buffer","","",3,null],[12,"multisampling","","",3,null],[12,"srgb","","",3,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means &quot;don&#39;t care&quot;. Default is `Some(true)`.",4,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(24)`.",4,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",4,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(8)`.",4,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(24)`.",4,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(8)`.",4,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means &quot;don&#39;t care&quot;. The default is `Some(true)`.",4,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means &quot;don&#39;t care&quot;. Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",4,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",4,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don&#39;t care.\nThe default is `false`.",4,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",4,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",5,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",5,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor&#39;s dimensions by the platform.",5,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",5,null],[12,"title","","The title of the window in the title bar.",5,null],[12,"visible","","Whether the window should be immediately visible upon creation.",5,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",5,null],[12,"decorations","","Whether the window should have borders and bars.",5,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",5,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",6,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",6,null],[12,"profile","","OpenGL profile to use.",6,null],[12,"debug","","Whether to enable the `debug` flag of the context.",6,null],[12,"robustness","","How the OpenGL context should detect errors.",6,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",6,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",7,null],[13,"Moved","","The position of the window has changed.",7,null],[13,"Closed","","The window has been closed.",7,null],[13,"DroppedFile","","A file has been dropped into the window.",7,null],[13,"ReceivedCharacter","","The window received a unicode character.",7,null],[13,"Focused","","The window gained or lost focus.",7,null],[13,"KeyboardInput","","An event from the keyboard has been received.",7,null],[13,"MouseMoved","","The cursor has moved on the window.",7,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",7,null],[13,"MouseInput","","An event from the mouse has been received.",7,null],[13,"TouchpadPressure","","Touchpad pressure event.",7,null],[13,"Awakened","","The event loop was woken up by another thread.",7,null],[13,"Refresh","","The window needs to be redrawn.",7,null],[13,"Suspended","","App has been suspended or resumed.",7,null],[13,"Touch","","Touch event has been received",7,null],[4,"TouchPhase","","",null,null],[13,"Started","","",8,null],[13,"Moved","","",8,null],[13,"Ended","","",8,null],[13,"Cancelled","","",8,null],[4,"ElementState","","",null,null],[13,"Pressed","","",9,null],[13,"Released","","",9,null],[4,"MouseButton","","",null,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"Middle","","",10,null],[13,"Other","","",10,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",11,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",11,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The &#39;1&#39; key over the letters.",12,null],[13,"Key2","","The &#39;2&#39; key over the letters.",12,null],[13,"Key3","","The &#39;3&#39; key over the letters.",12,null],[13,"Key4","","The &#39;4&#39; key over the letters.",12,null],[13,"Key5","","The &#39;5&#39; key over the letters.",12,null],[13,"Key6","","The &#39;6&#39; key over the letters.",12,null],[13,"Key7","","The &#39;7&#39; key over the letters.",12,null],[13,"Key8","","The &#39;8&#39; key over the letters.",12,null],[13,"Key9","","The &#39;9&#39; key over the letters.",12,null],[13,"Key0","","The &#39;0&#39; key over the &#39;O&#39; and &#39;P&#39; keys.",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Escape","","The Escape key, next to F1.",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"Snapshot","","Print Screen/SysRq.",12,null],[13,"Scroll","","Scroll Lock.",12,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,null],[13,"Insert","","`Insert`, next to Backspace.",12,null],[13,"Home","","",12,null],[13,"Delete","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"PageUp","","",12,null],[13,"Left","","",12,null],[13,"Up","","",12,null],[13,"Right","","",12,null],[13,"Down","","",12,null],[13,"Back","","The Backspace key, right over Enter.",12,null],[13,"Return","","The Enter key.",12,null],[13,"Space","","The space bar.",12,null],[13,"Numlock","","",12,null],[13,"Numpad0","","",12,null],[13,"Numpad1","","",12,null],[13,"Numpad2","","",12,null],[13,"Numpad3","","",12,null],[13,"Numpad4","","",12,null],[13,"Numpad5","","",12,null],[13,"Numpad6","","",12,null],[13,"Numpad7","","",12,null],[13,"Numpad8","","",12,null],[13,"Numpad9","","",12,null],[13,"AbntC1","","",12,null],[13,"AbntC2","","",12,null],[13,"Add","","",12,null],[13,"Apostrophe","","",12,null],[13,"Apps","","",12,null],[13,"At","","",12,null],[13,"Ax","","",12,null],[13,"Backslash","","",12,null],[13,"Calculator","","",12,null],[13,"Capital","","",12,null],[13,"Colon","","",12,null],[13,"Comma","","",12,null],[13,"Convert","","",12,null],[13,"Decimal","","",12,null],[13,"Divide","","",12,null],[13,"Equals","","",12,null],[13,"Grave","","",12,null],[13,"Kana","","",12,null],[13,"Kanji","","",12,null],[13,"LAlt","","",12,null],[13,"LBracket","","",12,null],[13,"LControl","","",12,null],[13,"LMenu","","",12,null],[13,"LShift","","",12,null],[13,"LWin","","",12,null],[13,"Mail","","",12,null],[13,"MediaSelect","","",12,null],[13,"MediaStop","","",12,null],[13,"Minus","","",12,null],[13,"Multiply","","",12,null],[13,"Mute","","",12,null],[13,"MyComputer","","",12,null],[13,"NextTrack","","",12,null],[13,"NoConvert","","",12,null],[13,"NumpadComma","","",12,null],[13,"NumpadEnter","","",12,null],[13,"NumpadEquals","","",12,null],[13,"OEM102","","",12,null],[13,"Period","","",12,null],[13,"PlayPause","","",12,null],[13,"Power","","",12,null],[13,"PrevTrack","","",12,null],[13,"RAlt","","",12,null],[13,"RBracket","","",12,null],[13,"RControl","","",12,null],[13,"RMenu","","",12,null],[13,"RShift","","",12,null],[13,"RWin","","",12,null],[13,"Semicolon","","",12,null],[13,"Slash","","",12,null],[13,"Sleep","","",12,null],[13,"Stop","","",12,null],[13,"Subtract","","",12,null],[13,"Sysrq","","",12,null],[13,"Tab","","",12,null],[13,"Underline","","",12,null],[13,"Unlabeled","","",12,null],[13,"VolumeDown","","",12,null],[13,"VolumeUp","","",12,null],[13,"Wake","","",12,null],[13,"WebBack","","",12,null],[13,"WebFavorites","","",12,null],[13,"WebForward","","",12,null],[13,"WebHome","","",12,null],[13,"WebRefresh","","",12,null],[13,"WebSearch","","",12,null],[13,"WebStop","","",12,null],[13,"Yen","","",12,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",13,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",13,null],[13,"Unavailable","","Other platforms (Android) don&#39;t support monitor identification.",13,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",14,null],[13,"NotSupported","","TODO: remove this error",14,null],[13,"NoBackendAvailable","","",14,null],[13,"RobustnessNotSupported","","",14,null],[13,"OpenGlVersionNotSupported","","",14,null],[13,"NoAvailablePixelFormat","","",14,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",15,null],[13,"ContextLost","","",15,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",16,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",16,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",16,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",17,null],[13,"Core","","Include all the future-compatible functions and definitions.",17,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the &quot;best&quot; API of this platform.",18,null],[13,"Specific","","Request a specific version of a specific API.",18,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",18,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",18,null],[12,"opengles_version","","The version to use for OpenGL ES.",18,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",19,null],[13,"NoError","","The driver doesn&#39;t check anything. This option is very dangerous. Please know what you&#39;re\ndoing before using it. See the `GL_KHR_no_error` extension.",19,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",19,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n&quot;context lost&quot; state. It must then be recreated. For the moment, glutin doesn&#39;t provide a\nway to recreate a context with the same window :-/",19,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn&#39;t do anything. Most notably doesn&#39;t flush.",20,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",20,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",21,null],[13,"Crosshair","","A simple crosshair.",21,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",21,null],[13,"Arrow","","Self explanatory.",21,null],[13,"Move","","Indicates something is to be moved.",21,null],[13,"Text","","Indicates text that may be selected or edited.",21,null],[13,"Wait","","Program busy indicator.",21,null],[13,"Help","","Help indicator (often rendered as a &quot;?&quot;)",21,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith &quot;Wait&quot; the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",21,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",21,null],[13,"ContextMenu","","",21,null],[13,"NoneCursor","","",21,null],[13,"Cell","","",21,null],[13,"VerticalText","","",21,null],[13,"Alias","","",21,null],[13,"Copy","","",21,null],[13,"NoDrop","","",21,null],[13,"Grab","","",21,null],[13,"Grabbing","","",21,null],[13,"AllScroll","","",21,null],[13,"ZoomIn","","",21,null],[13,"ZoomOut","","",21,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the &#39;SeResize&#39; cursor\nis used when the movement starts from the south-east corner of the box.",21,null],[13,"NResize","","",21,null],[13,"NeResize","","",21,null],[13,"NwResize","","",21,null],[13,"SResize","","",21,null],[13,"SeResize","","",21,null],[13,"SwResize","","",21,null],[13,"WResize","","",21,null],[13,"EwResize","","",21,null],[13,"NsResize","","",21,null],[13,"NeswResize","","",21,null],[13,"NwseResize","","",21,null],[13,"ColResize","","",21,null],[13,"RowResize","","",21,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",22,null],[13,"Hide","","The cursor will be invisible when over the window.",22,null],[13,"Grab","","Grabs the mouse cursor. The cursor&#39;s motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",22,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"detail","x11_dl::error","",23,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",23,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"description","","",23,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",23,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"fmt","","",23,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","glutin","",7,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"clone","","",8,{"inputs":[{"name":"touchphase"}],"output":{"name":"touchphase"}}],[11,"eq","","",8,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"touchphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"touch"}],"output":{"name":"touch"}}],[11,"fmt","","",0,{"inputs":[{"name":"touch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"elementstate"}],"output":{"name":"elementstate"}}],[11,"eq","","",9,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"elementstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"eq","","",10,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"mousescrolldelta"}],"output":{"name":"mousescrolldelta"}}],[11,"fmt","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"virtualkeycode"}}],[11,"eq","","",12,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"virtualkeycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",1,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"robustness"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",1,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the headless context.",1,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",24,null],[11,"get_api","","Returns the API that is currently provided by this window.",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"set_window_resize_callback","","",24,{"inputs":[{"name":"headlesscontext"},{"name":"option"}],"output":null}],[11,"make_current","","",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",24,null],[11,"swap_buffers","","",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"get_api","","",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",24,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",2,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",2,{"inputs":[{"name":"windowbuilder"},{"name":"string"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",2,{"inputs":[{"name":"windowbuilder"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",2,{"inputs":[{"name":"windowbuilder"},{"name":"window"}],"output":{"name":"windowbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",2,{"inputs":[{"name":"windowbuilder"},{"name":"glrequest"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",2,{"inputs":[{"name":"windowbuilder"},{"name":"glprofile"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",2,{"inputs":[{"name":"windowbuilder"},{"name":"robustness"}],"output":{"name":"windowbuilder"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multisampling","","Sets the multisampling level to request.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u16"}],"output":{"name":"windowbuilder"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means &quot;I don&#39;t care&quot;.",2,{"inputs":[{"name":"windowbuilder"},{"name":"option"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the window.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",25,{"inputs":[],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",25,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"show","","Shows the window if it was hidden.",25,{"inputs":[{"name":"window"}],"output":null}],[11,"hide","","Hides the window if it was visible.",25,{"inputs":[{"name":"window"}],"output":null}],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",25,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","Returns the size in points of the client area of the window.",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",25,{"inputs":[{"name":"window"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"poll_events","","Returns an iterator that poll for the next event in the window&#39;s events queue.\nReturns `None` if there is no event in the queue.",25,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",25,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"make_current","","Sets the context as the current context.",25,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",25,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",25,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",25,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",25,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",25,null],[11,"get_api","","Returns the API that is currently provided by this window.",25,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","Returns the pixel format of this window.",25,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",25,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",25,{"inputs":[{"name":"window"},{"name":"option"}],"output":null}],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",25,{"inputs":[{"name":"window"},{"name":"mousecursor"}],"output":null}],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",25,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",25,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",25,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"make_current","","",25,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",25,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",25,null],[11,"swap_buffers","","",25,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",25,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",25,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"clone","","",26,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",26,{"inputs":[{"name":"windowproxy"}],"output":null}],[11,"next","","",27,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next","","",28,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",29,{"inputs":[{"name":"availablemonitorsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"get_name","","Returns a human-readable name of the monitor.",30,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",30,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",30,null],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glutin::os","",null,null],[8,"WindowExt","glutin::os::unix","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",31,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",31,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[11,"get_xlib_window","glutin","",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_xlib_display","","",25,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"eq","","",13,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"nativemonitorid"}],"output":{"name":"nativemonitorid"}}],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",32,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"is_current","","Returns true if this context is the current one in this thread.",32,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",32,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",32,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"get_api","","Returns the OpenGL API being used.",32,{"inputs":[{"name":"glcontext"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",32,{"inputs":[{"name":"glcontext"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",14,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",14,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"creationerror"}],"output":{"name":"option"}}],[11,"fmt","","",15,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",15,{"inputs":[{"name":"contexterror"}],"output":{"name":"str"}}],[11,"eq","","",16,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",16,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",17,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"glrequest"}],"output":{"name":"glrequest"}}],[11,"fmt","","",18,{"inputs":[{"name":"glrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",18,{"inputs":[{"name":"glrequest"}],"output":{"name":"option"}}],[11,"eq","","",19,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"robustness"}],"output":{"name":"robustness"}}],[11,"fmt","","",19,{"inputs":[{"name":"robustness"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"releasebehavior"}],"output":{"name":"releasebehavior"}}],[11,"fmt","","",20,{"inputs":[{"name":"releasebehavior"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"mousecursor"}],"output":{"name":"mousecursor"}}],[11,"fmt","","",21,{"inputs":[{"name":"mousecursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"cursorstate"}],"output":{"name":"cursorstate"}}],[11,"fmt","","",22,{"inputs":[{"name":"cursorstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",3,{"inputs":[{"name":"pixelformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"pixelformatrequirements"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"pixelformatrequirements"}],"output":{"name":"pixelformatrequirements"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",5,{"inputs":[{"name":"windowattributes"}],"output":{"name":"windowattributes"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"clone","","",6,{"inputs":[{"name":"glattributes"}],"output":{"name":"glattributes"}}],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",6,{"inputs":[{"name":"glattributes"},{"name":"f"}],"output":{"name":"glattributes"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"glattributes"}}]],"paths":[[3,"Touch"],[3,"HeadlessRendererBuilder"],[3,"WindowBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"Event"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"OpenError"],[3,"HeadlessContext"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[8,"WindowExt"],[8,"GlContext"]]};
searchIndex["wayland_window"] = {"doc":"Wayland Window, a minimalistic decoration-drawing library for\nwayland applications.","items":[[3,"DecoratedSurface","wayland_window","A wrapper for a decorated surface.",null,null],[5,"substract_borders","","Substracts the border dimensions from the given dimensions.",null,null],[5,"add_borders","","Adds the border dimensions to the given dimensions.",null,null],[11,"resize","","Resizes the borders to given width and height.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"new","","Creates a new decorated window around given surface.",0,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlcompositor"},{"name":"wlsubcompositor"},{"name":"wlshm"},{"name":"wlshell"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_title","","Set a short title for the surface.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"string"}],"output":null}],[11,"set_class","","Set a class for the surface.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"string"}],"output":null}],[11,"next","","",0,{"inputs":[{"name":"decoratedsurface"}],"output":{"name":"option"}}]],"paths":[[3,"DecoratedSurface"]]};
searchIndex["wayland_kbd"] = {"doc":"Keyboard mapping utility for `wayland-client` using libxkbcommon.","items":[[3,"MappedKeyboard","wayland_kbd","A wayland keyboard mapped to its keymap",null,null],[3,"KeyEvent","","",null,null],[12,"keycode","","The raw keycode associated with this event. Only use it if\nyou know what you&#39;re doing.",0,null],[12,"serial","","",0,null],[12,"time","","",0,null],[12,"keystate","","",0,null],[4,"MappedKeyboardEvent","","",null,null],[13,"KeyEvent","","",1,null],[13,"Other","","",1,null],[4,"MappedKeyboardError","","",null,null],[13,"XKBNotFound","","",2,null],[13,"NoKeyboardOnSeat","","",2,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",3,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",3,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",3,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",3,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",3,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",3,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",3,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",3,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",3,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",3,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",3,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"as_utf8","wayland_kbd","Tries to retrieve the key event as an UTF8 sequence",0,{"inputs":[{"name":"keyevent"}],"output":{"name":"option"}}],[11,"as_symbol","","Tries to match this key event as a key symbol according to current keyboard state.",0,{"inputs":[{"name":"keyevent"}],"output":{"name":"option"}}],[11,"new","","Creates a mapped keyboard by extracting the keyboard from a seat.",4,{"inputs":[{"name":"wlseat"}],"output":{"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"mappedkeyboard"}],"output":{"name":"option"}}],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null]],"paths":[[3,"KeyEvent"],[4,"MappedKeyboardEvent"],[4,"MappedKeyboardError"],[4,"Option"],[3,"MappedKeyboard"]]};
searchIndex["wayland_client"] = {"doc":"","items":[[3,"EventIterator","wayland_client","",null,null],[3,"ProxyId","","",null,null],[4,"Event","","",null,null],[13,"Wayland","","",0,null],[5,"is_available","","Checks if the wayland lib is available",null,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"eventiterator"}}],[11,"drop","","",1,{"inputs":[{"name":"eventiterator"}],"output":null}],[11,"next","","",1,{"inputs":[{"name":"eventiterator"}],"output":{"name":"option"}}],[0,"egl","","",null,null],[3,"WlEglSurface","wayland_client::egl","",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","",2,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",2,{"inputs":[{"name":"wleglsurface"}],"output":{"name":"wlsurface"}}],[11,"get_size","","",2,null],[11,"resize","","",2,{"inputs":[{"name":"wleglsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"egl_surface_ptr","","",2,null],[11,"egl_surfaceptr","","DEPRECATED",2,null],[11,"drop","","",2,{"inputs":[{"name":"wleglsurface"}],"output":null}],[11,"deref","","",2,{"inputs":[{"name":"wleglsurface"}],"output":{"name":"wlsurface"}}],[0,"wayland","wayland_client","",null,null],[3,"WlCallback","wayland_client::wayland","callback object",null,null],[3,"WlDisplay","","core global object",null,null],[3,"WlRegistry","","global registry object",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[4,"WlCallbackEvent","","",null,null],[13,"Done","","done event",3,null],[4,"WlDisplayEvent","","",null,null],[13,"Error","","fatal error event",4,null],[13,"DeleteId","","acknowledge object ID deletion",4,null],[4,"WlRegistryEvent","","",null,null],[13,"Global","","announce global object",5,null],[13,"GlobalRemove","","announce removal of global object",5,null],[4,"WaylandProtocolEvent","","An event generated by the protocol wayland.",null,null],[13,"WlDisplay","","",6,null],[13,"WlRegistry","","",6,null],[13,"WlCallback","","",6,null],[13,"WlShm","","",6,null],[13,"WlBuffer","","",6,null],[13,"WlDataOffer","","",6,null],[13,"WlDataSource","","",6,null],[13,"WlDataDevice","","",6,null],[13,"WlShellSurface","","",6,null],[13,"WlSurface","","",6,null],[13,"WlSeat","","",6,null],[13,"WlPointer","","",6,null],[13,"WlKeyboard","","",6,null],[13,"WlTouch","","",6,null],[13,"WlOutput","","",6,null],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[0,"compositor","","",null,null],[3,"WlCompositor","wayland_client::wayland::compositor","the compositor singleton",null,null],[3,"WlRegion","","region interface",null,null],[3,"WlSurface","","an onscreen surface",null,null],[4,"WlSurfaceEvent","","",null,null],[13,"Enter","","surface enters an output",7,null],[13,"Leave","","surface leaves an output",7,null],[0,"data_device","wayland_client::wayland","",null,null],[3,"WlDataDevice","wayland_client::wayland::data_device","data transfer device",null,null],[3,"WlDataDeviceManager","","data transfer interface",null,null],[3,"WlDataOffer","","offer to transfer data",null,null],[3,"WlDataSource","","offer to transfer data",null,null],[4,"WlDataDeviceEvent","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",8,null],[13,"Enter","","initiate drag-and-drop session",8,null],[13,"Leave","","end drag-and-drop session",8,null],[13,"Motion","","drag-and-drop session motion",8,null],[13,"Drop","","end drag-and-drag session successfully",8,null],[13,"Selection","","advertise new selection",8,null],[4,"WlDataOfferEvent","","",null,null],[13,"Offer","","advertise offered mime type",9,null],[4,"WlDataSourceEvent","","",null,null],[13,"Target","","a target accepts an offered mime type",10,null],[13,"Send","","send the data",10,null],[13,"Cancelled","","selection was cancelled",10,null],[0,"output","wayland_client::wayland","",null,null],[3,"WlOutput","wayland_client::wayland::output","compositor output region",null,null],[4,"WlOutputEvent","","",null,null],[13,"Geometry","","properties of the output",11,null],[13,"Mode","","advertise available modes for the output",11,null],[13,"Done","","sent all information about output",11,null],[13,"Scale","","output scaling properties",11,null],[4,"WlOutputSubpixel","","subpixel geometry information",null,null],[13,"Unknown","","",12,null],[13,"None","","",12,null],[13,"HorizontalRgb","","",12,null],[13,"HorizontalBgr","","",12,null],[13,"VerticalRgb","","",12,null],[13,"VerticalBgr","","",12,null],[4,"WlOutputTransform","","transform from framebuffer to output",null,null],[13,"Normal","","",13,null],[13,"T90","","",13,null],[13,"T180","","",13,null],[13,"T270","","",13,null],[13,"Flipped","","",13,null],[13,"Flipped90","","",13,null],[13,"Flipped180","","",13,null],[13,"Flipped270","","",13,null],[0,"WlOutputMode","","mode information",null,null],[3,"WlOutputMode","wayland_client::wayland::output::WlOutputMode","",null,null],[17,"Current","","indicates this is the current mode",null,null],[17,"Preferred","","indicates this is the preferred mode",null,null],[11,"hash","","",14,null],[11,"cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"eq","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",14,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",14,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",14,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"not","","Returns the complement of this set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"from_iter","","",14,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[0,"seat","wayland_client::wayland","",null,null],[3,"WlKeyboard","wayland_client::wayland::seat","keyboard input device",null,null],[3,"WlPointer","","pointer input device",null,null],[3,"WlSeat","","group of input devices",null,null],[3,"WlTouch","","touchscreen input device",null,null],[4,"WlKeyboardEvent","","",null,null],[13,"Keymap","","keyboard mapping",15,null],[13,"Enter","","enter event",15,null],[13,"Leave","","leave event",15,null],[13,"Key","","key event",15,null],[13,"Modifiers","","modifier and group state",15,null],[13,"RepeatInfo","","repeat rate and delay",15,null],[4,"WlPointerEvent","","",null,null],[13,"Enter","","enter event",16,null],[13,"Leave","","leave event",16,null],[13,"Motion","","pointer motion event",16,null],[13,"Button","","pointer button event",16,null],[13,"Axis","","axis event",16,null],[4,"WlSeatEvent","","",null,null],[13,"Capabilities","","seat capabilities changed",17,null],[13,"Name","","unique identifier for this seat",17,null],[4,"WlTouchEvent","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",18,null],[13,"Up","","end of a touch event sequence",18,null],[13,"Motion","","update of touch point coordinates",18,null],[13,"Frame","","end of touch frame event",18,null],[13,"Cancel","","touch session cancelled",18,null],[4,"WlKeyboardKeyState","","physical key state",null,null],[13,"Released","","key is not pressed",19,null],[13,"Pressed","","key is pressed",19,null],[4,"WlKeyboardKeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",20,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",20,null],[4,"WlPointerAxis","","axis types",null,null],[13,"VerticalScroll","","",21,null],[13,"HorizontalScroll","","",21,null],[4,"WlPointerButtonState","","physical button state",null,null],[13,"Released","","The button is not pressed",22,null],[13,"Pressed","","The button is pressed",22,null],[0,"WlSeatCapability","","seat capability bitmask",null,null],[3,"WlSeatCapability","wayland_client::wayland::seat::WlSeatCapability","",null,null],[17,"Pointer","","The seat has pointer devices",null,null],[17,"Keyboard","","The seat has one or more keyboards",null,null],[17,"Touch","","The seat has touch devices",null,null],[11,"hash","","",23,null],[11,"cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"eq","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",23,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",23,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"not","","Returns the complement of this set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"from_iter","","",23,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[0,"shell","wayland_client::wayland","",null,null],[3,"WlShell","wayland_client::wayland::shell","create desktop-style surfaces",null,null],[3,"WlShellSurface","","desktop-style metadata interface",null,null],[4,"WlShellSurfaceEvent","","",null,null],[13,"Ping","","ping client",24,null],[13,"Configure","","suggest resize",24,null],[13,"PopupDone","","popup interaction is done",24,null],[4,"WlShellSurfaceFullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",25,null],[13,"Scale","","scale, preserve the surface&#39;s aspect ratio and center on output",25,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",25,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",25,null],[0,"WlShellSurfaceResize","","edge values for resizing",null,null],[3,"WlShellSurfaceResize","wayland_client::wayland::shell::WlShellSurfaceResize","",null,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[11,"hash","","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"eq","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[0,"WlShellSurfaceTransient","wayland_client::wayland::shell","details of transient behaviour",null,null],[3,"WlShellSurfaceTransient","wayland_client::wayland::shell::WlShellSurfaceTransient","",null,null],[17,"Inactive","","do not set keyboard focus",null,null],[11,"hash","","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"eq","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[0,"shm","wayland_client::wayland","",null,null],[3,"WlBuffer","wayland_client::wayland::shm","content for a wl_surface",null,null],[3,"WlShm","","shared memory support",null,null],[3,"WlShmPool","","a shared memory pool",null,null],[4,"WlBufferEvent","","",null,null],[13,"Release","","compositor releases buffer",28,null],[4,"WlShmEvent","","",null,null],[13,"Format","","pixel format description",29,null],[4,"WlShmFormat","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format",30,null],[13,"Xrgb8888","","32-bit RGB format",30,null],[13,"C8","","",30,null],[13,"Rgb332","","",30,null],[13,"Bgr233","","",30,null],[13,"Xrgb4444","","",30,null],[13,"Xbgr4444","","",30,null],[13,"Rgbx4444","","",30,null],[13,"Bgrx4444","","",30,null],[13,"Argb4444","","",30,null],[13,"Abgr4444","","",30,null],[13,"Rgba4444","","",30,null],[13,"Bgra4444","","",30,null],[13,"Xrgb1555","","",30,null],[13,"Xbgr1555","","",30,null],[13,"Rgbx5551","","",30,null],[13,"Bgrx5551","","",30,null],[13,"Argb1555","","",30,null],[13,"Abgr1555","","",30,null],[13,"Rgba5551","","",30,null],[13,"Bgra5551","","",30,null],[13,"Rgb565","","",30,null],[13,"Bgr565","","",30,null],[13,"Rgb888","","",30,null],[13,"Bgr888","","",30,null],[13,"Xbgr8888","","",30,null],[13,"Rgbx8888","","",30,null],[13,"Bgrx8888","","",30,null],[13,"Abgr8888","","",30,null],[13,"Rgba8888","","",30,null],[13,"Bgra8888","","",30,null],[13,"Xrgb2101010","","",30,null],[13,"Xbgr2101010","","",30,null],[13,"Rgbx1010102","","",30,null],[13,"Bgrx1010102","","",30,null],[13,"Argb2101010","","",30,null],[13,"Abgr2101010","","",30,null],[13,"Rgba1010102","","",30,null],[13,"Bgra1010102","","",30,null],[13,"Yuyv","","",30,null],[13,"Yvyu","","",30,null],[13,"Uyvy","","",30,null],[13,"Vyuy","","",30,null],[13,"Ayuv","","",30,null],[13,"Nv12","","",30,null],[13,"Nv21","","",30,null],[13,"Nv16","","",30,null],[13,"Nv61","","",30,null],[13,"Yuv410","","",30,null],[13,"Yvu410","","",30,null],[13,"Yuv411","","",30,null],[13,"Yvu411","","",30,null],[13,"Yuv420","","",30,null],[13,"Yvu420","","",30,null],[13,"Yuv422","","",30,null],[13,"Yvu422","","",30,null],[13,"Yuv444","","",30,null],[13,"Yvu444","","",30,null],[0,"subcompositor","wayland_client::wayland","",null,null],[3,"WlSubcompositor","wayland_client::wayland::subcompositor","sub-surface compositing",null,null],[3,"WlSubsurface","","sub-surface interface to a wl_surface",null,null],[11,"sync_roundtrip","wayland_client::wayland","Synchronous roundtrip",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"dispatch","","Blocking dispatch",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"dispatch_pending","","Non-blocking dispatch",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"prepare_read","","Prepare an conccurent read",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"option"}}],[11,"flush","","Non-blocking write to the server",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"drop","","",31,{"inputs":[{"name":"wldisplay"}],"output":null}],[11,"read_events","","Read events",32,{"inputs":[{"name":"readeventsguard"}],"output":{"name":"result"}}],[11,"cancel","","Cancel the read",32,{"inputs":[{"name":"readeventsguard"}],"output":null}],[11,"drop","","",32,{"inputs":[{"name":"readeventsguard"}],"output":null}],[8,"Proxy","wayland_client","",null,null],[10,"ptr","","",33,null],[10,"interface","","",33,null],[10,"interface_name","","The internal name of this interface, as advertized by the registry if it is a global.",33,{"inputs":[],"output":{"name":"str"}}],[10,"version","","The maximum version of this interface handled by the library.",33,{"inputs":[],"output":{"name":"u32"}}],[10,"id","","Get the id of this proxy",33,{"inputs":[{"name":"proxy"}],"output":{"name":"proxyid"}}],[10,"from_ptr","","Creates a proxy from a fresh ptr",33,null],[10,"from_ptr_no_own","","Creates a proxy from a ptr that is managed elsewhere",33,null],[10,"set_evt_iterator","","Set the event iterator associated to this proxy",33,{"inputs":[{"name":"proxy"},{"name":"eventiterator"}],"output":null}],[11,"hash","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"proxyid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"proxyid"},{"name":"proxyid"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"proxyid"},{"name":"proxyid"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"proxyid"}],"output":{"name":"proxyid"}}],[14,"wayland_env!","","This macro allows you to create a simple wayland environment handler.",null,null],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceResize","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"eq","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceTransient","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"eq","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"hash","wayland_client::wayland::seat::WlSeatCapability","",23,null],[11,"cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"eq","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",23,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",23,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"not","","Returns the complement of this set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"from_iter","","",23,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"hash","wayland_client::wayland::output::WlOutputMode","",14,null],[11,"cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"eq","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",14,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",14,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",14,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"not","","Returns the complement of this set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"from_iter","","",14,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::wayland","",6,{"inputs":[{"name":"waylandprotocolevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ptr","","",31,null],[11,"interface","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",31,null],[11,"from_ptr_no_own","","",31,null],[11,"set_evt_iterator","","",31,{"inputs":[{"name":"wldisplay"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"wldisplay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"wldisplayevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sync","","asynchronous roundtrip",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"wlcallback"}}],[11,"get_registry","","get global registry object",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"wlregistry"}}],[11,"ptr","","",35,null],[11,"interface","","",35,null],[11,"interface_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",35,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",35,{"inputs":[{"name":"wlregistry"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",35,null],[11,"from_ptr_no_own","","",35,null],[11,"set_evt_iterator","","",35,{"inputs":[{"name":"wlregistry"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",35,{"inputs":[{"name":"wlregistry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"wlregistryevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","bind an object to the display",35,{"inputs":[{"name":"wlregistry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"drop","","",35,{"inputs":[{"name":"wlregistry"}],"output":null}],[11,"ptr","","",36,null],[11,"interface","","",36,null],[11,"interface_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",36,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",36,{"inputs":[{"name":"wlcallback"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",36,null],[11,"from_ptr_no_own","","",36,null],[11,"set_evt_iterator","","",36,{"inputs":[{"name":"wlcallback"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"wlcallback"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"wlcallbackevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",36,{"inputs":[{"name":"wlcallback"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",37,null],[11,"interface","","",37,null],[11,"interface_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",37,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",37,null],[11,"from_ptr_no_own","","",37,null],[11,"set_evt_iterator","","",37,{"inputs":[{"name":"wlcompositor"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",37,{"inputs":[{"name":"wlcompositor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_surface","","create new surface",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"wlsurface"}}],[11,"create_region","","create new region",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"wlregion"}}],[11,"drop","","",37,{"inputs":[{"name":"wlcompositor"}],"output":null}],[11,"ptr","wayland_client::wayland::shm","",38,null],[11,"interface","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",38,{"inputs":[{"name":"wlshmpool"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",38,null],[11,"from_ptr_no_own","","",38,null],[11,"set_evt_iterator","","",38,{"inputs":[{"name":"wlshmpool"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"wlshmpool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_buffer","","create a buffer from the pool",38,{"inputs":[{"name":"wlshmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":{"name":"wlbuffer"}}],[11,"destroy","","destroy the pool",38,{"inputs":[{"name":"wlshmpool"}],"output":null}],[11,"resize","","change the size of the pool mapping",38,{"inputs":[{"name":"wlshmpool"},{"name":"i32"}],"output":null}],[11,"drop","","",38,{"inputs":[{"name":"wlshmpool"}],"output":null}],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",39,{"inputs":[{"name":"wlshm"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,{"inputs":[{"name":"wlshm"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",39,{"inputs":[{"name":"wlshm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"wlshmformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"wlshmevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_pool","","create a shm pool",39,{"inputs":[{"name":"wlshm"},{"name":"rawfd"},{"name":"i32"}],"output":{"name":"wlshmpool"}}],[11,"drop","","",39,{"inputs":[{"name":"wlshm"}],"output":null}],[11,"ptr","","",40,null],[11,"interface","","",40,null],[11,"interface_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",40,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",40,{"inputs":[{"name":"wlbuffer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",40,null],[11,"from_ptr_no_own","","",40,null],[11,"set_evt_iterator","","",40,{"inputs":[{"name":"wlbuffer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",40,{"inputs":[{"name":"wlbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"wlbufferevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","destroy a buffer",40,{"inputs":[{"name":"wlbuffer"}],"output":null}],[11,"drop","","",40,{"inputs":[{"name":"wlbuffer"}],"output":null}],[11,"ptr","wayland_client::wayland::data_device","",41,null],[11,"interface","","",41,null],[11,"interface_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",41,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",41,{"inputs":[{"name":"wldataoffer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",41,null],[11,"from_ptr_no_own","","",41,null],[11,"set_evt_iterator","","",41,{"inputs":[{"name":"wldataoffer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",41,{"inputs":[{"name":"wldataoffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"wldataofferevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"accept","","accept one of the offered mime types",41,{"inputs":[{"name":"wldataoffer"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"receive","","request that the data is transferred",41,{"inputs":[{"name":"wldataoffer"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"destroy","","destroy data offer",41,{"inputs":[{"name":"wldataoffer"}],"output":null}],[11,"drop","","",41,{"inputs":[{"name":"wldataoffer"}],"output":null}],[11,"ptr","","",42,null],[11,"interface","","",42,null],[11,"interface_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",42,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",42,{"inputs":[{"name":"wldatasource"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",42,null],[11,"from_ptr_no_own","","",42,null],[11,"set_evt_iterator","","",42,{"inputs":[{"name":"wldatasource"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",42,{"inputs":[{"name":"wldatasource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"wldatasourceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"offer","","add an offered mime type",42,{"inputs":[{"name":"wldatasource"},{"name":"string"}],"output":null}],[11,"destroy","","destroy the data source",42,{"inputs":[{"name":"wldatasource"}],"output":null}],[11,"drop","","",42,{"inputs":[{"name":"wldatasource"}],"output":null}],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",43,{"inputs":[{"name":"wldatadevice"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,{"inputs":[{"name":"wldatadevice"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",43,{"inputs":[{"name":"wldatadevice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"wldatadeviceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_drag","","start drag-and-drop operation",43,{"inputs":[{"name":"wldatadevice"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"set_selection","","copy data to the selection",43,{"inputs":[{"name":"wldatadevice"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"release","","destroy data device",43,{"inputs":[{"name":"wldatadevice"}],"output":null}],[11,"drop","","",43,{"inputs":[{"name":"wldatadevice"}],"output":null}],[11,"ptr","","",44,null],[11,"interface","","",44,null],[11,"interface_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",44,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",44,null],[11,"from_ptr_no_own","","",44,null],[11,"set_evt_iterator","","",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_data_source","","create a new data source",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"wldatasource"}}],[11,"get_data_device","","create a new data device",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"wlseat"}],"output":{"name":"wldatadevice"}}],[11,"drop","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":null}],[11,"ptr","wayland_client::wayland::shell","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",45,{"inputs":[{"name":"wlshell"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,{"inputs":[{"name":"wlshell"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",45,{"inputs":[{"name":"wlshell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_shell_surface","","create a shell surface from a surface",45,{"inputs":[{"name":"wlshell"},{"name":"wlsurface"}],"output":{"name":"wlshellsurface"}}],[11,"drop","","",45,{"inputs":[{"name":"wlshell"}],"output":null}],[11,"ptr","","",46,null],[11,"interface","","",46,null],[11,"interface_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",46,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",46,null],[11,"from_ptr_no_own","","",46,null],[11,"set_evt_iterator","","",46,{"inputs":[{"name":"wlshellsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"wlshellsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"wlshellsurfacefullscreenmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"wlshellsurfaceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pong","","respond to a ping event",46,{"inputs":[{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"move_","","start an interactive move",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"set_toplevel","","make the surface a toplevel surface",46,{"inputs":[{"name":"wlshellsurface"}],"output":null}],[11,"set_transient","","make the surface a transient surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"set_fullscreen","","make the surface a fullscreen surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlshellsurfacefullscreenmethod"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"set_popup","","make the surface a popup surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"set_maximized","","make the surface a maximized surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",46,{"inputs":[{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"set_class","","set surface class",46,{"inputs":[{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"drop","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",47,null],[11,"interface","","",47,null],[11,"interface_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",47,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",47,null],[11,"from_ptr_no_own","","",47,null],[11,"set_evt_iterator","","",47,{"inputs":[{"name":"wlsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",47,{"inputs":[{"name":"wlsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"wlsurfaceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","delete surface",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"attach","","set the surface contents",47,{"inputs":[{"name":"wlsurface"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"damage","","mark part of the surface damaged",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"frame","","request a frame throttling hint",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"wlcallback"}}],[11,"set_opaque_region","","set opaque region",47,{"inputs":[{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"set_input_region","","set input region",47,{"inputs":[{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"commit","","commit pending surface state",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"set_buffer_transform","","sets the buffer transformation",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"set_buffer_scale","","sets the buffer scaling factor",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"drop","","",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"ptr","wayland_client::wayland::seat","",48,null],[11,"interface","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",48,null],[11,"from_ptr_no_own","","",48,null],[11,"set_evt_iterator","","",48,{"inputs":[{"name":"wlseat"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",48,{"inputs":[{"name":"wlseat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"wlseatevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_pointer","","return pointer object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wlpointer"}}],[11,"get_keyboard","","return keyboard object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wlkeyboard"}}],[11,"get_touch","","return touch object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wltouch"}}],[11,"release","","release the seat object",48,{"inputs":[{"name":"wlseat"}],"output":null}],[11,"drop","","",48,{"inputs":[{"name":"wlseat"}],"output":null}],[11,"ptr","","",49,null],[11,"interface","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",49,{"inputs":[{"name":"wlpointer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",49,null],[11,"from_ptr_no_own","","",49,null],[11,"set_evt_iterator","","",49,{"inputs":[{"name":"wlpointer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",49,{"inputs":[{"name":"wlpointer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"wlpointerbuttonstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"wlpointeraxis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"wlpointerevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_cursor","","set the pointer surface",49,{"inputs":[{"name":"wlpointer"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"release","","release the pointer object",49,{"inputs":[{"name":"wlpointer"}],"output":null}],[11,"drop","","",49,{"inputs":[{"name":"wlpointer"}],"output":null}],[11,"ptr","","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,{"inputs":[{"name":"wlkeyboard"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",50,{"inputs":[{"name":"wlkeyboard"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"wlkeyboardkeymapformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"wlkeyboardkeystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"wlkeyboardevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release","","release the keyboard object",50,{"inputs":[{"name":"wlkeyboard"}],"output":null}],[11,"drop","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":null}],[11,"ptr","","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",51,{"inputs":[{"name":"wltouch"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,{"inputs":[{"name":"wltouch"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",51,{"inputs":[{"name":"wltouch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"wltouchevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release","","release the touch object",51,{"inputs":[{"name":"wltouch"}],"output":null}],[11,"drop","","",51,{"inputs":[{"name":"wltouch"}],"output":null}],[11,"ptr","wayland_client::wayland::output","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",52,{"inputs":[{"name":"wloutput"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,{"inputs":[{"name":"wloutput"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",52,{"inputs":[{"name":"wloutput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"wloutputsubpixel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"wloutputtransform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"wloutputevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",52,{"inputs":[{"name":"wloutput"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",53,null],[11,"interface","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",53,{"inputs":[{"name":"wlregion"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",53,null],[11,"from_ptr_no_own","","",53,null],[11,"set_evt_iterator","","",53,{"inputs":[{"name":"wlregion"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",53,{"inputs":[{"name":"wlregion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","destroy region",53,{"inputs":[{"name":"wlregion"}],"output":null}],[11,"add","","add rectangle to region",53,{"inputs":[{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","subtract rectangle from region",53,{"inputs":[{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"drop","","",53,{"inputs":[{"name":"wlregion"}],"output":null}],[11,"ptr","wayland_client::wayland::subcompositor","",54,null],[11,"interface","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",54,null],[11,"from_ptr_no_own","","",54,null],[11,"set_evt_iterator","","",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","unbind from the subcompositor interface",54,{"inputs":[{"name":"wlsubcompositor"}],"output":null}],[11,"get_subsurface","","give a surface the role sub-surface",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":{"name":"wlsubsurface"}}],[11,"drop","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":null}],[11,"ptr","","",55,null],[11,"interface","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",55,null],[11,"from_ptr_no_own","","",55,null],[11,"set_evt_iterator","","",55,{"inputs":[{"name":"wlsubsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",55,{"inputs":[{"name":"wlsubsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","remove sub-surface interface",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"set_position","","reposition the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"place_above","","restack the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"place_below","","restack the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"set_sync","","set sub-surface to synchronized mode",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"set_desync","","set sub-surface to desynchronized mode",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"drop","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}]],"paths":[[4,"Event"],[3,"EventIterator"],[3,"WlEglSurface"],[4,"WlCallbackEvent"],[4,"WlDisplayEvent"],[4,"WlRegistryEvent"],[4,"WaylandProtocolEvent"],[4,"WlSurfaceEvent"],[4,"WlDataDeviceEvent"],[4,"WlDataOfferEvent"],[4,"WlDataSourceEvent"],[4,"WlOutputEvent"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlKeyboardEvent"],[4,"WlPointerEvent"],[4,"WlSeatEvent"],[4,"WlTouchEvent"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardKeymapFormat"],[4,"WlPointerAxis"],[4,"WlPointerButtonState"],[3,"WlSeatCapability"],[4,"WlShellSurfaceEvent"],[4,"WlShellSurfaceFullscreenMethod"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlBufferEvent"],[4,"WlShmEvent"],[4,"WlShmFormat"],[3,"WlDisplay"],[3,"ReadEventsGuard"],[8,"Proxy"],[3,"ProxyId"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[0,"common","wayland_sys","Various types and functions that are used by both the client and the server\nlibraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",5,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",5,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",5,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",5,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",5,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",5,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",5,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",5,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",5,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",5,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",5,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"deref","wayland_sys::client","",6,{"inputs":[{"name":"wayland_client_option"}],"output":{"name":"option"}}],[11,"deref","","",7,{"inputs":[{"name":"wayland_client_handle"}],"output":{"name":"waylandclient"}}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",8,null],[12,"wl_egl_window_destroy","","",8,null],[12,"wl_egl_window_resize","","",8,null],[12,"wl_egl_window_get_attached_size","","",8,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",9,{"inputs":[{"name":"wayland_egl_option"}],"output":{"name":"option"}}],[11,"deref","","",10,{"inputs":[{"name":"wayland_egl_handle"}],"output":{"name":"waylandegl"}}],[14,"ffi_dispatch!","wayland_sys","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[4,"Option"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"]]};
searchIndex["dlib"] = {"doc":"","items":[[11,"new","libloading","Find and load a shared library (module).",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",0,null],[3,"Library","dlib","A dynamically loaded library.",null,null],[11,"deref","libloading","",1,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[3,"Symbol","dlib","Symbol from a library.",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",2,null],[13,"MissingSymbol","","",2,null],[14,"ffi_dispatch!","","",null,null],[14,"ffi_dispatch_static!","","",null,null],[14,"link_external_library!","","",null,null],[14,"dlopen_external_library!","","",null,null],[14,"external_library!","","",null,null]],"paths":[[3,"Library"],[3,"Symbol"],[4,"DlError"]]};
searchIndex["libloading"] = {"doc":"A memory-safer wrapper around system dynamic library primitives.","items":[[3,"Library","libloading","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[0,"os","","",null,null],[0,"unix","libloading::os","",null,null],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",0,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"new","libloading::os::unix","Find and load a shared library (module).",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",1,{"inputs":[],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",1,null],[11,"drop","","",1,{"inputs":[{"name":"library"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[11,"fmt","","",2,{"inputs":[{"name":"symbol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",3,{"inputs":[{"name":"nullerror"}],"output":{"name":"error"}}],[6,"Result","libloading","",null,null],[11,"new","","Find and load a shared library (module).",4,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",4,null],[11,"deref","","",5,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}]],"paths":[[3,"Mutex"],[3,"Library"],[3,"Symbol"],[3,"Error"],[3,"Library"],[3,"Symbol"]]};
searchIndex["tempfile"] = {"doc":"Securely create and manage temporary files. Temporary files created by this create are\nautomatically deleted.","items":[[3,"NamedTempFile","tempfile","A named temporary file.",null,null],[3,"TempFile","","An unnamed temporary file.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"open","std::fs","Attempts to open a file in read-only mode.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",1,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"deref","tempfile","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"from","std::io::error","",2,{"inputs":[{"name":"persisterror"}],"output":{"name":"error"}}],[11,"new","tempfile","Create a new temporary file.",0,{"inputs":[],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Get the temporary file&#39;s path.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"path"}}],[11,"close","","Close and remove the temporary file.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"persist","","Persist the temporary file at the target path.",0,{"inputs":[{"name":"namedtempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"drop","","",0,{"inputs":[{"name":"namedtempfile"}],"output":null}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"seek","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"rawfd"}}],[11,"fmt","","",3,{"inputs":[{"name":"tempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new temporary file.",3,{"inputs":[],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",3,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"shared","","Create a new temporary file and open it `count` times returning `count` independent\nreferences to the same file.",3,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"shared_in","","Same as `shared` but creates the file in the specified directory.",3,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"result"}}],[11,"len","","Number of bytes in the file.",3,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"set_len","","Truncate the file to `size` bytes.",3,{"inputs":[{"name":"tempfile"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"seek","","",3,{"inputs":[{"name":"tempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",3,{"inputs":[{"name":"tempfile"}],"output":{"name":"rawfd"}}]],"paths":[[3,"NamedTempFile"],[3,"File"],[3,"Error"],[3,"TempFile"]]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory maps.","items":[[3,"MmapOptions","memmap","",null,null],[12,"stack","","Indicates that the memory map should be suitable for a stack.",0,null],[3,"Mmap","","A memory-mapped buffer.",null,null],[3,"MmapView","","A view of a memory map.",null,null],[3,"MmapViewSync","","A thread-safe view of a memory map.",null,null],[4,"Protection","","Memory map protection.",null,null],[13,"Read","","A read-only memory map. Writes to the memory map will result in a panic.",1,null],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be reflected in\nthe file after a call to `Mmap::flush` or after the `Mmap` is dropped.",1,null],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map will not be\ncarried through to the underlying file. It is unspecified whether\nchanges made to the file after the memory map is created will be\nvisible.",1,null],[11,"eq","","",1,{"inputs":[{"name":"protection"},{"name":"protection"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"protection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"protection"}],"output":{"name":"protection"}}],[11,"write","","Returns `true` if the `Protection` is writable.",1,{"inputs":[{"name":"protection"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"mmapoptions"}}],[11,"fmt","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"mmapoptions"}],"output":{"name":"mmapoptions"}}],[11,"open","","Opens a file-backed memory map.",2,{"inputs":[{"name":"file"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_path","","Opens a file-backed memory map.",2,{"inputs":[{"name":"p"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset and length.",2,{"inputs":[{"name":"file"},{"name":"protection"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"anonymous","","Opens an anonymous memory map.",2,{"inputs":[{"name":"usize"},{"name":"protection"}],"output":{"name":"result"}}],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,{"inputs":[{"name":"usize"},{"name":"protection"},{"name":"mmapoptions"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"result"}}],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range\nto disk.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a pointer to the mapped memory.",2,null],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,null],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"mmapview"}}],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"mmapviewsync"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,{"inputs":[{"name":"mmapview"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of the view to the provided offset and length.",3,{"inputs":[{"name":"mmapview"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to\ndisk.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,null],[11,"clone","","Clones the view of the memory map.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"mmapview"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,{"inputs":[{"name":"mmapviewsync"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of this view to the provided offset and length.",4,{"inputs":[{"name":"mmapviewsync"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,null],[11,"clone","","Clones the view of the memory map.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"mmapviewsync"}}]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex["fs2"] = {"doc":"","items":[[5,"lock_contended_error","fs2","Returns the error that a call to a try lock method on a contended file will\nreturn.",null,{"inputs":[],"output":{"name":"error"}}],[5,"free_space","","Returns the number of free bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"available_space","","Returns the available space in bytes to non-priveleged users in the file\nsystem containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"total_space","","Returns the total space in bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"allocation_granularity","","Returns the filesystem&#39;s disk space allocation granularity in bytes.\nThe provided path may be for any file in the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[8,"FileExt","","Extension trait for `File` providing duplication and locking methods.",null,null],[10,"duplicate","","Returns a duplicate instance of the file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"allocated_size","","Returns the amount of physical space allocated for a file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"allocate","","Ensures that at least `len` bytes of disk space are allocated for the\nfile, and the file size is at least `len` bytes. After a successful call\nto `allocate`, subsequent writes to the file within the specified length\nare guaranteed not to fail because of lack of disk space.",0,{"inputs":[{"name":"fileext"},{"name":"u64"}],"output":{"name":"result"}}],[10,"lock_shared","","Locks the file for shared usage, blocking if the file is currently\nlocked exclusively.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"lock_exclusive","","Locks the file for exclusive usage, blocking if the file is currently\nlocked.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"try_lock_shared","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"try_lock_exclusive","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"unlock","","Unlocks the file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[11,"duplicate","std::fs","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"allocated_size","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"allocate","","",1,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"lock_shared","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"lock_exclusive","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_lock_shared","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_lock_exclusive","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"unlock","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}]],"paths":[[8,"FileExt"],[3,"File"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"outofrangeerror"}],"output":{"name":"outofrangeerror"}}],[11,"fmt","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"outofrangeerror"}],"output":{"name":"str"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",6,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",7,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",7,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["osmesa_sys"] = {"doc":"","items":[[3,"OsMesa","osmesa_sys","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","shared_library::dynamic_library","",2,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",2,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",2,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",2,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",2,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",2,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",2,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"DynamicLibrary"]]};
searchIndex["gfx_gl"] = {"doc":"An OpenGL loader generated by [gl-rs](https://github.com/bjz/gl-rs).","items":[[3,"FnPtr","gfx_gl","",null,null],[3,"Gl","","",null,null],[12,"ActiveShaderProgram","","",0,null],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",0,null],[12,"AttachShader","","Fallbacks: AttachObjectARB",0,null],[12,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",0,null],[12,"BeginQuery","","Fallbacks: BeginQueryARB",0,null],[12,"BeginQueryIndexed","","",0,null],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",0,null],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",0,null],[12,"BindBuffer","","Fallbacks: BindBufferARB",0,null],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",0,null],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",0,null],[12,"BindBuffersBase","","",0,null],[12,"BindBuffersRange","","",0,null],[12,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",0,null],[12,"BindFragDataLocationIndexed","","",0,null],[12,"BindFramebuffer","","",0,null],[12,"BindImageTexture","","",0,null],[12,"BindImageTextures","","",0,null],[12,"BindProgramPipeline","","",0,null],[12,"BindRenderbuffer","","",0,null],[12,"BindSampler","","",0,null],[12,"BindSamplers","","",0,null],[12,"BindTexture","","Fallbacks: BindTextureEXT",0,null],[12,"BindTextureUnit","","",0,null],[12,"BindTextures","","",0,null],[12,"BindTransformFeedback","","",0,null],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",0,null],[12,"BindVertexBuffer","","",0,null],[12,"BindVertexBuffers","","",0,null],[12,"BlendColor","","Fallbacks: BlendColorEXT",0,null],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",0,null],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",0,null],[12,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",0,null],[12,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",0,null],[12,"BlendFunc","","",0,null],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",0,null],[12,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",0,null],[12,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",0,null],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",0,null],[12,"BlitNamedFramebuffer","","",0,null],[12,"BufferData","","Fallbacks: BufferDataARB",0,null],[12,"BufferStorage","","Fallbacks: BufferStorageEXT",0,null],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",0,null],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",0,null],[12,"CheckNamedFramebufferStatus","","",0,null],[12,"ClampColor","","Fallbacks: ClampColorARB",0,null],[12,"Clear","","",0,null],[12,"ClearBufferData","","",0,null],[12,"ClearBufferSubData","","",0,null],[12,"ClearBufferfi","","",0,null],[12,"ClearBufferfv","","",0,null],[12,"ClearBufferiv","","",0,null],[12,"ClearBufferuiv","","",0,null],[12,"ClearColor","","",0,null],[12,"ClearDepth","","",0,null],[12,"ClearDepthf","","Fallbacks: ClearDepthfOES",0,null],[12,"ClearNamedBufferData","","",0,null],[12,"ClearNamedBufferSubData","","",0,null],[12,"ClearNamedFramebufferfi","","",0,null],[12,"ClearNamedFramebufferfv","","",0,null],[12,"ClearNamedFramebufferiv","","",0,null],[12,"ClearNamedFramebufferuiv","","",0,null],[12,"ClearStencil","","",0,null],[12,"ClearTexImage","","",0,null],[12,"ClearTexSubImage","","",0,null],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",0,null],[12,"ClipControl","","",0,null],[12,"ColorMask","","",0,null],[12,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",0,null],[12,"ColorP3ui","","",0,null],[12,"ColorP3uiv","","",0,null],[12,"ColorP4ui","","",0,null],[12,"ColorP4uiv","","",0,null],[12,"CompileShader","","Fallbacks: CompileShaderARB",0,null],[12,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",0,null],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",0,null],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES",0,null],[12,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",0,null],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",0,null],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES",0,null],[12,"CompressedTextureSubImage1D","","",0,null],[12,"CompressedTextureSubImage2D","","",0,null],[12,"CompressedTextureSubImage3D","","",0,null],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",0,null],[12,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",0,null],[12,"CopyNamedBufferSubData","","",0,null],[12,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",0,null],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",0,null],[12,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",0,null],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",0,null],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES",0,null],[12,"CopyTextureSubImage1D","","",0,null],[12,"CopyTextureSubImage2D","","",0,null],[12,"CopyTextureSubImage3D","","",0,null],[12,"CreateBuffers","","",0,null],[12,"CreateFramebuffers","","",0,null],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",0,null],[12,"CreateProgramPipelines","","",0,null],[12,"CreateQueries","","",0,null],[12,"CreateRenderbuffers","","",0,null],[12,"CreateSamplers","","",0,null],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",0,null],[12,"CreateShaderProgramv","","",0,null],[12,"CreateTextures","","",0,null],[12,"CreateTransformFeedbacks","","",0,null],[12,"CreateVertexArrays","","",0,null],[12,"CullFace","","",0,null],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",0,null],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",0,null],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",0,null],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",0,null],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",0,null],[12,"DeleteProgram","","",0,null],[12,"DeleteProgramPipelines","","",0,null],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",0,null],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",0,null],[12,"DeleteSamplers","","",0,null],[12,"DeleteShader","","",0,null],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",0,null],[12,"DeleteTextures","","",0,null],[12,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",0,null],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",0,null],[12,"DepthFunc","","",0,null],[12,"DepthMask","","",0,null],[12,"DepthRange","","",0,null],[12,"DepthRangeArrayv","","",0,null],[12,"DepthRangeIndexed","","",0,null],[12,"DepthRangef","","Fallbacks: DepthRangefOES",0,null],[12,"DetachShader","","Fallbacks: DetachObjectARB",0,null],[12,"Disable","","",0,null],[12,"DisableVertexArrayAttrib","","",0,null],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",0,null],[12,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",0,null],[12,"DispatchCompute","","",0,null],[12,"DispatchComputeIndirect","","",0,null],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",0,null],[12,"DrawArraysIndirect","","",0,null],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",0,null],[12,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",0,null],[12,"DrawBuffer","","",0,null],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",0,null],[12,"DrawElements","","",0,null],[12,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",0,null],[12,"DrawElementsIndirect","","",0,null],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",0,null],[12,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",0,null],[12,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",0,null],[12,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",0,null],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",0,null],[12,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",0,null],[12,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV",0,null],[12,"DrawTransformFeedbackInstanced","","",0,null],[12,"DrawTransformFeedbackStream","","",0,null],[12,"DrawTransformFeedbackStreamInstanced","","",0,null],[12,"Enable","","",0,null],[12,"EnableVertexArrayAttrib","","",0,null],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",0,null],[12,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",0,null],[12,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",0,null],[12,"EndQuery","","Fallbacks: EndQueryARB",0,null],[12,"EndQueryIndexed","","",0,null],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",0,null],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",0,null],[12,"Finish","","",0,null],[12,"Flush","","",0,null],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",0,null],[12,"FlushMappedNamedBufferRange","","",0,null],[12,"FramebufferParameteri","","",0,null],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",0,null],[12,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",0,null],[12,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",0,null],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",0,null],[12,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES",0,null],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",0,null],[12,"FrontFace","","",0,null],[12,"GenBuffers","","Fallbacks: GenBuffersARB",0,null],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",0,null],[12,"GenProgramPipelines","","",0,null],[12,"GenQueries","","Fallbacks: GenQueriesARB",0,null],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",0,null],[12,"GenSamplers","","",0,null],[12,"GenTextures","","",0,null],[12,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",0,null],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",0,null],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",0,null],[12,"GenerateTextureMipmap","","",0,null],[12,"GetActiveAtomicCounterBufferiv","","",0,null],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",0,null],[12,"GetActiveSubroutineName","","",0,null],[12,"GetActiveSubroutineUniformName","","",0,null],[12,"GetActiveSubroutineUniformiv","","",0,null],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",0,null],[12,"GetActiveUniformBlockName","","",0,null],[12,"GetActiveUniformBlockiv","","",0,null],[12,"GetActiveUniformName","","",0,null],[12,"GetActiveUniformsiv","","",0,null],[12,"GetAttachedShaders","","",0,null],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",0,null],[12,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",0,null],[12,"GetBooleanv","","",0,null],[12,"GetBufferParameteri64v","","",0,null],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",0,null],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",0,null],[12,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",0,null],[12,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",0,null],[12,"GetCompressedTextureImage","","",0,null],[12,"GetCompressedTextureSubImage","","",0,null],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",0,null],[12,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",0,null],[12,"GetDoublev","","",0,null],[12,"GetError","","",0,null],[12,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV",0,null],[12,"GetFloatv","","",0,null],[12,"GetFragDataIndex","","",0,null],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",0,null],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",0,null],[12,"GetFramebufferParameteriv","","",0,null],[12,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",0,null],[12,"GetInteger64i_v","","",0,null],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",0,null],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",0,null],[12,"GetIntegerv","","",0,null],[12,"GetInternalformati64v","","",0,null],[12,"GetInternalformativ","","",0,null],[12,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",0,null],[12,"GetNamedBufferParameteri64v","","",0,null],[12,"GetNamedBufferParameteriv","","",0,null],[12,"GetNamedBufferPointerv","","",0,null],[12,"GetNamedBufferSubData","","",0,null],[12,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[12,"GetNamedFramebufferParameteriv","","",0,null],[12,"GetNamedRenderbufferParameteriv","","",0,null],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",0,null],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",0,null],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",0,null],[12,"GetProgramInfoLog","","",0,null],[12,"GetProgramInterfaceiv","","",0,null],[12,"GetProgramPipelineInfoLog","","",0,null],[12,"GetProgramPipelineiv","","",0,null],[12,"GetProgramResourceIndex","","",0,null],[12,"GetProgramResourceLocation","","",0,null],[12,"GetProgramResourceLocationIndex","","",0,null],[12,"GetProgramResourceName","","",0,null],[12,"GetProgramResourceiv","","",0,null],[12,"GetProgramStageiv","","",0,null],[12,"GetProgramiv","","",0,null],[12,"GetQueryBufferObjecti64v","","",0,null],[12,"GetQueryBufferObjectiv","","",0,null],[12,"GetQueryBufferObjectui64v","","",0,null],[12,"GetQueryBufferObjectuiv","","",0,null],[12,"GetQueryIndexediv","","",0,null],[12,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",0,null],[12,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",0,null],[12,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",0,null],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",0,null],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",0,null],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",0,null],[12,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",0,null],[12,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",0,null],[12,"GetSamplerParameterfv","","",0,null],[12,"GetSamplerParameteriv","","",0,null],[12,"GetShaderInfoLog","","",0,null],[12,"GetShaderPrecisionFormat","","",0,null],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",0,null],[12,"GetShaderiv","","",0,null],[12,"GetString","","",0,null],[12,"GetStringi","","",0,null],[12,"GetSubroutineIndex","","",0,null],[12,"GetSubroutineUniformLocation","","",0,null],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",0,null],[12,"GetTexImage","","",0,null],[12,"GetTexLevelParameterfv","","",0,null],[12,"GetTexLevelParameteriv","","",0,null],[12,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",0,null],[12,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",0,null],[12,"GetTexParameterfv","","",0,null],[12,"GetTexParameteriv","","",0,null],[12,"GetTextureImage","","",0,null],[12,"GetTextureLevelParameterfv","","",0,null],[12,"GetTextureLevelParameteriv","","",0,null],[12,"GetTextureParameterIiv","","",0,null],[12,"GetTextureParameterIuiv","","",0,null],[12,"GetTextureParameterfv","","",0,null],[12,"GetTextureParameteriv","","",0,null],[12,"GetTextureSubImage","","",0,null],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",0,null],[12,"GetTransformFeedbacki64_v","","",0,null],[12,"GetTransformFeedbacki_v","","",0,null],[12,"GetTransformFeedbackiv","","",0,null],[12,"GetUniformBlockIndex","","",0,null],[12,"GetUniformIndices","","",0,null],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",0,null],[12,"GetUniformSubroutineuiv","","",0,null],[12,"GetUniformdv","","",0,null],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",0,null],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",0,null],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",0,null],[12,"GetVertexArrayIndexed64iv","","",0,null],[12,"GetVertexArrayIndexediv","","",0,null],[12,"GetVertexArrayiv","","",0,null],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",0,null],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",0,null],[12,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",0,null],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",0,null],[12,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",0,null],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",0,null],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",0,null],[12,"GetnColorTable","","",0,null],[12,"GetnCompressedTexImage","","",0,null],[12,"GetnConvolutionFilter","","",0,null],[12,"GetnHistogram","","",0,null],[12,"GetnMapdv","","",0,null],[12,"GetnMapfv","","",0,null],[12,"GetnMapiv","","",0,null],[12,"GetnMinmax","","",0,null],[12,"GetnPixelMapfv","","",0,null],[12,"GetnPixelMapuiv","","",0,null],[12,"GetnPixelMapusv","","",0,null],[12,"GetnPolygonStipple","","",0,null],[12,"GetnSeparableFilter","","",0,null],[12,"GetnTexImage","","",0,null],[12,"GetnUniformdv","","",0,null],[12,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR",0,null],[12,"GetnUniformiv","","Fallbacks: GetnUniformivKHR",0,null],[12,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",0,null],[12,"Hint","","",0,null],[12,"InvalidateBufferData","","",0,null],[12,"InvalidateBufferSubData","","",0,null],[12,"InvalidateFramebuffer","","",0,null],[12,"InvalidateNamedFramebufferData","","",0,null],[12,"InvalidateNamedFramebufferSubData","","",0,null],[12,"InvalidateSubFramebuffer","","",0,null],[12,"InvalidateTexImage","","",0,null],[12,"InvalidateTexSubImage","","",0,null],[12,"IsBuffer","","Fallbacks: IsBufferARB",0,null],[12,"IsEnabled","","",0,null],[12,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",0,null],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",0,null],[12,"IsProgram","","",0,null],[12,"IsProgramPipeline","","",0,null],[12,"IsQuery","","Fallbacks: IsQueryARB",0,null],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",0,null],[12,"IsSampler","","",0,null],[12,"IsShader","","",0,null],[12,"IsSync","","Fallbacks: IsSyncAPPLE",0,null],[12,"IsTexture","","",0,null],[12,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",0,null],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",0,null],[12,"LineWidth","","",0,null],[12,"LinkProgram","","Fallbacks: LinkProgramARB",0,null],[12,"LogicOp","","",0,null],[12,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",0,null],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",0,null],[12,"MapNamedBuffer","","",0,null],[12,"MapNamedBufferRange","","",0,null],[12,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",0,null],[12,"MemoryBarrierByRegion","","",0,null],[12,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",0,null],[12,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",0,null],[12,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",0,null],[12,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",0,null],[12,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT, MultiDrawElementsBaseVertexOES",0,null],[12,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",0,null],[12,"MultiTexCoordP1ui","","",0,null],[12,"MultiTexCoordP1uiv","","",0,null],[12,"MultiTexCoordP2ui","","",0,null],[12,"MultiTexCoordP2uiv","","",0,null],[12,"MultiTexCoordP3ui","","",0,null],[12,"MultiTexCoordP3uiv","","",0,null],[12,"MultiTexCoordP4ui","","",0,null],[12,"MultiTexCoordP4uiv","","",0,null],[12,"NamedBufferData","","",0,null],[12,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",0,null],[12,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",0,null],[12,"NamedFramebufferDrawBuffer","","",0,null],[12,"NamedFramebufferDrawBuffers","","",0,null],[12,"NamedFramebufferParameteri","","",0,null],[12,"NamedFramebufferReadBuffer","","",0,null],[12,"NamedFramebufferRenderbuffer","","",0,null],[12,"NamedFramebufferTexture","","",0,null],[12,"NamedFramebufferTextureLayer","","",0,null],[12,"NamedRenderbufferStorage","","",0,null],[12,"NamedRenderbufferStorageMultisample","","",0,null],[12,"NormalP3ui","","",0,null],[12,"NormalP3uiv","","",0,null],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",0,null],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",0,null],[12,"PatchParameterfv","","",0,null],[12,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",0,null],[12,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",0,null],[12,"PixelStoref","","",0,null],[12,"PixelStorei","","",0,null],[12,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",0,null],[12,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",0,null],[12,"PointParameteri","","Fallbacks: PointParameteriNV",0,null],[12,"PointParameteriv","","Fallbacks: PointParameterivNV",0,null],[12,"PointSize","","",0,null],[12,"PolygonMode","","Fallbacks: PolygonModeNV",0,null],[12,"PolygonOffset","","",0,null],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",0,null],[12,"PrimitiveRestartIndex","","",0,null],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",0,null],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",0,null],[12,"ProgramUniform1d","","",0,null],[12,"ProgramUniform1dv","","",0,null],[12,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",0,null],[12,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",0,null],[12,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",0,null],[12,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",0,null],[12,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",0,null],[12,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",0,null],[12,"ProgramUniform2d","","",0,null],[12,"ProgramUniform2dv","","",0,null],[12,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",0,null],[12,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",0,null],[12,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",0,null],[12,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",0,null],[12,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",0,null],[12,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",0,null],[12,"ProgramUniform3d","","",0,null],[12,"ProgramUniform3dv","","",0,null],[12,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",0,null],[12,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",0,null],[12,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",0,null],[12,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",0,null],[12,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",0,null],[12,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",0,null],[12,"ProgramUniform4d","","",0,null],[12,"ProgramUniform4dv","","",0,null],[12,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",0,null],[12,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",0,null],[12,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",0,null],[12,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",0,null],[12,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",0,null],[12,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",0,null],[12,"ProgramUniformMatrix2dv","","",0,null],[12,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",0,null],[12,"ProgramUniformMatrix2x3dv","","",0,null],[12,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",0,null],[12,"ProgramUniformMatrix2x4dv","","",0,null],[12,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",0,null],[12,"ProgramUniformMatrix3dv","","",0,null],[12,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",0,null],[12,"ProgramUniformMatrix3x2dv","","",0,null],[12,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",0,null],[12,"ProgramUniformMatrix3x4dv","","",0,null],[12,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",0,null],[12,"ProgramUniformMatrix4dv","","",0,null],[12,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",0,null],[12,"ProgramUniformMatrix4x2dv","","",0,null],[12,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",0,null],[12,"ProgramUniformMatrix4x3dv","","",0,null],[12,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",0,null],[12,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",0,null],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",0,null],[12,"QueryCounter","","Fallbacks: QueryCounterEXT",0,null],[12,"ReadBuffer","","",0,null],[12,"ReadPixels","","",0,null],[12,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",0,null],[12,"ReleaseShaderCompiler","","",0,null],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",0,null],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",0,null],[12,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",0,null],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",0,null],[12,"SampleMaski","","",0,null],[12,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",0,null],[12,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",0,null],[12,"SamplerParameterf","","",0,null],[12,"SamplerParameterfv","","",0,null],[12,"SamplerParameteri","","",0,null],[12,"SamplerParameteriv","","",0,null],[12,"Scissor","","",0,null],[12,"ScissorArrayv","","Fallbacks: ScissorArrayvNV",0,null],[12,"ScissorIndexed","","Fallbacks: ScissorIndexedNV",0,null],[12,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV",0,null],[12,"SecondaryColorP3ui","","",0,null],[12,"SecondaryColorP3uiv","","",0,null],[12,"ShaderBinary","","",0,null],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",0,null],[12,"ShaderStorageBlockBinding","","",0,null],[12,"StencilFunc","","",0,null],[12,"StencilFuncSeparate","","",0,null],[12,"StencilMask","","",0,null],[12,"StencilMaskSeparate","","",0,null],[12,"StencilOp","","",0,null],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",0,null],[12,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",0,null],[12,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",0,null],[12,"TexCoordP1ui","","",0,null],[12,"TexCoordP1uiv","","",0,null],[12,"TexCoordP2ui","","",0,null],[12,"TexCoordP2uiv","","",0,null],[12,"TexCoordP3ui","","",0,null],[12,"TexCoordP3uiv","","",0,null],[12,"TexCoordP4ui","","",0,null],[12,"TexCoordP4uiv","","",0,null],[12,"TexImage1D","","",0,null],[12,"TexImage2D","","",0,null],[12,"TexImage2DMultisample","","",0,null],[12,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES",0,null],[12,"TexImage3DMultisample","","",0,null],[12,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",0,null],[12,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",0,null],[12,"TexParameterf","","",0,null],[12,"TexParameterfv","","",0,null],[12,"TexParameteri","","",0,null],[12,"TexParameteriv","","",0,null],[12,"TexStorage1D","","Fallbacks: TexStorage1DEXT",0,null],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",0,null],[12,"TexStorage2DMultisample","","",0,null],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",0,null],[12,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",0,null],[12,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",0,null],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",0,null],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES",0,null],[12,"TextureBarrier","","",0,null],[12,"TextureBuffer","","",0,null],[12,"TextureBufferRange","","",0,null],[12,"TextureParameterIiv","","",0,null],[12,"TextureParameterIuiv","","",0,null],[12,"TextureParameterf","","",0,null],[12,"TextureParameterfv","","",0,null],[12,"TextureParameteri","","",0,null],[12,"TextureParameteriv","","",0,null],[12,"TextureStorage1D","","",0,null],[12,"TextureStorage2D","","",0,null],[12,"TextureStorage2DMultisample","","",0,null],[12,"TextureStorage3D","","",0,null],[12,"TextureStorage3DMultisample","","",0,null],[12,"TextureSubImage1D","","",0,null],[12,"TextureSubImage2D","","",0,null],[12,"TextureSubImage3D","","",0,null],[12,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",0,null],[12,"TransformFeedbackBufferBase","","",0,null],[12,"TransformFeedbackBufferRange","","",0,null],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",0,null],[12,"Uniform1d","","",0,null],[12,"Uniform1dv","","",0,null],[12,"Uniform1f","","Fallbacks: Uniform1fARB",0,null],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",0,null],[12,"Uniform1i","","Fallbacks: Uniform1iARB",0,null],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",0,null],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",0,null],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",0,null],[12,"Uniform2d","","",0,null],[12,"Uniform2dv","","",0,null],[12,"Uniform2f","","Fallbacks: Uniform2fARB",0,null],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",0,null],[12,"Uniform2i","","Fallbacks: Uniform2iARB",0,null],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",0,null],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",0,null],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",0,null],[12,"Uniform3d","","",0,null],[12,"Uniform3dv","","",0,null],[12,"Uniform3f","","Fallbacks: Uniform3fARB",0,null],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",0,null],[12,"Uniform3i","","Fallbacks: Uniform3iARB",0,null],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",0,null],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",0,null],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",0,null],[12,"Uniform4d","","",0,null],[12,"Uniform4dv","","",0,null],[12,"Uniform4f","","Fallbacks: Uniform4fARB",0,null],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",0,null],[12,"Uniform4i","","Fallbacks: Uniform4iARB",0,null],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",0,null],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",0,null],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",0,null],[12,"UniformBlockBinding","","",0,null],[12,"UniformMatrix2dv","","",0,null],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",0,null],[12,"UniformMatrix2x3dv","","",0,null],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",0,null],[12,"UniformMatrix2x4dv","","",0,null],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",0,null],[12,"UniformMatrix3dv","","",0,null],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",0,null],[12,"UniformMatrix3x2dv","","",0,null],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",0,null],[12,"UniformMatrix3x4dv","","",0,null],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",0,null],[12,"UniformMatrix4dv","","",0,null],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",0,null],[12,"UniformMatrix4x2dv","","",0,null],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",0,null],[12,"UniformMatrix4x3dv","","",0,null],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",0,null],[12,"UniformSubroutinesuiv","","",0,null],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",0,null],[12,"UnmapNamedBuffer","","",0,null],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",0,null],[12,"UseProgramStages","","",0,null],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",0,null],[12,"ValidateProgramPipeline","","",0,null],[12,"VertexArrayAttribBinding","","",0,null],[12,"VertexArrayAttribFormat","","",0,null],[12,"VertexArrayAttribIFormat","","",0,null],[12,"VertexArrayAttribLFormat","","",0,null],[12,"VertexArrayBindingDivisor","","",0,null],[12,"VertexArrayElementBuffer","","",0,null],[12,"VertexArrayVertexBuffer","","",0,null],[12,"VertexArrayVertexBuffers","","",0,null],[12,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",0,null],[12,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",0,null],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",0,null],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",0,null],[12,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",0,null],[12,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",0,null],[12,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",0,null],[12,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",0,null],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",0,null],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",0,null],[12,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",0,null],[12,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",0,null],[12,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",0,null],[12,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",0,null],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",0,null],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",0,null],[12,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",0,null],[12,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",0,null],[12,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",0,null],[12,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",0,null],[12,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",0,null],[12,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",0,null],[12,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",0,null],[12,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",0,null],[12,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",0,null],[12,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",0,null],[12,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",0,null],[12,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",0,null],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",0,null],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",0,null],[12,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",0,null],[12,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",0,null],[12,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",0,null],[12,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",0,null],[12,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",0,null],[12,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",0,null],[12,"VertexAttribBinding","","",0,null],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",0,null],[12,"VertexAttribFormat","","",0,null],[12,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",0,null],[12,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",0,null],[12,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",0,null],[12,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",0,null],[12,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",0,null],[12,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",0,null],[12,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",0,null],[12,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",0,null],[12,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",0,null],[12,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",0,null],[12,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",0,null],[12,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",0,null],[12,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",0,null],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",0,null],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",0,null],[12,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",0,null],[12,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",0,null],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",0,null],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",0,null],[12,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",0,null],[12,"VertexAttribIFormat","","",0,null],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",0,null],[12,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",0,null],[12,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",0,null],[12,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",0,null],[12,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",0,null],[12,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",0,null],[12,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",0,null],[12,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",0,null],[12,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",0,null],[12,"VertexAttribLFormat","","",0,null],[12,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",0,null],[12,"VertexAttribP1ui","","",0,null],[12,"VertexAttribP1uiv","","",0,null],[12,"VertexAttribP2ui","","",0,null],[12,"VertexAttribP2uiv","","",0,null],[12,"VertexAttribP3ui","","",0,null],[12,"VertexAttribP3uiv","","",0,null],[12,"VertexAttribP4ui","","",0,null],[12,"VertexAttribP4uiv","","",0,null],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",0,null],[12,"VertexBindingDivisor","","",0,null],[12,"VertexP2ui","","",0,null],[12,"VertexP2uiv","","",0,null],[12,"VertexP3ui","","",0,null],[12,"VertexP3uiv","","",0,null],[12,"VertexP4ui","","",0,null],[12,"VertexP4uiv","","",0,null],[12,"Viewport","","",0,null],[12,"ViewportArrayv","","Fallbacks: ViewportArrayvNV",0,null],[12,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV",0,null],[12,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV",0,null],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",0,null],[0,"types","","",null,null],[4,"__GLsync","gfx_gl::types","",null,null],[4,"_cl_context","","",null,null],[4,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[17,"DEPTH_BUFFER_BIT","gfx_gl","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"FALSE","","",null,null],[17,"NO_ERROR","","",null,null],[17,"ZERO","","",null,null],[17,"NONE","","",null,null],[17,"TRUE","","",null,null],[17,"ONE","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"POINTS","","",null,null],[17,"LINES","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"PATCHES","","",null,null],[17,"NEVER","","",null,null],[17,"LESS","","",null,null],[17,"EQUAL","","",null,null],[17,"LEQUAL","","",null,null],[17,"GREATER","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"GEQUAL","","",null,null],[17,"ALWAYS","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"FRONT","","",null,null],[17,"BACK","","",null,null],[17,"LEFT","","",null,null],[17,"RIGHT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CW","","",null,null],[17,"CCW","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"VIEWPORT","","",null,null],[17,"DITHER","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"STEREO","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"DONT_CARE","","",null,null],[17,"FASTEST","","",null,null],[17,"NICEST","","",null,null],[17,"BYTE","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"SHORT","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"INT","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"FLOAT","","",null,null],[17,"DOUBLE","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"FIXED","","",null,null],[17,"CLEAR","","",null,null],[17,"AND","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"COPY","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"NOOP","","",null,null],[17,"XOR","","",null,null],[17,"OR","","",null,null],[17,"NOR","","",null,null],[17,"EQUIV","","",null,null],[17,"INVERT","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"NAND","","",null,null],[17,"SET","","",null,null],[17,"TEXTURE","","",null,null],[17,"COLOR","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"RGB","","",null,null],[17,"RGBA","","",null,null],[17,"POINT","","",null,null],[17,"LINE","","",null,null],[17,"FILL","","",null,null],[17,"KEEP","","",null,null],[17,"REPLACE","","",null,null],[17,"INCR","","",null,null],[17,"DECR","","",null,null],[17,"VENDOR","","",null,null],[17,"RENDERER","","",null,null],[17,"VERSION","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"NEAREST","","",null,null],[17,"LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"REPEAT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB8","","",null,null],[17,"RGB10","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA4","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGBA8","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"INDEX","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"RG","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"R8","","",null,null],[17,"R16","","",null,null],[17,"RG8","","",null,null],[17,"RG16","","",null,null],[17,"R16F","","",null,null],[17,"R32F","","",null,null],[17,"RG16F","","",null,null],[17,"RG32F","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"FILTER","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"BUFFER","","",null,null],[17,"SHADER","","",null,null],[17,"PROGRAM","","",null,null],[17,"QUERY","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"SAMPLER","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGB32F","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGB16F","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"READ_WRITE","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"RGB9_E5","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"RGB565","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGB32I","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGB16I","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGB8I","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"ISOLINES","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"R16_SNORM","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"SIGNALED","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"TYPE","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"OFFSET","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"fnptr"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",1,{"inputs":[{"name":"fnptr"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"gl"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",0,{"inputs":[{"name":"f"}],"output":{"name":"gl"}}],[11,"ActiveShaderProgram","","",0,null],[11,"ActiveTexture","","",0,null],[11,"AttachShader","","",0,null],[11,"BeginConditionalRender","","",0,null],[11,"BeginQuery","","",0,null],[11,"BeginQueryIndexed","","",0,null],[11,"BeginTransformFeedback","","",0,null],[11,"BindAttribLocation","","",0,null],[11,"BindBuffer","","",0,null],[11,"BindBufferBase","","",0,null],[11,"BindBufferRange","","",0,null],[11,"BindBuffersBase","","",0,null],[11,"BindBuffersRange","","",0,null],[11,"BindFragDataLocation","","",0,null],[11,"BindFragDataLocationIndexed","","",0,null],[11,"BindFramebuffer","","",0,null],[11,"BindImageTexture","","",0,null],[11,"BindImageTextures","","",0,null],[11,"BindProgramPipeline","","",0,null],[11,"BindRenderbuffer","","",0,null],[11,"BindSampler","","",0,null],[11,"BindSamplers","","",0,null],[11,"BindTexture","","",0,null],[11,"BindTextureUnit","","",0,null],[11,"BindTextures","","",0,null],[11,"BindTransformFeedback","","",0,null],[11,"BindVertexArray","","",0,null],[11,"BindVertexBuffer","","",0,null],[11,"BindVertexBuffers","","",0,null],[11,"BlendColor","","",0,null],[11,"BlendEquation","","",0,null],[11,"BlendEquationSeparate","","",0,null],[11,"BlendEquationSeparatei","","",0,null],[11,"BlendEquationi","","",0,null],[11,"BlendFunc","","",0,null],[11,"BlendFuncSeparate","","",0,null],[11,"BlendFuncSeparatei","","",0,null],[11,"BlendFunci","","",0,null],[11,"BlitFramebuffer","","",0,null],[11,"BlitNamedFramebuffer","","",0,null],[11,"BufferData","","",0,null],[11,"BufferStorage","","",0,null],[11,"BufferSubData","","",0,null],[11,"CheckFramebufferStatus","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"CheckNamedFramebufferStatus","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"ClampColor","","",0,null],[11,"Clear","","",0,null],[11,"ClearBufferData","","",0,null],[11,"ClearBufferSubData","","",0,null],[11,"ClearBufferfi","","",0,null],[11,"ClearBufferfv","","",0,null],[11,"ClearBufferiv","","",0,null],[11,"ClearBufferuiv","","",0,null],[11,"ClearColor","","",0,null],[11,"ClearDepth","","",0,null],[11,"ClearDepthf","","",0,null],[11,"ClearNamedBufferData","","",0,null],[11,"ClearNamedBufferSubData","","",0,null],[11,"ClearNamedFramebufferfi","","",0,null],[11,"ClearNamedFramebufferfv","","",0,null],[11,"ClearNamedFramebufferiv","","",0,null],[11,"ClearNamedFramebufferuiv","","",0,null],[11,"ClearStencil","","",0,null],[11,"ClearTexImage","","",0,null],[11,"ClearTexSubImage","","",0,null],[11,"ClientWaitSync","","",0,{"inputs":[{"name":"gl"},{"name":"glsync"},{"name":"glbitfield"},{"name":"gluint64"}],"output":{"name":"glenum"}}],[11,"ClipControl","","",0,null],[11,"ColorMask","","",0,null],[11,"ColorMaski","","",0,null],[11,"ColorP3ui","","",0,null],[11,"ColorP3uiv","","",0,null],[11,"ColorP4ui","","",0,null],[11,"ColorP4uiv","","",0,null],[11,"CompileShader","","",0,null],[11,"CompressedTexImage1D","","",0,null],[11,"CompressedTexImage2D","","",0,null],[11,"CompressedTexImage3D","","",0,null],[11,"CompressedTexSubImage1D","","",0,null],[11,"CompressedTexSubImage2D","","",0,null],[11,"CompressedTexSubImage3D","","",0,null],[11,"CompressedTextureSubImage1D","","",0,null],[11,"CompressedTextureSubImage2D","","",0,null],[11,"CompressedTextureSubImage3D","","",0,null],[11,"CopyBufferSubData","","",0,null],[11,"CopyImageSubData","","",0,null],[11,"CopyNamedBufferSubData","","",0,null],[11,"CopyTexImage1D","","",0,null],[11,"CopyTexImage2D","","",0,null],[11,"CopyTexSubImage1D","","",0,null],[11,"CopyTexSubImage2D","","",0,null],[11,"CopyTexSubImage3D","","",0,null],[11,"CopyTextureSubImage1D","","",0,null],[11,"CopyTextureSubImage2D","","",0,null],[11,"CopyTextureSubImage3D","","",0,null],[11,"CreateBuffers","","",0,null],[11,"CreateFramebuffers","","",0,null],[11,"CreateProgram","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"gluint"}}],[11,"CreateProgramPipelines","","",0,null],[11,"CreateQueries","","",0,null],[11,"CreateRenderbuffers","","",0,null],[11,"CreateSamplers","","",0,null],[11,"CreateShader","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"gluint"}}],[11,"CreateShaderProgramv","","",0,null],[11,"CreateTextures","","",0,null],[11,"CreateTransformFeedbacks","","",0,null],[11,"CreateVertexArrays","","",0,null],[11,"CullFace","","",0,null],[11,"DebugMessageCallback","","",0,null],[11,"DebugMessageControl","","",0,null],[11,"DebugMessageInsert","","",0,null],[11,"DeleteBuffers","","",0,null],[11,"DeleteFramebuffers","","",0,null],[11,"DeleteProgram","","",0,null],[11,"DeleteProgramPipelines","","",0,null],[11,"DeleteQueries","","",0,null],[11,"DeleteRenderbuffers","","",0,null],[11,"DeleteSamplers","","",0,null],[11,"DeleteShader","","",0,null],[11,"DeleteSync","","",0,null],[11,"DeleteTextures","","",0,null],[11,"DeleteTransformFeedbacks","","",0,null],[11,"DeleteVertexArrays","","",0,null],[11,"DepthFunc","","",0,null],[11,"DepthMask","","",0,null],[11,"DepthRange","","",0,null],[11,"DepthRangeArrayv","","",0,null],[11,"DepthRangeIndexed","","",0,null],[11,"DepthRangef","","",0,null],[11,"DetachShader","","",0,null],[11,"Disable","","",0,null],[11,"DisableVertexArrayAttrib","","",0,null],[11,"DisableVertexAttribArray","","",0,null],[11,"Disablei","","",0,null],[11,"DispatchCompute","","",0,null],[11,"DispatchComputeIndirect","","",0,null],[11,"DrawArrays","","",0,null],[11,"DrawArraysIndirect","","",0,null],[11,"DrawArraysInstanced","","",0,null],[11,"DrawArraysInstancedBaseInstance","","",0,null],[11,"DrawBuffer","","",0,null],[11,"DrawBuffers","","",0,null],[11,"DrawElements","","",0,null],[11,"DrawElementsBaseVertex","","",0,null],[11,"DrawElementsIndirect","","",0,null],[11,"DrawElementsInstanced","","",0,null],[11,"DrawElementsInstancedBaseInstance","","",0,null],[11,"DrawElementsInstancedBaseVertex","","",0,null],[11,"DrawElementsInstancedBaseVertexBaseInstance","","",0,null],[11,"DrawRangeElements","","",0,null],[11,"DrawRangeElementsBaseVertex","","",0,null],[11,"DrawTransformFeedback","","",0,null],[11,"DrawTransformFeedbackInstanced","","",0,null],[11,"DrawTransformFeedbackStream","","",0,null],[11,"DrawTransformFeedbackStreamInstanced","","",0,null],[11,"Enable","","",0,null],[11,"EnableVertexArrayAttrib","","",0,null],[11,"EnableVertexAttribArray","","",0,null],[11,"Enablei","","",0,null],[11,"EndConditionalRender","","",0,null],[11,"EndQuery","","",0,null],[11,"EndQueryIndexed","","",0,null],[11,"EndTransformFeedback","","",0,null],[11,"FenceSync","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"},{"name":"glbitfield"}],"output":{"name":"glsync"}}],[11,"Finish","","",0,null],[11,"Flush","","",0,null],[11,"FlushMappedBufferRange","","",0,null],[11,"FlushMappedNamedBufferRange","","",0,null],[11,"FramebufferParameteri","","",0,null],[11,"FramebufferRenderbuffer","","",0,null],[11,"FramebufferTexture","","",0,null],[11,"FramebufferTexture1D","","",0,null],[11,"FramebufferTexture2D","","",0,null],[11,"FramebufferTexture3D","","",0,null],[11,"FramebufferTextureLayer","","",0,null],[11,"FrontFace","","",0,null],[11,"GenBuffers","","",0,null],[11,"GenFramebuffers","","",0,null],[11,"GenProgramPipelines","","",0,null],[11,"GenQueries","","",0,null],[11,"GenRenderbuffers","","",0,null],[11,"GenSamplers","","",0,null],[11,"GenTextures","","",0,null],[11,"GenTransformFeedbacks","","",0,null],[11,"GenVertexArrays","","",0,null],[11,"GenerateMipmap","","",0,null],[11,"GenerateTextureMipmap","","",0,null],[11,"GetActiveAtomicCounterBufferiv","","",0,null],[11,"GetActiveAttrib","","",0,null],[11,"GetActiveSubroutineName","","",0,null],[11,"GetActiveSubroutineUniformName","","",0,null],[11,"GetActiveSubroutineUniformiv","","",0,null],[11,"GetActiveUniform","","",0,null],[11,"GetActiveUniformBlockName","","",0,null],[11,"GetActiveUniformBlockiv","","",0,null],[11,"GetActiveUniformName","","",0,null],[11,"GetActiveUniformsiv","","",0,null],[11,"GetAttachedShaders","","",0,null],[11,"GetAttribLocation","","",0,null],[11,"GetBooleani_v","","",0,null],[11,"GetBooleanv","","",0,null],[11,"GetBufferParameteri64v","","",0,null],[11,"GetBufferParameteriv","","",0,null],[11,"GetBufferPointerv","","",0,null],[11,"GetBufferSubData","","",0,null],[11,"GetCompressedTexImage","","",0,null],[11,"GetCompressedTextureImage","","",0,null],[11,"GetCompressedTextureSubImage","","",0,null],[11,"GetDebugMessageLog","","",0,null],[11,"GetDoublei_v","","",0,null],[11,"GetDoublev","","",0,null],[11,"GetError","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"glenum"}}],[11,"GetFloati_v","","",0,null],[11,"GetFloatv","","",0,null],[11,"GetFragDataIndex","","",0,null],[11,"GetFragDataLocation","","",0,null],[11,"GetFramebufferAttachmentParameteriv","","",0,null],[11,"GetFramebufferParameteriv","","",0,null],[11,"GetGraphicsResetStatus","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"glenum"}}],[11,"GetInteger64i_v","","",0,null],[11,"GetInteger64v","","",0,null],[11,"GetIntegeri_v","","",0,null],[11,"GetIntegerv","","",0,null],[11,"GetInternalformati64v","","",0,null],[11,"GetInternalformativ","","",0,null],[11,"GetMultisamplefv","","",0,null],[11,"GetNamedBufferParameteri64v","","",0,null],[11,"GetNamedBufferParameteriv","","",0,null],[11,"GetNamedBufferPointerv","","",0,null],[11,"GetNamedBufferSubData","","",0,null],[11,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[11,"GetNamedFramebufferParameteriv","","",0,null],[11,"GetNamedRenderbufferParameteriv","","",0,null],[11,"GetObjectLabel","","",0,null],[11,"GetObjectPtrLabel","","",0,null],[11,"GetProgramBinary","","",0,null],[11,"GetProgramInfoLog","","",0,null],[11,"GetProgramInterfaceiv","","",0,null],[11,"GetProgramPipelineInfoLog","","",0,null],[11,"GetProgramPipelineiv","","",0,null],[11,"GetProgramResourceIndex","","",0,null],[11,"GetProgramResourceLocation","","",0,null],[11,"GetProgramResourceLocationIndex","","",0,null],[11,"GetProgramResourceName","","",0,null],[11,"GetProgramResourceiv","","",0,null],[11,"GetProgramStageiv","","",0,null],[11,"GetProgramiv","","",0,null],[11,"GetQueryBufferObjecti64v","","",0,null],[11,"GetQueryBufferObjectiv","","",0,null],[11,"GetQueryBufferObjectui64v","","",0,null],[11,"GetQueryBufferObjectuiv","","",0,null],[11,"GetQueryIndexediv","","",0,null],[11,"GetQueryObjecti64v","","",0,null],[11,"GetQueryObjectiv","","",0,null],[11,"GetQueryObjectui64v","","",0,null],[11,"GetQueryObjectuiv","","",0,null],[11,"GetQueryiv","","",0,null],[11,"GetRenderbufferParameteriv","","",0,null],[11,"GetSamplerParameterIiv","","",0,null],[11,"GetSamplerParameterIuiv","","",0,null],[11,"GetSamplerParameterfv","","",0,null],[11,"GetSamplerParameteriv","","",0,null],[11,"GetShaderInfoLog","","",0,null],[11,"GetShaderPrecisionFormat","","",0,null],[11,"GetShaderSource","","",0,null],[11,"GetShaderiv","","",0,null],[11,"GetString","","",0,null],[11,"GetStringi","","",0,null],[11,"GetSubroutineIndex","","",0,null],[11,"GetSubroutineUniformLocation","","",0,null],[11,"GetSynciv","","",0,null],[11,"GetTexImage","","",0,null],[11,"GetTexLevelParameterfv","","",0,null],[11,"GetTexLevelParameteriv","","",0,null],[11,"GetTexParameterIiv","","",0,null],[11,"GetTexParameterIuiv","","",0,null],[11,"GetTexParameterfv","","",0,null],[11,"GetTexParameteriv","","",0,null],[11,"GetTextureImage","","",0,null],[11,"GetTextureLevelParameterfv","","",0,null],[11,"GetTextureLevelParameteriv","","",0,null],[11,"GetTextureParameterIiv","","",0,null],[11,"GetTextureParameterIuiv","","",0,null],[11,"GetTextureParameterfv","","",0,null],[11,"GetTextureParameteriv","","",0,null],[11,"GetTextureSubImage","","",0,null],[11,"GetTransformFeedbackVarying","","",0,null],[11,"GetTransformFeedbacki64_v","","",0,null],[11,"GetTransformFeedbacki_v","","",0,null],[11,"GetTransformFeedbackiv","","",0,null],[11,"GetUniformBlockIndex","","",0,null],[11,"GetUniformIndices","","",0,null],[11,"GetUniformLocation","","",0,null],[11,"GetUniformSubroutineuiv","","",0,null],[11,"GetUniformdv","","",0,null],[11,"GetUniformfv","","",0,null],[11,"GetUniformiv","","",0,null],[11,"GetUniformuiv","","",0,null],[11,"GetVertexArrayIndexed64iv","","",0,null],[11,"GetVertexArrayIndexediv","","",0,null],[11,"GetVertexArrayiv","","",0,null],[11,"GetVertexAttribIiv","","",0,null],[11,"GetVertexAttribIuiv","","",0,null],[11,"GetVertexAttribLdv","","",0,null],[11,"GetVertexAttribPointerv","","",0,null],[11,"GetVertexAttribdv","","",0,null],[11,"GetVertexAttribfv","","",0,null],[11,"GetVertexAttribiv","","",0,null],[11,"GetnColorTable","","",0,null],[11,"GetnCompressedTexImage","","",0,null],[11,"GetnConvolutionFilter","","",0,null],[11,"GetnHistogram","","",0,null],[11,"GetnMapdv","","",0,null],[11,"GetnMapfv","","",0,null],[11,"GetnMapiv","","",0,null],[11,"GetnMinmax","","",0,null],[11,"GetnPixelMapfv","","",0,null],[11,"GetnPixelMapuiv","","",0,null],[11,"GetnPixelMapusv","","",0,null],[11,"GetnPolygonStipple","","",0,null],[11,"GetnSeparableFilter","","",0,null],[11,"GetnTexImage","","",0,null],[11,"GetnUniformdv","","",0,null],[11,"GetnUniformfv","","",0,null],[11,"GetnUniformiv","","",0,null],[11,"GetnUniformuiv","","",0,null],[11,"Hint","","",0,null],[11,"InvalidateBufferData","","",0,null],[11,"InvalidateBufferSubData","","",0,null],[11,"InvalidateFramebuffer","","",0,null],[11,"InvalidateNamedFramebufferData","","",0,null],[11,"InvalidateNamedFramebufferSubData","","",0,null],[11,"InvalidateSubFramebuffer","","",0,null],[11,"InvalidateTexImage","","",0,null],[11,"InvalidateTexSubImage","","",0,null],[11,"IsBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsEnabled","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"IsEnabledi","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsFramebuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgram","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgramPipeline","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsQuery","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsRenderbuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSampler","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsShader","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSync","","",0,{"inputs":[{"name":"gl"},{"name":"glsync"}],"output":{"name":"glboolean"}}],[11,"IsTexture","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsTransformFeedback","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsVertexArray","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"LineWidth","","",0,null],[11,"LinkProgram","","",0,null],[11,"LogicOp","","",0,null],[11,"MapBuffer","","",0,null],[11,"MapBufferRange","","",0,null],[11,"MapNamedBuffer","","",0,null],[11,"MapNamedBufferRange","","",0,null],[11,"MemoryBarrier","","",0,null],[11,"MemoryBarrierByRegion","","",0,null],[11,"MinSampleShading","","",0,null],[11,"MultiDrawArrays","","",0,null],[11,"MultiDrawArraysIndirect","","",0,null],[11,"MultiDrawElements","","",0,null],[11,"MultiDrawElementsBaseVertex","","",0,null],[11,"MultiDrawElementsIndirect","","",0,null],[11,"MultiTexCoordP1ui","","",0,null],[11,"MultiTexCoordP1uiv","","",0,null],[11,"MultiTexCoordP2ui","","",0,null],[11,"MultiTexCoordP2uiv","","",0,null],[11,"MultiTexCoordP3ui","","",0,null],[11,"MultiTexCoordP3uiv","","",0,null],[11,"MultiTexCoordP4ui","","",0,null],[11,"MultiTexCoordP4uiv","","",0,null],[11,"NamedBufferData","","",0,null],[11,"NamedBufferStorage","","",0,null],[11,"NamedBufferSubData","","",0,null],[11,"NamedFramebufferDrawBuffer","","",0,null],[11,"NamedFramebufferDrawBuffers","","",0,null],[11,"NamedFramebufferParameteri","","",0,null],[11,"NamedFramebufferReadBuffer","","",0,null],[11,"NamedFramebufferRenderbuffer","","",0,null],[11,"NamedFramebufferTexture","","",0,null],[11,"NamedFramebufferTextureLayer","","",0,null],[11,"NamedRenderbufferStorage","","",0,null],[11,"NamedRenderbufferStorageMultisample","","",0,null],[11,"NormalP3ui","","",0,null],[11,"NormalP3uiv","","",0,null],[11,"ObjectLabel","","",0,null],[11,"ObjectPtrLabel","","",0,null],[11,"PatchParameterfv","","",0,null],[11,"PatchParameteri","","",0,null],[11,"PauseTransformFeedback","","",0,null],[11,"PixelStoref","","",0,null],[11,"PixelStorei","","",0,null],[11,"PointParameterf","","",0,null],[11,"PointParameterfv","","",0,null],[11,"PointParameteri","","",0,null],[11,"PointParameteriv","","",0,null],[11,"PointSize","","",0,null],[11,"PolygonMode","","",0,null],[11,"PolygonOffset","","",0,null],[11,"PopDebugGroup","","",0,null],[11,"PrimitiveRestartIndex","","",0,null],[11,"ProgramBinary","","",0,null],[11,"ProgramParameteri","","",0,null],[11,"ProgramUniform1d","","",0,null],[11,"ProgramUniform1dv","","",0,null],[11,"ProgramUniform1f","","",0,null],[11,"ProgramUniform1fv","","",0,null],[11,"ProgramUniform1i","","",0,null],[11,"ProgramUniform1iv","","",0,null],[11,"ProgramUniform1ui","","",0,null],[11,"ProgramUniform1uiv","","",0,null],[11,"ProgramUniform2d","","",0,null],[11,"ProgramUniform2dv","","",0,null],[11,"ProgramUniform2f","","",0,null],[11,"ProgramUniform2fv","","",0,null],[11,"ProgramUniform2i","","",0,null],[11,"ProgramUniform2iv","","",0,null],[11,"ProgramUniform2ui","","",0,null],[11,"ProgramUniform2uiv","","",0,null],[11,"ProgramUniform3d","","",0,null],[11,"ProgramUniform3dv","","",0,null],[11,"ProgramUniform3f","","",0,null],[11,"ProgramUniform3fv","","",0,null],[11,"ProgramUniform3i","","",0,null],[11,"ProgramUniform3iv","","",0,null],[11,"ProgramUniform3ui","","",0,null],[11,"ProgramUniform3uiv","","",0,null],[11,"ProgramUniform4d","","",0,null],[11,"ProgramUniform4dv","","",0,null],[11,"ProgramUniform4f","","",0,null],[11,"ProgramUniform4fv","","",0,null],[11,"ProgramUniform4i","","",0,null],[11,"ProgramUniform4iv","","",0,null],[11,"ProgramUniform4ui","","",0,null],[11,"ProgramUniform4uiv","","",0,null],[11,"ProgramUniformMatrix2dv","","",0,null],[11,"ProgramUniformMatrix2fv","","",0,null],[11,"ProgramUniformMatrix2x3dv","","",0,null],[11,"ProgramUniformMatrix2x3fv","","",0,null],[11,"ProgramUniformMatrix2x4dv","","",0,null],[11,"ProgramUniformMatrix2x4fv","","",0,null],[11,"ProgramUniformMatrix3dv","","",0,null],[11,"ProgramUniformMatrix3fv","","",0,null],[11,"ProgramUniformMatrix3x2dv","","",0,null],[11,"ProgramUniformMatrix3x2fv","","",0,null],[11,"ProgramUniformMatrix3x4dv","","",0,null],[11,"ProgramUniformMatrix3x4fv","","",0,null],[11,"ProgramUniformMatrix4dv","","",0,null],[11,"ProgramUniformMatrix4fv","","",0,null],[11,"ProgramUniformMatrix4x2dv","","",0,null],[11,"ProgramUniformMatrix4x2fv","","",0,null],[11,"ProgramUniformMatrix4x3dv","","",0,null],[11,"ProgramUniformMatrix4x3fv","","",0,null],[11,"ProvokingVertex","","",0,null],[11,"PushDebugGroup","","",0,null],[11,"QueryCounter","","",0,null],[11,"ReadBuffer","","",0,null],[11,"ReadPixels","","",0,null],[11,"ReadnPixels","","",0,null],[11,"ReleaseShaderCompiler","","",0,null],[11,"RenderbufferStorage","","",0,null],[11,"RenderbufferStorageMultisample","","",0,null],[11,"ResumeTransformFeedback","","",0,null],[11,"SampleCoverage","","",0,null],[11,"SampleMaski","","",0,null],[11,"SamplerParameterIiv","","",0,null],[11,"SamplerParameterIuiv","","",0,null],[11,"SamplerParameterf","","",0,null],[11,"SamplerParameterfv","","",0,null],[11,"SamplerParameteri","","",0,null],[11,"SamplerParameteriv","","",0,null],[11,"Scissor","","",0,null],[11,"ScissorArrayv","","",0,null],[11,"ScissorIndexed","","",0,null],[11,"ScissorIndexedv","","",0,null],[11,"SecondaryColorP3ui","","",0,null],[11,"SecondaryColorP3uiv","","",0,null],[11,"ShaderBinary","","",0,null],[11,"ShaderSource","","",0,null],[11,"ShaderStorageBlockBinding","","",0,null],[11,"StencilFunc","","",0,null],[11,"StencilFuncSeparate","","",0,null],[11,"StencilMask","","",0,null],[11,"StencilMaskSeparate","","",0,null],[11,"StencilOp","","",0,null],[11,"StencilOpSeparate","","",0,null],[11,"TexBuffer","","",0,null],[11,"TexBufferRange","","",0,null],[11,"TexCoordP1ui","","",0,null],[11,"TexCoordP1uiv","","",0,null],[11,"TexCoordP2ui","","",0,null],[11,"TexCoordP2uiv","","",0,null],[11,"TexCoordP3ui","","",0,null],[11,"TexCoordP3uiv","","",0,null],[11,"TexCoordP4ui","","",0,null],[11,"TexCoordP4uiv","","",0,null],[11,"TexImage1D","","",0,null],[11,"TexImage2D","","",0,null],[11,"TexImage2DMultisample","","",0,null],[11,"TexImage3D","","",0,null],[11,"TexImage3DMultisample","","",0,null],[11,"TexParameterIiv","","",0,null],[11,"TexParameterIuiv","","",0,null],[11,"TexParameterf","","",0,null],[11,"TexParameterfv","","",0,null],[11,"TexParameteri","","",0,null],[11,"TexParameteriv","","",0,null],[11,"TexStorage1D","","",0,null],[11,"TexStorage2D","","",0,null],[11,"TexStorage2DMultisample","","",0,null],[11,"TexStorage3D","","",0,null],[11,"TexStorage3DMultisample","","",0,null],[11,"TexSubImage1D","","",0,null],[11,"TexSubImage2D","","",0,null],[11,"TexSubImage3D","","",0,null],[11,"TextureBarrier","","",0,null],[11,"TextureBuffer","","",0,null],[11,"TextureBufferRange","","",0,null],[11,"TextureParameterIiv","","",0,null],[11,"TextureParameterIuiv","","",0,null],[11,"TextureParameterf","","",0,null],[11,"TextureParameterfv","","",0,null],[11,"TextureParameteri","","",0,null],[11,"TextureParameteriv","","",0,null],[11,"TextureStorage1D","","",0,null],[11,"TextureStorage2D","","",0,null],[11,"TextureStorage2DMultisample","","",0,null],[11,"TextureStorage3D","","",0,null],[11,"TextureStorage3DMultisample","","",0,null],[11,"TextureSubImage1D","","",0,null],[11,"TextureSubImage2D","","",0,null],[11,"TextureSubImage3D","","",0,null],[11,"TextureView","","",0,null],[11,"TransformFeedbackBufferBase","","",0,null],[11,"TransformFeedbackBufferRange","","",0,null],[11,"TransformFeedbackVaryings","","",0,null],[11,"Uniform1d","","",0,null],[11,"Uniform1dv","","",0,null],[11,"Uniform1f","","",0,null],[11,"Uniform1fv","","",0,null],[11,"Uniform1i","","",0,null],[11,"Uniform1iv","","",0,null],[11,"Uniform1ui","","",0,null],[11,"Uniform1uiv","","",0,null],[11,"Uniform2d","","",0,null],[11,"Uniform2dv","","",0,null],[11,"Uniform2f","","",0,null],[11,"Uniform2fv","","",0,null],[11,"Uniform2i","","",0,null],[11,"Uniform2iv","","",0,null],[11,"Uniform2ui","","",0,null],[11,"Uniform2uiv","","",0,null],[11,"Uniform3d","","",0,null],[11,"Uniform3dv","","",0,null],[11,"Uniform3f","","",0,null],[11,"Uniform3fv","","",0,null],[11,"Uniform3i","","",0,null],[11,"Uniform3iv","","",0,null],[11,"Uniform3ui","","",0,null],[11,"Uniform3uiv","","",0,null],[11,"Uniform4d","","",0,null],[11,"Uniform4dv","","",0,null],[11,"Uniform4f","","",0,null],[11,"Uniform4fv","","",0,null],[11,"Uniform4i","","",0,null],[11,"Uniform4iv","","",0,null],[11,"Uniform4ui","","",0,null],[11,"Uniform4uiv","","",0,null],[11,"UniformBlockBinding","","",0,null],[11,"UniformMatrix2dv","","",0,null],[11,"UniformMatrix2fv","","",0,null],[11,"UniformMatrix2x3dv","","",0,null],[11,"UniformMatrix2x3fv","","",0,null],[11,"UniformMatrix2x4dv","","",0,null],[11,"UniformMatrix2x4fv","","",0,null],[11,"UniformMatrix3dv","","",0,null],[11,"UniformMatrix3fv","","",0,null],[11,"UniformMatrix3x2dv","","",0,null],[11,"UniformMatrix3x2fv","","",0,null],[11,"UniformMatrix3x4dv","","",0,null],[11,"UniformMatrix3x4fv","","",0,null],[11,"UniformMatrix4dv","","",0,null],[11,"UniformMatrix4fv","","",0,null],[11,"UniformMatrix4x2dv","","",0,null],[11,"UniformMatrix4x2fv","","",0,null],[11,"UniformMatrix4x3dv","","",0,null],[11,"UniformMatrix4x3fv","","",0,null],[11,"UniformSubroutinesuiv","","",0,null],[11,"UnmapBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"UnmapNamedBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"UseProgram","","",0,null],[11,"UseProgramStages","","",0,null],[11,"ValidateProgram","","",0,null],[11,"ValidateProgramPipeline","","",0,null],[11,"VertexArrayAttribBinding","","",0,null],[11,"VertexArrayAttribFormat","","",0,null],[11,"VertexArrayAttribIFormat","","",0,null],[11,"VertexArrayAttribLFormat","","",0,null],[11,"VertexArrayBindingDivisor","","",0,null],[11,"VertexArrayElementBuffer","","",0,null],[11,"VertexArrayVertexBuffer","","",0,null],[11,"VertexArrayVertexBuffers","","",0,null],[11,"VertexAttrib1d","","",0,null],[11,"VertexAttrib1dv","","",0,null],[11,"VertexAttrib1f","","",0,null],[11,"VertexAttrib1fv","","",0,null],[11,"VertexAttrib1s","","",0,null],[11,"VertexAttrib1sv","","",0,null],[11,"VertexAttrib2d","","",0,null],[11,"VertexAttrib2dv","","",0,null],[11,"VertexAttrib2f","","",0,null],[11,"VertexAttrib2fv","","",0,null],[11,"VertexAttrib2s","","",0,null],[11,"VertexAttrib2sv","","",0,null],[11,"VertexAttrib3d","","",0,null],[11,"VertexAttrib3dv","","",0,null],[11,"VertexAttrib3f","","",0,null],[11,"VertexAttrib3fv","","",0,null],[11,"VertexAttrib3s","","",0,null],[11,"VertexAttrib3sv","","",0,null],[11,"VertexAttrib4Nbv","","",0,null],[11,"VertexAttrib4Niv","","",0,null],[11,"VertexAttrib4Nsv","","",0,null],[11,"VertexAttrib4Nub","","",0,null],[11,"VertexAttrib4Nubv","","",0,null],[11,"VertexAttrib4Nuiv","","",0,null],[11,"VertexAttrib4Nusv","","",0,null],[11,"VertexAttrib4bv","","",0,null],[11,"VertexAttrib4d","","",0,null],[11,"VertexAttrib4dv","","",0,null],[11,"VertexAttrib4f","","",0,null],[11,"VertexAttrib4fv","","",0,null],[11,"VertexAttrib4iv","","",0,null],[11,"VertexAttrib4s","","",0,null],[11,"VertexAttrib4sv","","",0,null],[11,"VertexAttrib4ubv","","",0,null],[11,"VertexAttrib4uiv","","",0,null],[11,"VertexAttrib4usv","","",0,null],[11,"VertexAttribBinding","","",0,null],[11,"VertexAttribDivisor","","",0,null],[11,"VertexAttribFormat","","",0,null],[11,"VertexAttribI1i","","",0,null],[11,"VertexAttribI1iv","","",0,null],[11,"VertexAttribI1ui","","",0,null],[11,"VertexAttribI1uiv","","",0,null],[11,"VertexAttribI2i","","",0,null],[11,"VertexAttribI2iv","","",0,null],[11,"VertexAttribI2ui","","",0,null],[11,"VertexAttribI2uiv","","",0,null],[11,"VertexAttribI3i","","",0,null],[11,"VertexAttribI3iv","","",0,null],[11,"VertexAttribI3ui","","",0,null],[11,"VertexAttribI3uiv","","",0,null],[11,"VertexAttribI4bv","","",0,null],[11,"VertexAttribI4i","","",0,null],[11,"VertexAttribI4iv","","",0,null],[11,"VertexAttribI4sv","","",0,null],[11,"VertexAttribI4ubv","","",0,null],[11,"VertexAttribI4ui","","",0,null],[11,"VertexAttribI4uiv","","",0,null],[11,"VertexAttribI4usv","","",0,null],[11,"VertexAttribIFormat","","",0,null],[11,"VertexAttribIPointer","","",0,null],[11,"VertexAttribL1d","","",0,null],[11,"VertexAttribL1dv","","",0,null],[11,"VertexAttribL2d","","",0,null],[11,"VertexAttribL2dv","","",0,null],[11,"VertexAttribL3d","","",0,null],[11,"VertexAttribL3dv","","",0,null],[11,"VertexAttribL4d","","",0,null],[11,"VertexAttribL4dv","","",0,null],[11,"VertexAttribLFormat","","",0,null],[11,"VertexAttribLPointer","","",0,null],[11,"VertexAttribP1ui","","",0,null],[11,"VertexAttribP1uiv","","",0,null],[11,"VertexAttribP2ui","","",0,null],[11,"VertexAttribP2uiv","","",0,null],[11,"VertexAttribP3ui","","",0,null],[11,"VertexAttribP3uiv","","",0,null],[11,"VertexAttribP4ui","","",0,null],[11,"VertexAttribP4uiv","","",0,null],[11,"VertexAttribPointer","","",0,null],[11,"VertexBindingDivisor","","",0,null],[11,"VertexP2ui","","",0,null],[11,"VertexP2uiv","","",0,null],[11,"VertexP3ui","","",0,null],[11,"VertexP3uiv","","",0,null],[11,"VertexP4ui","","",0,null],[11,"VertexP4uiv","","",0,null],[11,"Viewport","","",0,null],[11,"ViewportArrayv","","",0,null],[11,"ViewportIndexedf","","",0,null],[11,"ViewportIndexedfv","","",0,null],[11,"WaitSync","","",0,null]],"paths":[[3,"Gl"],[3,"FnPtr"]]};
searchIndex["env_logger"] = {"doc":"A logger configured via an environment variable which writes to standard\nerror.","items":[[3,"LogBuilder","env_logger","LogBuilder acts as builder for initializing the Logger.\nIt can be used to customize the log format, change the enviromental variable used\nto provide the logging directives and also set the default log level filter.",null,null],[5,"init","","Initializes the global logger with an env logger.",null,{"inputs":[],"output":{"name":"result"}}],[11,"new","","Initializes the log builder with defaults",0,{"inputs":[],"output":{"name":"logbuilder"}}],[11,"filter","","Adds filters to the logger",0,{"inputs":[{"name":"logbuilder"},{"name":"option"},{"name":"loglevelfilter"}],"output":{"name":"self"}}],[11,"format","","Sets the format function for formatting the log output.",0,{"inputs":[{"name":"logbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"parse","","Parses the directives string in the same form as the RUST_LOG\nenvironment variable.",0,{"inputs":[{"name":"logbuilder"},{"name":"str"}],"output":{"name":"self"}}],[11,"init","","Initializes the global logger with an env logger.",0,{"inputs":[{"name":"logbuilder"}],"output":{"name":"result"}}]],"paths":[[3,"LogBuilder"]]};
searchIndex["x11_dl"] = {"doc":"","items":[[0,"error","x11_dl","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"detail","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",1,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"openerrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"openerrorkind"}}],[11,"as_str","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"str"}}],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"_xcursoranimate"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",5,{"inputs":[{"name":"_xcursorchunkheader"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",6,{"inputs":[{"name":"_xcursorcomment"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",7,{"inputs":[{"name":"_xcursorcomments"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",8,{"inputs":[{"name":"_xcursorcursors"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",9,{"inputs":[{"name":"_xcursorfile"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",10,{"inputs":[{"name":"_xcursorfileheader"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",11,{"inputs":[{"name":"_xcursorfiletoc"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",12,{"inputs":[{"name":"_xcursorimage"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",13,{"inputs":[{"name":"_xcursorimages"}],"output":{"name":"_xcursorimages"}}],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"hskew","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"xf86vidmodegamma"}],"output":{"name":"xf86vidmodegamma"}}],[11,"eq","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"xf86vidmodemodeline"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",18,{"inputs":[{"name":"xf86vidmodemonitor"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",19,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",20,{"inputs":[{"name":"xf86vidmodesyncrange"}],"output":{"name":"xf86vidmodesyncrange"}}],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",21,null],[12,"XineramaQueryExtension","","",21,null],[12,"XineramaQueryScreens","","",21,null],[12,"XineramaQueryVersion","","",21,null],[12,"XPanoramiXAllocInfo","","",21,null],[12,"XPanoramiXGetScreenCount","","",21,null],[12,"XPanoramiXGetScreenSize","","",21,null],[12,"XPanoramiXGetState","","",21,null],[12,"XPanoramiXQueryExtension","","",21,null],[12,"XPanoramiXQueryVersion","","",21,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",22,null],[12,"x_org","","",22,null],[12,"y_org","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",23,null],[12,"screen","","",23,null],[12,"State","","",23,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"ScreenCount","","",23,null],[12,"eventMask","","",23,null],[11,"open","","",21,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"xineramascreeninfo"}],"output":{"name":"xineramascreeninfo"}}],[11,"eq","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"xpanoramixinfo"}],"output":{"name":"xpanoramixinfo"}}],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",24,null],[12,"XChangeDeviceControl","","",24,null],[12,"XChangeDeviceDontPropagateList","","",24,null],[12,"XChangeDeviceKeyMapping","","",24,null],[12,"XChangeDeviceProperty","","",24,null],[12,"XChangeFeedbackControl","","",24,null],[12,"XChangeKeyboardDevice","","",24,null],[12,"XChangePointerDevice","","",24,null],[12,"XCloseDevice","","",24,null],[12,"XDeleteDeviceProperty","","",24,null],[12,"XDeviceBell","","",24,null],[12,"XFreeDeviceControl","","",24,null],[12,"XFreeDeviceList","","",24,null],[12,"XFreeDeviceMotionEvents","","",24,null],[12,"XFreeDeviceState","","",24,null],[12,"XFreeFeedbackList","","",24,null],[12,"XGetDeviceButtonMapping","","",24,null],[12,"XGetDeviceControl","","",24,null],[12,"XGetDeviceDontPropagateList","","",24,null],[12,"XGetDeviceFocus","","",24,null],[12,"XGetDeviceKeyMapping","","",24,null],[12,"XGetDeviceModifierMapping","","",24,null],[12,"XGetDeviceMotionEvents","","",24,null],[12,"XGetDeviceProperty","","",24,null],[12,"XGetExtensionVersion","","",24,null],[12,"XGetFeedbackControl","","",24,null],[12,"XGetSelectedExtensionEvents","","",24,null],[12,"XGrabDevice","","",24,null],[12,"XGrabDeviceButton","","",24,null],[12,"XGrabDeviceKey","","",24,null],[12,"XListDeviceProperties","","",24,null],[12,"XListInputDevices","","",24,null],[12,"XOpenDevice","","",24,null],[12,"XQueryDeviceState","","",24,null],[12,"XSelectExtensionEvent","","",24,null],[12,"XSendExtensionEvent","","",24,null],[12,"XSetDeviceButtonMapping","","",24,null],[12,"XSetDeviceFocus","","",24,null],[12,"XSetDeviceMode","","",24,null],[12,"XSetDeviceModifierMapping","","",24,null],[12,"XSetDeviceValuators","","",24,null],[12,"XUngrabDevice","","",24,null],[12,"XUngrabDeviceButton","","",24,null],[12,"XUngrabDeviceKey","","",24,null],[3,"XDevice","","",null,null],[12,"device_id","","",25,null],[12,"num_classes","","",25,null],[12,"classes","","",25,null],[3,"XDeviceControl","","",null,null],[12,"control","","",26,null],[12,"length","","",26,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",27,null],[12,"type_","","",27,null],[12,"name","","",27,null],[12,"num_classes","","",27,null],[12,"use_","","",27,null],[12,"inputclassinfo","","",27,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",28,null],[12,"num_classes","","",28,null],[12,"data","","",28,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",29,null],[12,"data","","",29,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",30,null],[12,"major_version","","",30,null],[12,"minor_version","","",30,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",31,null],[12,"length","","",31,null],[12,"id","","",31,null],[3,"XFeedbackState","","",null,null],[12,"class","","",32,null],[12,"length","","",32,null],[12,"id","","",32,null],[3,"XInputClass","","",null,null],[12,"class","","",33,null],[12,"length","","",33,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",34,null],[12,"event_type_base","","",34,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",24,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"xdevice"}],"output":{"name":"xdevice"}}],[11,"eq","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"xdevicecontrol"}],"output":{"name":"xdevicecontrol"}}],[11,"eq","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"xdeviceinfo"}],"output":{"name":"xdeviceinfo"}}],[11,"eq","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"xdevicestate"}],"output":{"name":"xdevicestate"}}],[11,"eq","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"xdevicetimecoord"}],"output":{"name":"xdevicetimecoord"}}],[11,"eq","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"xextensionversion"}],"output":{"name":"xextensionversion"}}],[11,"eq","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"xfeedbackcontrol"}],"output":{"name":"xfeedbackcontrol"}}],[11,"eq","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"xfeedbackstate"}],"output":{"name":"xfeedbackstate"}}],[11,"eq","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"xinputclass"}],"output":{"name":"xinputclass"}}],[11,"eq","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"xinputclassinfo"}],"output":{"name":"xinputclassinfo"}}],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",35,null],[12,"XIAllowTouchEvents","","",35,null],[12,"XIBarrierReleasePointer","","",35,null],[12,"XIBarrierReleasePointers","","",35,null],[12,"XIChangeHierarchy","","",35,null],[12,"XIChangeProperty","","",35,null],[12,"XIDefineCursor","","",35,null],[12,"XIDeleteProperty","","",35,null],[12,"XIFreeDeviceInfo","","",35,null],[12,"XIGetClientPointer","","",35,null],[12,"XIGetFocus","","",35,null],[12,"XIGetProperty","","",35,null],[12,"XIGetSelectedEvents","","",35,null],[12,"XIGrabButton","","",35,null],[12,"XIGrabDevice","","",35,null],[12,"XIGrabEnter","","",35,null],[12,"XIGrabFocusIn","","",35,null],[12,"XIGrabKeycode","","",35,null],[12,"XIGrabTouchBegin","","",35,null],[12,"XIListProperties","","",35,null],[12,"XIQueryDevice","","",35,null],[12,"XIQueryPointer","","",35,null],[12,"XIQueryVersion","","",35,null],[12,"XISelectEvents","","",35,null],[12,"XISetClientPointer","","",35,null],[12,"XISetFocus","","",35,null],[12,"XIUndefineCursor","","",35,null],[12,"XIUngrabButton","","",35,null],[12,"XIUngrabDevice","","",35,null],[12,"XIUngrabEnter","","",35,null],[12,"XIUngrabFocusIn","","",35,null],[12,"XIUngrabKeycode","","",35,null],[12,"XIUngrabTouchBegin","","",35,null],[12,"XIWarpPointer","","",35,null],[3,"Struct_Unnamed1","","",null,null],[12,"_type","","",36,null],[12,"name","","",36,null],[12,"send_core","","",36,null],[12,"enable","","",36,null],[3,"Struct_Unnamed2","","",null,null],[12,"_type","","",37,null],[12,"deviceid","","",37,null],[12,"return_mode","","",37,null],[12,"return_pointer","","",37,null],[12,"return_keyboard","","",37,null],[3,"Struct_Unnamed3","","",null,null],[12,"_type","","",38,null],[12,"deviceid","","",38,null],[12,"new_master","","",38,null],[3,"Struct_Unnamed4","","",null,null],[12,"_type","","",39,null],[12,"deviceid","","",39,null],[3,"Union_Unnamed5","","",null,null],[12,"_bindgen_data_","","",40,null],[3,"Struct_Unnamed6","","",null,null],[12,"base","","",41,null],[12,"latched","","",41,null],[12,"locked","","",41,null],[12,"effective","","",41,null],[3,"Struct_Unnamed7","","",null,null],[12,"mask_len","","",42,null],[12,"mask","","",42,null],[3,"Struct_Unnamed8","","",null,null],[12,"mask_len","","",43,null],[12,"mask","","",43,null],[12,"values","","",43,null],[3,"Struct_Unnamed9","","",null,null],[12,"deviceid","","",44,null],[12,"mask_len","","",44,null],[12,"mask","","",44,null],[3,"Struct_Unnamed10","","",null,null],[12,"_type","","",45,null],[12,"sourceid","","",45,null],[3,"Struct_Unnamed11","","",null,null],[12,"_type","","",46,null],[12,"sourceid","","",46,null],[12,"num_buttons","","",46,null],[12,"labels","","",46,null],[12,"state","","",46,null],[3,"Struct_Unnamed12","","",null,null],[12,"_type","","",47,null],[12,"sourceid","","",47,null],[12,"num_keycodes","","",47,null],[12,"keycodes","","",47,null],[3,"Struct_Unnamed13","","",null,null],[12,"_type","","",48,null],[12,"sourceid","","",48,null],[12,"number","","",48,null],[12,"label","","",48,null],[12,"min","","",48,null],[12,"max","","",48,null],[12,"value","","",48,null],[12,"resolution","","",48,null],[12,"mode","","",48,null],[3,"Struct_Unnamed14","","",null,null],[12,"_type","","",49,null],[12,"sourceid","","",49,null],[12,"number","","",49,null],[12,"scroll_type","","",49,null],[12,"increment","","",49,null],[12,"flags","","",49,null],[3,"Struct_Unnamed15","","",null,null],[12,"_type","","",50,null],[12,"sourceid","","",50,null],[12,"mode","","",50,null],[12,"num_touches","","",50,null],[3,"Struct_Unnamed16","","",null,null],[12,"deviceid","","",51,null],[12,"name","","",51,null],[12,"_use","","",51,null],[12,"attachment","","",51,null],[12,"enabled","","",51,null],[12,"num_classes","","",51,null],[12,"classes","","",51,null],[3,"Struct_Unnamed17","","",null,null],[12,"modifiers","","",52,null],[12,"status","","",52,null],[3,"Struct_Unnamed18","","",null,null],[12,"deviceid","","",53,null],[12,"barrier","","",53,null],[12,"eventid","","",53,null],[3,"Struct_Unnamed19","","",null,null],[12,"_type","","",54,null],[12,"serial","","",54,null],[12,"send_event","","",54,null],[12,"display","","",54,null],[12,"extension","","",54,null],[12,"evtype","","",54,null],[12,"time","","",54,null],[3,"Struct_Unnamed20","","",null,null],[12,"deviceid","","",55,null],[12,"attachment","","",55,null],[12,"_use","","",55,null],[12,"enabled","","",55,null],[12,"flags","","",55,null],[3,"Struct_Unnamed21","","",null,null],[12,"_type","","",56,null],[12,"serial","","",56,null],[12,"send_event","","",56,null],[12,"display","","",56,null],[12,"extension","","",56,null],[12,"evtype","","",56,null],[12,"time","","",56,null],[12,"flags","","",56,null],[12,"num_info","","",56,null],[12,"info","","",56,null],[3,"Struct_Unnamed22","","",null,null],[12,"_type","","",57,null],[12,"serial","","",57,null],[12,"send_event","","",57,null],[12,"display","","",57,null],[12,"extension","","",57,null],[12,"evtype","","",57,null],[12,"time","","",57,null],[12,"deviceid","","",57,null],[12,"sourceid","","",57,null],[12,"reason","","",57,null],[12,"num_classes","","",57,null],[12,"classes","","",57,null],[3,"Struct_Unnamed23","","",null,null],[12,"_type","","",58,null],[12,"serial","","",58,null],[12,"send_event","","",58,null],[12,"display","","",58,null],[12,"extension","","",58,null],[12,"evtype","","",58,null],[12,"time","","",58,null],[12,"deviceid","","",58,null],[12,"sourceid","","",58,null],[12,"detail","","",58,null],[12,"root","","",58,null],[12,"event","","",58,null],[12,"child","","",58,null],[12,"root_x","","",58,null],[12,"root_y","","",58,null],[12,"event_x","","",58,null],[12,"event_y","","",58,null],[12,"flags","","",58,null],[12,"buttons","","",58,null],[12,"valuators","","",58,null],[12,"mods","","",58,null],[12,"group","","",58,null],[3,"Struct_Unnamed24","","",null,null],[12,"_type","","",59,null],[12,"serial","","",59,null],[12,"send_event","","",59,null],[12,"display","","",59,null],[12,"extension","","",59,null],[12,"evtype","","",59,null],[12,"time","","",59,null],[12,"deviceid","","",59,null],[12,"sourceid","","",59,null],[12,"detail","","",59,null],[12,"flags","","",59,null],[12,"valuators","","",59,null],[12,"raw_values","","",59,null],[3,"Struct_Unnamed25","","",null,null],[12,"_type","","",60,null],[12,"serial","","",60,null],[12,"send_event","","",60,null],[12,"display","","",60,null],[12,"extension","","",60,null],[12,"evtype","","",60,null],[12,"time","","",60,null],[12,"deviceid","","",60,null],[12,"sourceid","","",60,null],[12,"detail","","",60,null],[12,"root","","",60,null],[12,"event","","",60,null],[12,"child","","",60,null],[12,"root_x","","",60,null],[12,"root_y","","",60,null],[12,"event_x","","",60,null],[12,"event_y","","",60,null],[12,"mode","","",60,null],[12,"focus","","",60,null],[12,"same_screen","","",60,null],[12,"buttons","","",60,null],[12,"mods","","",60,null],[12,"group","","",60,null],[3,"Struct_Unnamed26","","",null,null],[12,"_type","","",61,null],[12,"serial","","",61,null],[12,"send_event","","",61,null],[12,"display","","",61,null],[12,"extension","","",61,null],[12,"evtype","","",61,null],[12,"time","","",61,null],[12,"deviceid","","",61,null],[12,"property","","",61,null],[12,"what","","",61,null],[3,"Struct_Unnamed27","","",null,null],[12,"_type","","",62,null],[12,"serial","","",62,null],[12,"send_event","","",62,null],[12,"display","","",62,null],[12,"extension","","",62,null],[12,"evtype","","",62,null],[12,"time","","",62,null],[12,"deviceid","","",62,null],[12,"sourceid","","",62,null],[12,"touchid","","",62,null],[12,"root","","",62,null],[12,"event","","",62,null],[12,"child","","",62,null],[12,"flags","","",62,null],[3,"Struct_Unnamed28","","",null,null],[12,"_type","","",63,null],[12,"serial","","",63,null],[12,"send_event","","",63,null],[12,"display","","",63,null],[12,"extension","","",63,null],[12,"evtype","","",63,null],[12,"time","","",63,null],[12,"deviceid","","",63,null],[12,"sourceid","","",63,null],[12,"event","","",63,null],[12,"root","","",63,null],[12,"root_x","","",63,null],[12,"root_y","","",63,null],[12,"dx","","",63,null],[12,"dy","","",63,null],[12,"dtime","","",63,null],[12,"flags","","",63,null],[12,"barrier","","",63,null],[12,"eventid","","",63,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIAddMasterInfo","","",null,null],[6,"XIRemoveMasterInfo","","",null,null],[6,"XIAttachSlaveInfo","","",null,null],[6,"XIDetachSlaveInfo","","",null,null],[6,"XIAnyHierarchyChangeInfo","","",null,null],[6,"XIModifierState","","",null,null],[6,"XIGroupState","","",null,null],[6,"XIButtonState","","",null,null],[6,"XIValuatorState","","",null,null],[6,"XIEventMask","","",null,null],[6,"XIAnyClassInfo","","",null,null],[6,"XIButtonClassInfo","","",null,null],[6,"XIKeyClassInfo","","",null,null],[6,"XIValuatorClassInfo","","",null,null],[6,"XIScrollClassInfo","","",null,null],[6,"XITouchClassInfo","","",null,null],[6,"XIDeviceInfo","","",null,null],[6,"XIGrabModifiers","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XIBarrierReleasePointerInfo","","",null,null],[6,"XIEvent","","",null,null],[6,"XIHierarchyInfo","","",null,null],[6,"XIHierarchyEvent","","",null,null],[6,"XIDeviceChangedEvent","","",null,null],[6,"XIDeviceEvent","","",null,null],[6,"XIRawEvent","","",null,null],[6,"XIEnterEvent","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[6,"XIPropertyEvent","","",null,null],[6,"XITouchOwnershipEvent","","",null,null],[6,"XIBarrierEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",35,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"self"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"self"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"_type","","",40,null],[11,"add","","",40,null],[11,"remove","","",40,null],[11,"attach","","",40,null],[11,"detach","","",40,null],[11,"clone","","",40,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"self"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"self"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",42,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"self"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"self"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"self"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",45,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"self"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"self"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"self"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"self"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",49,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"self"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",50,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"self"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",51,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"self"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"self"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",53,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"self"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",54,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"self"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",55,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"self"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",56,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"self"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",57,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"self"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",58,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"self"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",59,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"self"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",60,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"self"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"self"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",62,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",63,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",64,null],[12,"XAddConnectionWatch","","",64,null],[12,"XAddExtension","","",64,null],[12,"XAddHost","","",64,null],[12,"XAddHosts","","",64,null],[12,"XAddPixel","","",64,null],[12,"XAddToExtensionList","","",64,null],[12,"XAddToSaveSet","","",64,null],[12,"XAllocClassHint","","",64,null],[12,"XAllocColor","","",64,null],[12,"XAllocColorCells","","",64,null],[12,"XAllocColorPlanes","","",64,null],[12,"XAllocIconSize","","",64,null],[12,"XAllocNamedColor","","",64,null],[12,"XAllocSizeHints","","",64,null],[12,"XAllocStandardColormap","","",64,null],[12,"XAllocWMHints","","",64,null],[12,"XAllowEvents","","",64,null],[12,"XAllPlanes","","",64,null],[12,"XAutoRepeatOff","","",64,null],[12,"XAutoRepeatOn","","",64,null],[12,"XBaseFontNameListOfFontSet","","",64,null],[12,"XBell","","",64,null],[12,"XBitmapBitOrder","","",64,null],[12,"XBitmapPad","","",64,null],[12,"XBitmapUnit","","",64,null],[12,"XBlackPixel","","",64,null],[12,"XBlackPixelOfScreen","","",64,null],[12,"XCellsOfScreen","","",64,null],[12,"XChangeActivePointerGrab","","",64,null],[12,"XChangeGC","","",64,null],[12,"XChangeKeyboardControl","","",64,null],[12,"XChangeKeyboardMapping","","",64,null],[12,"XChangePointerControl","","",64,null],[12,"XChangeProperty","","",64,null],[12,"XChangeSaveSet","","",64,null],[12,"XChangeWindowAttributes","","",64,null],[12,"XCheckIfEvent","","",64,null],[12,"XCheckMaskEvent","","",64,null],[12,"XCheckTypedEvent","","",64,null],[12,"XCheckTypedWindowEvent","","",64,null],[12,"XCheckWindowEvent","","",64,null],[12,"XCirculateSubwindows","","",64,null],[12,"XCirculateSubwindowsDown","","",64,null],[12,"XCirculateSubwindowsUp","","",64,null],[12,"XClearArea","","",64,null],[12,"XClearWindow","","",64,null],[12,"XClipBox","","",64,null],[12,"XCloseDisplay","","",64,null],[12,"XCloseIM","","",64,null],[12,"XCloseOM","","",64,null],[12,"XcmsAddColorSpace","","",64,null],[12,"XcmsAddFunctionSet","","",64,null],[12,"XcmsAllocColor","","",64,null],[12,"XcmsAllocNamedColor","","",64,null],[12,"XcmsCCCOfColormap","","",64,null],[12,"XcmsCIELabClipab","","",64,null],[12,"XcmsCIELabClipL","","",64,null],[12,"XcmsCIELabClipLab","","",64,null],[12,"XcmsCIELabQueryMaxC","","",64,null],[12,"XcmsCIELabQueryMaxL","","",64,null],[12,"XcmsCIELabQueryMaxLC","","",64,null],[12,"XcmsCIELabQueryMinL","","",64,null],[12,"XcmsCIELabToCIEXYZ","","",64,null],[12,"XcmsCIELabWhiteShiftColors","","",64,null],[12,"XcmsCIELuvClipL","","",64,null],[12,"XcmsCIELuvClipLuv","","",64,null],[12,"XcmsCIELuvClipuv","","",64,null],[12,"XcmsCIELuvQueryMaxC","","",64,null],[12,"XcmsCIELuvQueryMaxL","","",64,null],[12,"XcmsCIELuvQueryMaxLC","","",64,null],[12,"XcmsCIELuvQueryMinL","","",64,null],[12,"XcmsCIELuvToCIEuvY","","",64,null],[12,"XcmsCIELuvWhiteShiftColors","","",64,null],[12,"XcmsCIEuvYToCIELuv","","",64,null],[12,"XcmsCIEuvYToCIEXYZ","","",64,null],[12,"XcmsCIEuvYToTekHVC","","",64,null],[12,"XcmsCIExyYToCIEXYZ","","",64,null],[12,"XcmsCIEXYZToCIELab","","",64,null],[12,"XcmsCIEXYZToCIEuvY","","",64,null],[12,"XcmsCIEXYZToCIExyY","","",64,null],[12,"XcmsCIEXYZToRGBi","","",64,null],[12,"XcmsClientWhitePointOfCCC","","",64,null],[12,"XcmsConvertColors","","",64,null],[12,"XcmsCreateCCC","","",64,null],[12,"XcmsDefaultCCC","","",64,null],[12,"XcmsDisplayOfCCC","","",64,null],[12,"XcmsFormatOfPrefix","","",64,null],[12,"XcmsFreeCCC","","",64,null],[12,"XcmsLookupColor","","",64,null],[12,"XcmsPrefixOfFormat","","",64,null],[12,"XcmsQueryBlack","","",64,null],[12,"XcmsQueryBlue","","",64,null],[12,"XcmsQueryColor","","",64,null],[12,"XcmsQueryColors","","",64,null],[12,"XcmsQueryGreen","","",64,null],[12,"XcmsQueryRed","","",64,null],[12,"XcmsQueryWhite","","",64,null],[12,"XcmsRGBiToCIEXYZ","","",64,null],[12,"XcmsRGBiToRGB","","",64,null],[12,"XcmsRGBToRGBi","","",64,null],[12,"XcmsScreenNumberOfCCC","","",64,null],[12,"XcmsScreenWhitePointOfCCC","","",64,null],[12,"XcmsSetCCCOfColormap","","",64,null],[12,"XcmsSetCompressionProc","","",64,null],[12,"XcmsSetWhiteAdjustProc","","",64,null],[12,"XcmsSetWhitePoint","","",64,null],[12,"XcmsStoreColor","","",64,null],[12,"XcmsStoreColors","","",64,null],[12,"XcmsTekHVCClipC","","",64,null],[12,"XcmsTekHVCClipV","","",64,null],[12,"XcmsTekHVCClipVC","","",64,null],[12,"XcmsTekHVCQueryMaxC","","",64,null],[12,"XcmsTekHVCQueryMaxV","","",64,null],[12,"XcmsTekHVCQueryMaxVC","","",64,null],[12,"XcmsTekHVCQueryMaxVSamples","","",64,null],[12,"XcmsTekHVCQueryMinV","","",64,null],[12,"XcmsTekHVCToCIEuvY","","",64,null],[12,"XcmsTekHVCWhiteShiftColors","","",64,null],[12,"XcmsVisualOfCCC","","",64,null],[12,"XConfigureWindow","","",64,null],[12,"XConnectionNumber","","",64,null],[12,"XContextDependentDrawing","","",64,null],[12,"XContextualDrawing","","",64,null],[12,"XConvertCase","","",64,null],[12,"XConvertSelection","","",64,null],[12,"XCopyArea","","",64,null],[12,"XCopyColormapAndFree","","",64,null],[12,"XCopyGC","","",64,null],[12,"XCopyPlane","","",64,null],[12,"XCreateBitmapFromData","","",64,null],[12,"XCreateColormap","","",64,null],[12,"XCreateFontCursor","","",64,null],[12,"XCreateFontSet","","",64,null],[12,"XCreateGC","","",64,null],[12,"XCreateGlyphCursor","","",64,null],[12,"XCreateImage","","",64,null],[12,"XCreatePixmap","","",64,null],[12,"XCreatePixmapCursor","","",64,null],[12,"XCreatePixmapFromBitmapData","","",64,null],[12,"XCreateRegion","","",64,null],[12,"XCreateSimpleWindow","","",64,null],[12,"XCreateWindow","","",64,null],[12,"XDefaultColormap","","",64,null],[12,"XDefaultColormapOfScreen","","",64,null],[12,"XDefaultDepth","","",64,null],[12,"XDefaultDepthOfScreen","","",64,null],[12,"XDefaultGC","","",64,null],[12,"XDefaultGCOfScreen","","",64,null],[12,"XDefaultRootWindow","","",64,null],[12,"XDefaultScreen","","",64,null],[12,"XDefaultScreenOfDisplay","","",64,null],[12,"XDefaultString","","",64,null],[12,"XDefaultVisual","","",64,null],[12,"XDefaultVisualOfScreen","","",64,null],[12,"XDefineCursor","","",64,null],[12,"XDeleteContext","","",64,null],[12,"XDeleteModifiermapEntry","","",64,null],[12,"XDeleteProperty","","",64,null],[12,"XDestroyIC","","",64,null],[12,"XDestroyImage","","",64,null],[12,"XDestroyOC","","",64,null],[12,"XDestroyRegion","","",64,null],[12,"XDestroySubwindows","","",64,null],[12,"XDestroyWindow","","",64,null],[12,"XDirectionalDependentDrawing","","",64,null],[12,"XDisableAccessControl","","",64,null],[12,"XDisplayCells","","",64,null],[12,"XDisplayHeight","","",64,null],[12,"XDisplayHeightMM","","",64,null],[12,"XDisplayKeycodes","","",64,null],[12,"XDisplayMotionBufferSize","","",64,null],[12,"XDisplayName","","",64,null],[12,"XDisplayOfIM","","",64,null],[12,"XDisplayOfOM","","",64,null],[12,"XDisplayOfScreen","","",64,null],[12,"XDisplayPlanes","","",64,null],[12,"XDisplayString","","",64,null],[12,"XDisplayWidth","","",64,null],[12,"XDisplayWidthMM","","",64,null],[12,"XDoesBackingStore","","",64,null],[12,"XDoesSaveUnders","","",64,null],[12,"XDrawArc","","",64,null],[12,"XDrawArcs","","",64,null],[12,"XDrawImageString","","",64,null],[12,"XDrawImageString16","","",64,null],[12,"XDrawLine","","",64,null],[12,"XDrawLines","","",64,null],[12,"XDrawPoint","","",64,null],[12,"XDrawPoints","","",64,null],[12,"XDrawRectangle","","",64,null],[12,"XDrawRectangles","","",64,null],[12,"XDrawSegments","","",64,null],[12,"XDrawString","","",64,null],[12,"XDrawString16","","",64,null],[12,"XDrawText","","",64,null],[12,"XDrawText16","","",64,null],[12,"XEHeadOfExtensionList","","",64,null],[12,"XEmptyRegion","","",64,null],[12,"XEnableAccessControl","","",64,null],[12,"XEqualRegion","","",64,null],[12,"XESetBeforeFlush","","",64,null],[12,"XESetCloseDisplay","","",64,null],[12,"XESetCopyEventCookie","","",64,null],[12,"XESetCopyGC","","",64,null],[12,"XESetCreateFont","","",64,null],[12,"XESetCreateGC","","",64,null],[12,"XESetError","","",64,null],[12,"XESetErrorString","","",64,null],[12,"XESetEventToWire","","",64,null],[12,"XESetFlushGC","","",64,null],[12,"XESetFreeFont","","",64,null],[12,"XESetFreeGC","","",64,null],[12,"XESetPrintErrorValues","","",64,null],[12,"XESetWireToError","","",64,null],[12,"XESetWireToEvent","","",64,null],[12,"XESetWireToEventCookie","","",64,null],[12,"XEventMaskOfScreen","","",64,null],[12,"XEventsQueued","","",64,null],[12,"XExtendedMaxRequestSize","","",64,null],[12,"XExtentsOfFontSet","","",64,null],[12,"XFetchBuffer","","",64,null],[12,"XFetchBytes","","",64,null],[12,"XFetchName","","",64,null],[12,"XFillArc","","",64,null],[12,"XFillArcs","","",64,null],[12,"XFillPolygon","","",64,null],[12,"XFillRectangle","","",64,null],[12,"XFillRectangles","","",64,null],[12,"XFilterEvent","","",64,null],[12,"XFindContext","","",64,null],[12,"XFindOnExtensionList","","",64,null],[12,"XFlush","","",64,null],[12,"XFlushGC","","",64,null],[12,"XFontsOfFontSet","","",64,null],[12,"XForceScreenSaver","","",64,null],[12,"XFree","","",64,null],[12,"XFreeColormap","","",64,null],[12,"XFreeColors","","",64,null],[12,"XFreeCursor","","",64,null],[12,"XFreeEventData","","",64,null],[12,"XFreeExtensionList","","",64,null],[12,"XFreeFont","","",64,null],[12,"XFreeFontInfo","","",64,null],[12,"XFreeFontNames","","",64,null],[12,"XFreeFontPath","","",64,null],[12,"XFreeFontSet","","",64,null],[12,"XFreeGC","","",64,null],[12,"XFreeModifiermap","","",64,null],[12,"XFreePixmap","","",64,null],[12,"XFreeStringList","","",64,null],[12,"XGContextFromGC","","",64,null],[12,"XGeometry","","",64,null],[12,"XGetAtomName","","",64,null],[12,"XGetAtomNames","","",64,null],[12,"XGetClassHint","","",64,null],[12,"XGetCommand","","",64,null],[12,"XGetDefault","","",64,null],[12,"XGetErrorDatabaseText","","",64,null],[12,"XGetErrorText","","",64,null],[12,"XGetEventData","","",64,null],[12,"XGetFontPath","","",64,null],[12,"XGetFontProperty","","",64,null],[12,"XGetGCValues","","",64,null],[12,"XGetGeometry","","",64,null],[12,"XGetIconName","","",64,null],[12,"XGetIconSizes","","",64,null],[12,"XGetImage","","",64,null],[12,"XGetInputFocus","","",64,null],[12,"XGetKeyboardControl","","",64,null],[12,"XGetKeyboardMapping","","",64,null],[12,"XGetModifierMapping","","",64,null],[12,"XGetMotionEvents","","",64,null],[12,"XGetNormalHints","","",64,null],[12,"XGetPixel","","",64,null],[12,"XGetPointerControl","","",64,null],[12,"XGetPointerMapping","","",64,null],[12,"XGetRGBColormaps","","",64,null],[12,"XGetScreenSaver","","",64,null],[12,"XGetSelectionOwner","","",64,null],[12,"XGetSizeHints","","",64,null],[12,"XGetStandardColormap","","",64,null],[12,"XGetSubImage","","",64,null],[12,"XGetTextProperty","","",64,null],[12,"XGetTransientForHint","","",64,null],[12,"XGetVisualInfo","","",64,null],[12,"XGetWindowAttributes","","",64,null],[12,"XGetWindowProperty","","",64,null],[12,"XGetWMClientMachine","","",64,null],[12,"XGetWMColormapWindows","","",64,null],[12,"XGetWMHints","","",64,null],[12,"XGetWMIconName","","",64,null],[12,"XGetWMName","","",64,null],[12,"XGetWMNormalHints","","",64,null],[12,"XGetWMProtocols","","",64,null],[12,"XGetWMSizeHints","","",64,null],[12,"XGetZoomHints","","",64,null],[12,"XGrabButton","","",64,null],[12,"XGrabKey","","",64,null],[12,"XGrabKeyboard","","",64,null],[12,"XGrabPointer","","",64,null],[12,"XGrabServer","","",64,null],[12,"XHeightMMOfScreen","","",64,null],[12,"XHeightOfScreen","","",64,null],[12,"XIconifyWindow","","",64,null],[12,"XIfEvent","","",64,null],[12,"XImageByteOrder","","",64,null],[12,"XIMOfIC","","",64,null],[12,"XInitExtension","","",64,null],[12,"XInitImage","","",64,null],[12,"XInitThreads","","",64,null],[12,"XInsertModifiermapEntry","","",64,null],[12,"XInstallColormap","","",64,null],[12,"XInternalConnectionNumbers","","",64,null],[12,"XInternAtom","","",64,null],[12,"XInternAtoms","","",64,null],[12,"XIntersectRegion","","",64,null],[12,"XkbAddDeviceLedInfo","","",64,null],[12,"XkbAddGeomColor","","",64,null],[12,"XkbAddGeomDoodad","","",64,null],[12,"XkbAddGeomKey","","",64,null],[12,"XkbAddGeomKeyAlias","","",64,null],[12,"XkbAddGeomOutline","","",64,null],[12,"XkbAddGeomOverlay","","",64,null],[12,"XkbAddGeomOverlayKey","","",64,null],[12,"XkbAddGeomOverlayRow","","",64,null],[12,"XkbAddGeomProperty","","",64,null],[12,"XkbAddGeomRow","","",64,null],[12,"XkbAddGeomSection","","",64,null],[12,"XkbAddGeomShape","","",64,null],[12,"XkbAddKeyType","","",64,null],[12,"XkbAllocClientMap","","",64,null],[12,"XkbAllocCompatMap","","",64,null],[12,"XkbAllocControls","","",64,null],[12,"XkbAllocDeviceInfo","","",64,null],[12,"XkbAllocGeomColors","","",64,null],[12,"XkbAllocGeomDoodads","","",64,null],[12,"XkbAllocGeometry","","",64,null],[12,"XkbAllocGeomKeyAliases","","",64,null],[12,"XkbAllocGeomKeys","","",64,null],[12,"XkbAllocGeomOutlines","","",64,null],[12,"XkbAllocGeomOverlayKeys","","",64,null],[12,"XkbAllocGeomOverlayRows","","",64,null],[12,"XkbAllocGeomOverlays","","",64,null],[12,"XkbAllocGeomPoints","","",64,null],[12,"XkbAllocGeomProps","","",64,null],[12,"XkbAllocGeomRows","","",64,null],[12,"XkbAllocGeomSectionDoodads","","",64,null],[12,"XkbAllocGeomSections","","",64,null],[12,"XkbAllocGeomShapes","","",64,null],[12,"XkbAllocIndicatorMaps","","",64,null],[12,"XkbAllocKeyboard","","",64,null],[12,"XkbAllocNames","","",64,null],[12,"XkbAllocServerMap","","",64,null],[12,"XkbApplyCompatMapToKey","","",64,null],[12,"XkbApplyVirtualModChanges","","",64,null],[12,"XkbBell","","",64,null],[12,"XkbBellEvent","","",64,null],[12,"XkbChangeDeviceInfo","","",64,null],[12,"XkbChangeEnabledControls","","",64,null],[12,"XkbChangeKeycodeRange","","",64,null],[12,"XkbChangeMap","","",64,null],[12,"XkbChangeNames","","",64,null],[12,"XkbChangeTypesOfKey","","",64,null],[12,"XkbComputeEffectiveMap","","",64,null],[12,"XkbComputeRowBounds","","",64,null],[12,"XkbComputeSectionBounds","","",64,null],[12,"XkbComputeShapeBounds","","",64,null],[12,"XkbComputeShapeTop","","",64,null],[12,"XkbCopyKeyType","","",64,null],[12,"XkbCopyKeyTypes","","",64,null],[12,"XkbDeviceBell","","",64,null],[12,"XkbDeviceBellEvent","","",64,null],[12,"XkbFindOverlayForKey","","",64,null],[12,"XkbForceBell","","",64,null],[12,"XkbForceDeviceBell","","",64,null],[12,"XkbFreeClientMap","","",64,null],[12,"XkbFreeCompatMap","","",64,null],[12,"XkbFreeComponentList","","",64,null],[12,"XkbFreeControls","","",64,null],[12,"XkbFreeDeviceInfo","","",64,null],[12,"XkbFreeGeomColors","","",64,null],[12,"XkbFreeGeomDoodads","","",64,null],[12,"XkbFreeGeometry","","",64,null],[12,"XkbFreeGeomKeyAliases","","",64,null],[12,"XkbFreeGeomKeys","","",64,null],[12,"XkbFreeGeomOutlines","","",64,null],[12,"XkbFreeGeomOverlayKeys","","",64,null],[12,"XkbFreeGeomOverlayRows","","",64,null],[12,"XkbFreeGeomOverlays","","",64,null],[12,"XkbFreeGeomPoints","","",64,null],[12,"XkbFreeGeomProperties","","",64,null],[12,"XkbFreeGeomRows","","",64,null],[12,"XkbFreeGeomSections","","",64,null],[12,"XkbFreeGeomShapes","","",64,null],[12,"XkbFreeIndicatorMaps","","",64,null],[12,"XkbFreeKeyboard","","",64,null],[12,"XkbFreeNames","","",64,null],[12,"XkbFreeServerMap","","",64,null],[12,"XkbGetAutoRepeatRate","","",64,null],[12,"XkbGetAutoResetControls","","",64,null],[12,"XkbGetCompatMap","","",64,null],[12,"XkbGetControls","","",64,null],[12,"XkbGetDetectableAutoRepeat","","",64,null],[12,"XkbGetDeviceButtonActions","","",64,null],[12,"XkbGetDeviceInfo","","",64,null],[12,"XkbGetDeviceInfoChanges","","",64,null],[12,"XkbGetDeviceLedInfo","","",64,null],[12,"XkbGetGeometry","","",64,null],[12,"XkbGetIndicatorMap","","",64,null],[12,"XkbGetIndicatorState","","",64,null],[12,"XkbGetKeyActions","","",64,null],[12,"XkbGetKeyBehaviors","","",64,null],[12,"XkbGetKeyboard","","",64,null],[12,"XkbGetKeyboardByName","","",64,null],[12,"XkbGetKeyExplicitComponents","","",64,null],[12,"XkbGetKeyModifierMap","","",64,null],[12,"XkbGetKeySyms","","",64,null],[12,"XkbGetKeyTypes","","",64,null],[12,"XkbGetKeyVirtualModMap","","",64,null],[12,"XkbGetMap","","",64,null],[12,"XkbGetMapChanges","","",64,null],[12,"XkbGetNamedDeviceIndicator","","",64,null],[12,"XkbGetNamedGeometry","","",64,null],[12,"XkbGetNamedIndicator","","",64,null],[12,"XkbGetNames","","",64,null],[12,"XkbGetPerClientControls","","",64,null],[12,"XkbGetState","","",64,null],[12,"XkbGetUpdatedMap","","",64,null],[12,"XkbGetVirtualMods","","",64,null],[12,"XkbGetXlibControls","","",64,null],[12,"XkbIgnoreExtension","","",64,null],[12,"XkbInitCanonicalKeyTypes","","",64,null],[12,"XkbKeycodeToKeysym","","",64,null],[12,"XkbKeysymToModifiers","","",64,null],[12,"XkbKeyTypesForCoreSymbols","","",64,null],[12,"XkbLatchGroup","","",64,null],[12,"XkbLatchModifiers","","",64,null],[12,"XkbLibraryVersion","","",64,null],[12,"XkbListComponents","","",64,null],[12,"XkbLockGroup","","",64,null],[12,"XkbLockModifiers","","",64,null],[12,"XkbLookupKeyBinding","","",64,null],[12,"XkbLookupKeySym","","",64,null],[12,"XkbNoteControlsChanges","","",64,null],[12,"XkbNoteDeviceChanges","","",64,null],[12,"XkbNoteMapChanges","","",64,null],[12,"XkbNoteNameChanges","","",64,null],[12,"XkbOpenDisplay","","",64,null],[12,"XkbQueryExtension","","",64,null],[12,"XkbRefreshKeyboardMapping","","",64,null],[12,"XkbResizeDeviceButtonActions","","",64,null],[12,"XkbResizeKeyActions","","",64,null],[12,"XkbResizeKeySyms","","",64,null],[12,"XkbResizeKeyType","","",64,null],[12,"XkbSelectEventDetails","","",64,null],[12,"XkbSelectEvents","","",64,null],[12,"XkbSetAtomFuncs","","",64,null],[12,"XkbSetAutoRepeatRate","","",64,null],[12,"XkbSetAutoResetControls","","",64,null],[12,"XkbSetCompatMap","","",64,null],[12,"XkbSetControls","","",64,null],[12,"XkbSetDebuggingFlags","","",64,null],[12,"XkbSetDetectableAutoRepeat","","",64,null],[12,"XkbSetDeviceButtonActions","","",64,null],[12,"XkbSetDeviceInfo","","",64,null],[12,"XkbSetDeviceLedInfo","","",64,null],[12,"XkbSetGeometry","","",64,null],[12,"XkbSetIgnoreLockMods","","",64,null],[12,"XkbSetIndicatorMap","","",64,null],[12,"XkbSetMap","","",64,null],[12,"XkbSetNamedDeviceIndicator","","",64,null],[12,"XkbSetNamedIndicator","","",64,null],[12,"XkbSetNames","","",64,null],[12,"XkbSetPerClientControls","","",64,null],[12,"XkbSetServerInternalMods","","",64,null],[12,"XkbSetXlibControls","","",64,null],[12,"XkbToControl","","",64,null],[12,"XkbTranslateKeyCode","","",64,null],[12,"XkbTranslateKeySym","","",64,null],[12,"XkbUpdateActionVirtualMods","","",64,null],[12,"XkbUpdateKeyTypeVirtualMods","","",64,null],[12,"XkbUpdateMapFromCore","","",64,null],[12,"XkbUseExtension","","",64,null],[12,"XkbVirtualModsToReal","","",64,null],[12,"XkbXlibControlsImplemented","","",64,null],[12,"XKeycodeToKeysym","","",64,null],[12,"XKeysymToKeycode","","",64,null],[12,"XKeysymToString","","",64,null],[12,"XKillClient","","",64,null],[12,"XLastKnownRequestProcessed","","",64,null],[12,"XListDepths","","",64,null],[12,"XListExtensions","","",64,null],[12,"XListFonts","","",64,null],[12,"XListFontsWithInfo","","",64,null],[12,"XListHosts","","",64,null],[12,"XListInstalledColormaps","","",64,null],[12,"XListPixmapFormats","","",64,null],[12,"XListProperties","","",64,null],[12,"XLoadFont","","",64,null],[12,"XLoadQueryFont","","",64,null],[12,"XLocaleOfFontSet","","",64,null],[12,"XLocaleOfIM","","",64,null],[12,"XLocaleOfOM","","",64,null],[12,"XLockDisplay","","",64,null],[12,"XLookupColor","","",64,null],[12,"XLookupKeysym","","",64,null],[12,"XLookupString","","",64,null],[12,"XLowerWindow","","",64,null],[12,"XMapRaised","","",64,null],[12,"XMapSubwindows","","",64,null],[12,"XMapWindow","","",64,null],[12,"XMaskEvent","","",64,null],[12,"XMatchVisualInfo","","",64,null],[12,"XMaxCmapsOfScreen","","",64,null],[12,"XMaxRequestSize","","",64,null],[12,"XmbDrawImageString","","",64,null],[12,"XmbDrawString","","",64,null],[12,"XmbDrawText","","",64,null],[12,"XmbLookupString","","",64,null],[12,"XmbResetIC","","",64,null],[12,"XmbSetWMProperties","","",64,null],[12,"XmbTextEscapement","","",64,null],[12,"XmbTextExtents","","",64,null],[12,"XmbTextListToTextProperty","","",64,null],[12,"XmbTextPerCharExtents","","",64,null],[12,"XmbTextPropertyToTextList","","",64,null],[12,"XMinCmapsOfScreen","","",64,null],[12,"XMoveResizeWindow","","",64,null],[12,"XMoveWindow","","",64,null],[12,"XNewModifiermap","","",64,null],[12,"XNextEvent","","",64,null],[12,"XNextRequest","","",64,null],[12,"XNoOp","","",64,null],[12,"XOffsetRegion","","",64,null],[12,"XOMOfOC","","",64,null],[12,"XOpenDisplay","","",64,null],[12,"XOpenIM","","",64,null],[12,"XOpenOM","","",64,null],[12,"XParseColor","","",64,null],[12,"XParseGeometry","","",64,null],[12,"XPeekEvent","","",64,null],[12,"XPeekIfEvent","","",64,null],[12,"XPending","","",64,null],[12,"Xpermalloc","","",64,null],[12,"XPlanesOfScreen","","",64,null],[12,"XPointInRegion","","",64,null],[12,"XPolygonRegion","","",64,null],[12,"XProcessInternalConnection","","",64,null],[12,"XProtocolRevision","","",64,null],[12,"XProtocolVersion","","",64,null],[12,"XPutBackEvent","","",64,null],[12,"XPutImage","","",64,null],[12,"XPutPixel","","",64,null],[12,"XQLength","","",64,null],[12,"XQueryBestCursor","","",64,null],[12,"XQueryBestSize","","",64,null],[12,"XQueryBestStipple","","",64,null],[12,"XQueryBestTile","","",64,null],[12,"XQueryColor","","",64,null],[12,"XQueryColors","","",64,null],[12,"XQueryExtension","","",64,null],[12,"XQueryFont","","",64,null],[12,"XQueryKeymap","","",64,null],[12,"XQueryPointer","","",64,null],[12,"XQueryTextExtents","","",64,null],[12,"XQueryTextExtents16","","",64,null],[12,"XQueryTree","","",64,null],[12,"XRaiseWindow","","",64,null],[12,"XReadBitmapFile","","",64,null],[12,"XReadBitmapFileData","","",64,null],[12,"XRebindKeysym","","",64,null],[12,"XRecolorCursor","","",64,null],[12,"XReconfigureWMWindow","","",64,null],[12,"XRectInRegion","","",64,null],[12,"XRefreshKeyboardMapping","","",64,null],[12,"XRegisterIMInstantiateCallback","","",64,null],[12,"XRemoveConnectionWatch","","",64,null],[12,"XRemoveFromSaveSet","","",64,null],[12,"XRemoveHost","","",64,null],[12,"XRemoveHosts","","",64,null],[12,"XReparentWindow","","",64,null],[12,"XResetScreenSaver","","",64,null],[12,"XResizeWindow","","",64,null],[12,"XResourceManagerString","","",64,null],[12,"XRestackWindows","","",64,null],[12,"XrmCombineDatabase","","",64,null],[12,"XrmCombineFileDatabase","","",64,null],[12,"XrmDestroyDatabase","","",64,null],[12,"XrmEnumerateDatabase","","",64,null],[12,"XrmGetDatabase","","",64,null],[12,"XrmGetFileDatabase","","",64,null],[12,"XrmGetResource","","",64,null],[12,"XrmGetStringDatabase","","",64,null],[12,"XrmInitialize","","",64,null],[12,"XrmLocaleOfDatabase","","",64,null],[12,"XrmMergeDatabases","","",64,null],[12,"XrmParseCommand","","",64,null],[12,"XrmPermStringToQuark","","",64,null],[12,"XrmPutFileDatabase","","",64,null],[12,"XrmPutLineResource","","",64,null],[12,"XrmPutResource","","",64,null],[12,"XrmPutStringResource","","",64,null],[12,"XrmQGetResource","","",64,null],[12,"XrmQGetSearchList","","",64,null],[12,"XrmQGetSearchResource","","",64,null],[12,"XrmQPutResource","","",64,null],[12,"XrmQPutStringResource","","",64,null],[12,"XrmQuarkToString","","",64,null],[12,"XrmSetDatabase","","",64,null],[12,"XrmStringToBindingQuarkList","","",64,null],[12,"XrmStringToQuark","","",64,null],[12,"XrmStringToQuarkList","","",64,null],[12,"XrmUniqueQuark","","",64,null],[12,"XRootWindow","","",64,null],[12,"XRootWindowOfScreen","","",64,null],[12,"XRotateBuffers","","",64,null],[12,"XRotateWindowProperties","","",64,null],[12,"XSaveContext","","",64,null],[12,"XScreenCount","","",64,null],[12,"XScreenNumberOfScreen","","",64,null],[12,"XScreenOfDisplay","","",64,null],[12,"XScreenResourceString","","",64,null],[12,"XSelectInput","","",64,null],[12,"XSendEvent","","",64,null],[12,"XServerVendor","","",64,null],[12,"XSetAccessControl","","",64,null],[12,"XSetAfterFunction","","",64,null],[12,"XSetArcMode","","",64,null],[12,"XSetAuthorization","","",64,null],[12,"XSetBackground","","",64,null],[12,"XSetClassHint","","",64,null],[12,"XSetClipMask","","",64,null],[12,"XSetClipOrigin","","",64,null],[12,"XSetClipRectangles","","",64,null],[12,"XSetCloseDownMode","","",64,null],[12,"XSetCommand","","",64,null],[12,"XSetDashes","","",64,null],[12,"XSetErrorHandler","","",64,null],[12,"XSetFillRule","","",64,null],[12,"XSetFillStyle","","",64,null],[12,"XSetFont","","",64,null],[12,"XSetFontPath","","",64,null],[12,"XSetForeground","","",64,null],[12,"XSetFunction","","",64,null],[12,"XSetGraphicsExposures","","",64,null],[12,"XSetICFocus","","",64,null],[12,"XSetIconName","","",64,null],[12,"XSetIconSizes","","",64,null],[12,"XSetInputFocus","","",64,null],[12,"XSetIOErrorHandler","","",64,null],[12,"XSetLineAttributes","","",64,null],[12,"XSetLocaleModifiers","","",64,null],[12,"XSetModifierMapping","","",64,null],[12,"XSetNormalHints","","",64,null],[12,"XSetPlaneMask","","",64,null],[12,"XSetPointerMapping","","",64,null],[12,"XSetRegion","","",64,null],[12,"XSetRGBColormaps","","",64,null],[12,"XSetScreenSaver","","",64,null],[12,"XSetSelectionOwner","","",64,null],[12,"XSetSizeHints","","",64,null],[12,"XSetStandardColormap","","",64,null],[12,"XSetStandardProperties","","",64,null],[12,"XSetState","","",64,null],[12,"XSetStipple","","",64,null],[12,"XSetSubwindowMode","","",64,null],[12,"XSetTextProperty","","",64,null],[12,"XSetTile","","",64,null],[12,"XSetTransientForHint","","",64,null],[12,"XSetTSOrigin","","",64,null],[12,"XSetWindowBackground","","",64,null],[12,"XSetWindowBackgroundPixmap","","",64,null],[12,"XSetWindowBorder","","",64,null],[12,"XSetWindowBorderPixmap","","",64,null],[12,"XSetWindowBorderWidth","","",64,null],[12,"XSetWindowColormap","","",64,null],[12,"XSetWMClientMachine","","",64,null],[12,"XSetWMColormapWindows","","",64,null],[12,"XSetWMHints","","",64,null],[12,"XSetWMIconName","","",64,null],[12,"XSetWMName","","",64,null],[12,"XSetWMNormalHints","","",64,null],[12,"XSetWMProperties","","",64,null],[12,"XSetWMProtocols","","",64,null],[12,"XSetWMSizeHints","","",64,null],[12,"XSetZoomHints","","",64,null],[12,"XShrinkRegion","","",64,null],[12,"XStoreBuffer","","",64,null],[12,"XStoreBytes","","",64,null],[12,"XStoreColor","","",64,null],[12,"XStoreColors","","",64,null],[12,"XStoreName","","",64,null],[12,"XStoreNamedColor","","",64,null],[12,"XStringListToTextProperty","","",64,null],[12,"XStringToKeysym","","",64,null],[12,"XSubImage","","",64,null],[12,"XSubtractRegion","","",64,null],[12,"XSupportsLocale","","",64,null],[12,"XSync","","",64,null],[12,"XSynchronize","","",64,null],[12,"XTextExtents","","",64,null],[12,"XTextExtents16","","",64,null],[12,"XTextPropertyToStringList","","",64,null],[12,"XTextWidth","","",64,null],[12,"XTextWidth16","","",64,null],[12,"XTranslateCoordinates","","",64,null],[12,"XUndefineCursor","","",64,null],[12,"XUngrabButton","","",64,null],[12,"XUngrabKey","","",64,null],[12,"XUngrabKeyboard","","",64,null],[12,"XUngrabPointer","","",64,null],[12,"XUngrabServer","","",64,null],[12,"XUninstallColormap","","",64,null],[12,"XUnionRectWithRegion","","",64,null],[12,"XUnionRegion","","",64,null],[12,"XUnloadFont","","",64,null],[12,"XUnlockDisplay","","",64,null],[12,"XUnmapSubwindows","","",64,null],[12,"XUnmapWindow","","",64,null],[12,"XUnregisterIMInstantiateCallback","","",64,null],[12,"XUnsetICFocus","","",64,null],[12,"Xutf8DrawImageString","","",64,null],[12,"Xutf8DrawString","","",64,null],[12,"Xutf8DrawText","","",64,null],[12,"Xutf8LookupString","","",64,null],[12,"Xutf8ResetIC","","",64,null],[12,"Xutf8SetWMProperties","","",64,null],[12,"Xutf8TextEscapement","","",64,null],[12,"Xutf8TextExtents","","",64,null],[12,"Xutf8TextListToTextProperty","","",64,null],[12,"Xutf8TextPerCharExtents","","",64,null],[12,"Xutf8TextPropertyToTextList","","",64,null],[12,"XVendorRelease","","",64,null],[12,"XVisualIDFromVisual","","",64,null],[12,"XWarpPointer","","",64,null],[12,"XwcDrawImageString","","",64,null],[12,"XwcDrawString","","",64,null],[12,"XwcDrawText","","",64,null],[12,"XwcFreeStringList","","",64,null],[12,"XwcLookupString","","",64,null],[12,"XwcResetIC","","",64,null],[12,"XwcTextEscapement","","",64,null],[12,"XwcTextExtents","","",64,null],[12,"XwcTextListToTextProperty","","",64,null],[12,"XwcTextPerCharExtents","","",64,null],[12,"XwcTextPropertyToTextList","","",64,null],[12,"XWhitePixel","","",64,null],[12,"XWhitePixelOfScreen","","",64,null],[12,"XWidthMMOfScreen","","",64,null],[12,"XWidthOfScreen","","",64,null],[12,"XWindowEvent","","",64,null],[12,"XWithdrawWindow","","",64,null],[12,"XWMGeometry","","",64,null],[12,"XWriteBitmapFile","","",64,null],[12,"XXorRegion","","",64,null],[12,"XCreateIC","","",64,null],[12,"XCreateOC","","",64,null],[12,"XGetICValues","","",64,null],[12,"XGetIMValues","","",64,null],[12,"XGetOCValues","","",64,null],[12,"XGetOMValues","","",64,null],[12,"XSetICValues","","",64,null],[12,"XSetIMValues","","",64,null],[12,"XSetOCValues","","",64,null],[12,"XSetOMValues","","",64,null],[12,"XVaCreateNestedList","","",64,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",65,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"window","","",66,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"window","","",67,null],[12,"root","","",67,null],[12,"subwindow","","",67,null],[12,"time","","",67,null],[12,"x","","",67,null],[12,"y","","",67,null],[12,"x_root","","",67,null],[12,"y_root","","",67,null],[12,"state","","",67,null],[12,"button","","",67,null],[12,"same_screen","","",67,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"event","","",68,null],[12,"window","","",68,null],[12,"place","","",68,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",69,null],[12,"serial","","",69,null],[12,"send_event","","",69,null],[12,"display","","",69,null],[12,"parent","","",69,null],[12,"window","","",69,null],[12,"place","","",69,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",70,null],[12,"serial","","",70,null],[12,"send_event","","",70,null],[12,"display","","",70,null],[12,"window","","",70,null],[12,"message_type","","",70,null],[12,"format","","",70,null],[12,"data","","",70,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"window","","",71,null],[12,"colormap","","",71,null],[12,"new","","",71,null],[12,"state","","",71,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",72,null],[12,"serial","","",72,null],[12,"send_event","","",72,null],[12,"display","","",72,null],[12,"event","","",72,null],[12,"window","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"width","","",72,null],[12,"height","","",72,null],[12,"border_width","","",72,null],[12,"above","","",72,null],[12,"override_redirect","","",72,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",73,null],[12,"serial","","",73,null],[12,"send_event","","",73,null],[12,"display","","",73,null],[12,"parent","","",73,null],[12,"window","","",73,null],[12,"x","","",73,null],[12,"y","","",73,null],[12,"width","","",73,null],[12,"height","","",73,null],[12,"border_width","","",73,null],[12,"above","","",73,null],[12,"detail","","",73,null],[12,"value_mask","","",73,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",74,null],[12,"serial","","",74,null],[12,"send_event","","",74,null],[12,"display","","",74,null],[12,"parent","","",74,null],[12,"window","","",74,null],[12,"x","","",74,null],[12,"y","","",74,null],[12,"width","","",74,null],[12,"height","","",74,null],[12,"border_width","","",74,null],[12,"override_redirect","","",74,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",75,null],[12,"serial","","",75,null],[12,"send_event","","",75,null],[12,"display","","",75,null],[12,"window","","",75,null],[12,"root","","",75,null],[12,"subwindow","","",75,null],[12,"time","","",75,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"x_root","","",75,null],[12,"y_root","","",75,null],[12,"mode","","",75,null],[12,"detail","","",75,null],[12,"same_screen","","",75,null],[12,"focus","","",75,null],[12,"state","","",75,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"event","","",76,null],[12,"window","","",76,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",77,null],[12,"display","","",77,null],[12,"resourceid","","",77,null],[12,"serial","","",77,null],[12,"error_code","","",77,null],[12,"request_code","","",77,null],[12,"minor_code","","",77,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",78,null],[12,"serial","","",78,null],[12,"send_event","","",78,null],[12,"display","","",78,null],[12,"window","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[12,"count","","",78,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"window","","",79,null],[12,"mode","","",79,null],[12,"detail","","",79,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"drawable","","",80,null],[12,"x","","",80,null],[12,"y","","",80,null],[12,"width","","",80,null],[12,"height","","",80,null],[12,"count","","",80,null],[12,"major_code","","",80,null],[12,"minor_code","","",80,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",81,null],[12,"serial","","",81,null],[12,"send_event","","",81,null],[12,"display","","",81,null],[12,"event","","",81,null],[12,"window","","",81,null],[12,"x","","",81,null],[12,"y","","",81,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",82,null],[12,"serial","","",82,null],[12,"send_event","","",82,null],[12,"display","","",82,null],[12,"window","","",82,null],[12,"root","","",82,null],[12,"subwindow","","",82,null],[12,"time","","",82,null],[12,"x","","",82,null],[12,"y","","",82,null],[12,"x_root","","",82,null],[12,"y_root","","",82,null],[12,"state","","",82,null],[12,"keycode","","",82,null],[12,"same_screen","","",82,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",83,null],[12,"serial","","",83,null],[12,"send_event","","",83,null],[12,"display","","",83,null],[12,"window","","",83,null],[12,"key_vector","","",83,null],[3,"XMapEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"event","","",84,null],[12,"window","","",84,null],[12,"override_redirect","","",84,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",85,null],[12,"serial","","",85,null],[12,"send_event","","",85,null],[12,"display","","",85,null],[12,"event","","",85,null],[12,"request","","",85,null],[12,"first_keycode","","",85,null],[12,"count","","",85,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",86,null],[12,"serial","","",86,null],[12,"send_event","","",86,null],[12,"display","","",86,null],[12,"parent","","",86,null],[12,"window","","",86,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",87,null],[12,"serial","","",87,null],[12,"send_event","","",87,null],[12,"display","","",87,null],[12,"window","","",87,null],[12,"root","","",87,null],[12,"subwindow","","",87,null],[12,"time","","",87,null],[12,"x","","",87,null],[12,"y","","",87,null],[12,"x_root","","",87,null],[12,"y_root","","",87,null],[12,"state","","",87,null],[12,"is_hint","","",87,null],[12,"same_screen","","",87,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",88,null],[12,"serial","","",88,null],[12,"send_event","","",88,null],[12,"display","","",88,null],[12,"drawable","","",88,null],[12,"major_code","","",88,null],[12,"minor_code","","",88,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",89,null],[12,"serial","","",89,null],[12,"send_event","","",89,null],[12,"display","","",89,null],[12,"window","","",89,null],[12,"atom","","",89,null],[12,"time","","",89,null],[12,"state","","",89,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"event","","",90,null],[12,"window","","",90,null],[12,"parent","","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[12,"override_redirect","","",90,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"window","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",92,null],[12,"serial","","",92,null],[12,"send_event","","",92,null],[12,"display","","",92,null],[12,"window","","",92,null],[12,"selection","","",92,null],[12,"time","","",92,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",93,null],[12,"serial","","",93,null],[12,"send_event","","",93,null],[12,"display","","",93,null],[12,"requestor","","",93,null],[12,"selection","","",93,null],[12,"target","","",93,null],[12,"property","","",93,null],[12,"time","","",93,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"owner","","",94,null],[12,"requestor","","",94,null],[12,"selection","","",94,null],[12,"target","","",94,null],[12,"property","","",94,null],[12,"time","","",94,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",95,null],[12,"serial","","",95,null],[12,"send_event","","",95,null],[12,"display","","",95,null],[12,"event","","",95,null],[12,"window","","",95,null],[12,"from_configure","","",95,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"window","","",96,null],[12,"state","","",96,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",97,null],[12,"groups","","",97,null],[12,"num_si","","",97,null],[12,"size_si","","",97,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",98,null],[12,"flags","","",98,null],[12,"device_spec","","",98,null],[12,"min_key_code","","",98,null],[12,"max_key_code","","",98,null],[12,"ctrls","","",98,null],[12,"server","","",98,null],[12,"map","","",98,null],[12,"indicators","","",98,null],[12,"names","","",98,null],[12,"compat","","",98,null],[12,"geom","","",98,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",99,null],[12,"maps","","",99,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",100,null],[12,"alias","","",100,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",101,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",102,null],[12,"geometry","","",102,null],[12,"symbols","","",102,null],[12,"types","","",102,null],[12,"compat","","",102,null],[12,"vmods","","",102,null],[12,"indicators","","",102,null],[12,"groups","","",102,null],[12,"keys","","",102,null],[12,"key_aliases","","",102,null],[12,"radio_groups","","",102,null],[12,"phys_symbols","","",102,null],[12,"num_keys","","",102,null],[12,"num_key_aliases","","",102,null],[12,"num_rg","","",102,null],[3,"Depth","","",null,null],[12,"depth","","",103,null],[12,"nvisuals","","",103,null],[12,"visuals","","",103,null],[3,"Screen","","",null,null],[12,"ext_data","","",104,null],[12,"display","","",104,null],[12,"root","","",104,null],[12,"width","","",104,null],[12,"height","","",104,null],[12,"mwidth","","",104,null],[12,"mheight","","",104,null],[12,"ndepths","","",104,null],[12,"depths","","",104,null],[12,"root_depth","","",104,null],[12,"root_visual","","",104,null],[12,"default_gc","","",104,null],[12,"cmap","","",104,null],[12,"white_pixel","","",104,null],[12,"black_pixel","","",104,null],[12,"max_maps","","",104,null],[12,"min_maps","","",104,null],[12,"backing_store","","",104,null],[12,"save_unders","","",104,null],[12,"root_input_mask","","",104,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",105,null],[12,"depth","","",105,null],[12,"bits_per_pixel","","",105,null],[12,"scanline_pad","","",105,null],[3,"Visual","","",null,null],[12,"ext_data","","",106,null],[12,"visualid","","",106,null],[12,"class","","",106,null],[12,"red_mask","","",106,null],[12,"green_mask","","",106,null],[12,"blue_mask","","",106,null],[12,"bits_per_rgb","","",106,null],[12,"map_entries","","",106,null],[3,"XArc","","",null,null],[12,"x","","",107,null],[12,"y","","",107,null],[12,"width","","",107,null],[12,"height","","",107,null],[12,"angle1","","",107,null],[12,"angle2","","",107,null],[3,"XChar2b","","",null,null],[12,"byte1","","",108,null],[12,"byte2","","",108,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",109,null],[12,"rbearing","","",109,null],[12,"width","","",109,null],[12,"ascent","","",109,null],[12,"descent","","",109,null],[12,"attributes","","",109,null],[3,"XClassHint","","",null,null],[12,"res_name","","",110,null],[12,"res_class","","",110,null],[3,"XColor","","",null,null],[12,"pixel","","",111,null],[12,"red","","",111,null],[12,"green","","",111,null],[12,"blue","","",111,null],[12,"flags","","",111,null],[12,"pad","","",111,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",112,null],[12,"chars_matched","","",112,null],[3,"XExtCodes","","",null,null],[12,"extension","","",113,null],[12,"major_opcode","","",113,null],[12,"first_event","","",113,null],[12,"first_error","","",113,null],[3,"XExtData","","",null,null],[12,"number","","",114,null],[12,"next","","",114,null],[12,"free_private","","",114,null],[12,"private_data","","",114,null],[3,"XFontProp","","",null,null],[12,"name","","",115,null],[12,"card32","","",115,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",116,null],[12,"max_logical_extent","","",116,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",117,null],[12,"fid","","",117,null],[12,"direction","","",117,null],[12,"min_char_or_byte2","","",117,null],[12,"max_char_or_byte2","","",117,null],[12,"min_byte1","","",117,null],[12,"max_byte1","","",117,null],[12,"all_chars_exist","","",117,null],[12,"default_char","","",117,null],[12,"n_properties","","",117,null],[12,"properties","","",117,null],[12,"min_bounds","","",117,null],[12,"max_bounds","","",117,null],[12,"per_char","","",117,null],[12,"ascent","","",117,null],[12,"descent","","",117,null],[3,"XGCValues","","",null,null],[12,"function","","",118,null],[12,"plane_mask","","",118,null],[12,"foreground","","",118,null],[12,"background","","",118,null],[12,"line_width","","",118,null],[12,"line_style","","",118,null],[12,"cap_style","","",118,null],[12,"join_style","","",118,null],[12,"fill_style","","",118,null],[12,"fill_rule","","",118,null],[12,"arc_mode","","",118,null],[12,"tile","","",118,null],[12,"stipple","","",118,null],[12,"ts_x_origin","","",118,null],[12,"ts_y_origin","","",118,null],[12,"font","","",118,null],[12,"subwindow_mode","","",118,null],[12,"graphics_exposures","","",118,null],[12,"clip_x_origin","","",118,null],[12,"clip_y_origin","","",118,null],[12,"clip_mask","","",118,null],[12,"dash_offset","","",118,null],[12,"dashes","","",118,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"extension","","",119,null],[12,"evtype","","",119,null],[12,"cookie","","",119,null],[12,"data","","",119,null],[3,"XHostAddress","","",null,null],[12,"family","","",120,null],[12,"length","","",120,null],[12,"address","","",120,null],[3,"XIconSize","","",null,null],[12,"min_width","","",121,null],[12,"min_height","","",121,null],[12,"max_width","","",121,null],[12,"max_height","","",121,null],[12,"width_inc","","",121,null],[12,"height_inc","","",121,null],[3,"XImage","","",null,null],[12,"width","","",122,null],[12,"height","","",122,null],[12,"xoffset","","",122,null],[12,"format","","",122,null],[12,"data","","",122,null],[12,"byte_order","","",122,null],[12,"bitmap_unit","","",122,null],[12,"bitmap_bit_order","","",122,null],[12,"bitmap_pad","","",122,null],[12,"depth","","",122,null],[12,"bytes_per_line","","",122,null],[12,"bits_per_pixel","","",122,null],[12,"red_mask","","",122,null],[12,"green_mask","","",122,null],[12,"blue_mask","","",122,null],[12,"obdata","","",122,null],[12,"funcs","","",122,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",123,null],[12,"bell_percent","","",123,null],[12,"bell_pitch","","",123,null],[12,"bell_duration","","",123,null],[12,"led","","",123,null],[12,"led_mode","","",123,null],[12,"key","","",123,null],[12,"auto_repeat_mode","","",123,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",124,null],[12,"bell_percent","","",124,null],[12,"bell_pitch","","",124,null],[12,"bell_duration","","",124,null],[12,"led_mask","","",124,null],[12,"global_auto_repeat","","",124,null],[12,"auto_repeats","","",124,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",125,null],[12,"nchars","","",125,null],[12,"delta","","",125,null],[12,"font_set","","",125,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",126,null],[12,"modifiermap","","",126,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",127,null],[12,"charset_list","","",127,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",128,null],[12,"bits_per_pixel","","",128,null],[12,"scanline_pad","","",128,null],[3,"XPoint","","",null,null],[12,"x","","",129,null],[12,"y","","",129,null],[3,"XRectangle","","",null,null],[12,"x","","",130,null],[12,"y","","",130,null],[12,"width","","",130,null],[12,"height","","",130,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",131,null],[12,"specifier","","",131,null],[12,"argKind","","",131,null],[12,"value","","",131,null],[3,"XrmValue","","",null,null],[12,"size","","",132,null],[12,"addr","","",132,null],[3,"XSegment","","",null,null],[12,"x1","","",133,null],[12,"y1","","",133,null],[12,"x2","","",133,null],[12,"y2","","",133,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",134,null],[12,"background_pixel","","",134,null],[12,"border_pixmap","","",134,null],[12,"border_pixel","","",134,null],[12,"bit_gravity","","",134,null],[12,"win_gravity","","",134,null],[12,"backing_store","","",134,null],[12,"backing_planes","","",134,null],[12,"backing_pixel","","",134,null],[12,"save_under","","",134,null],[12,"event_mask","","",134,null],[12,"do_not_propagate_mask","","",134,null],[12,"override_redirect","","",134,null],[12,"colormap","","",134,null],[12,"cursor","","",134,null],[3,"XSizeHints","","",null,null],[12,"flags","","",135,null],[12,"x","","",135,null],[12,"y","","",135,null],[12,"width","","",135,null],[12,"height","","",135,null],[12,"min_width","","",135,null],[12,"min_height","","",135,null],[12,"max_width","","",135,null],[12,"max_height","","",135,null],[12,"width_inc","","",135,null],[12,"height_inc","","",135,null],[12,"min_aspect","","",135,null],[12,"max_aspect","","",135,null],[12,"base_width","","",135,null],[12,"base_height","","",135,null],[12,"win_gravity","","",135,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",136,null],[12,"red_max","","",136,null],[12,"red_mult","","",136,null],[12,"green_max","","",136,null],[12,"green_mult","","",136,null],[12,"blue_max","","",136,null],[12,"blue_mult","","",136,null],[12,"base_pixel","","",136,null],[12,"visualid","","",136,null],[12,"killid","","",136,null],[3,"XTextItem","","",null,null],[12,"chars","","",137,null],[12,"nchars","","",137,null],[12,"delta","","",137,null],[12,"font","","",137,null],[3,"XTextItem16","","",null,null],[12,"chars","","",138,null],[12,"nchars","","",138,null],[12,"delta","","",138,null],[12,"font","","",138,null],[3,"XTextProperty","","",null,null],[12,"value","","",139,null],[12,"encoding","","",139,null],[12,"format","","",139,null],[12,"nitems","","",139,null],[3,"XTimeCoord","","",null,null],[12,"time","","",140,null],[12,"x","","",140,null],[12,"y","","",140,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",141,null],[12,"visualid","","",141,null],[12,"screen","","",141,null],[12,"depth","","",141,null],[12,"class","","",141,null],[12,"red_mask","","",141,null],[12,"green_mask","","",141,null],[12,"blue_mask","","",141,null],[12,"colormap_size","","",141,null],[12,"bits_per_rgb","","",141,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",142,null],[12,"nchars","","",142,null],[12,"delta","","",142,null],[12,"font_set","","",142,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",143,null],[12,"y","","",143,null],[12,"width","","",143,null],[12,"height","","",143,null],[12,"border_width","","",143,null],[12,"depth","","",143,null],[12,"visual","","",143,null],[12,"root","","",143,null],[12,"class","","",143,null],[12,"bit_gravity","","",143,null],[12,"win_gravity","","",143,null],[12,"backing_store","","",143,null],[12,"backing_planes","","",143,null],[12,"backing_pixel","","",143,null],[12,"save_under","","",143,null],[12,"colormap","","",143,null],[12,"map_installed","","",143,null],[12,"map_state","","",143,null],[12,"all_event_masks","","",143,null],[12,"your_event_mask","","",143,null],[12,"do_not_propagate_mask","","",143,null],[12,"override_redirect","","",143,null],[12,"screen","","",143,null],[3,"XWindowChanges","","",null,null],[12,"x","","",144,null],[12,"y","","",144,null],[12,"width","","",144,null],[12,"height","","",144,null],[12,"border_width","","",144,null],[12,"sibling","","",144,null],[12,"stack_mode","","",144,null],[3,"XWMHints","","",null,null],[12,"flags","","",145,null],[12,"input","","",145,null],[12,"initial_state","","",145,null],[12,"icon_pixmap","","",145,null],[12,"icon_window","","",145,null],[12,"icon_x","","",145,null],[12,"icon_y","","",145,null],[12,"icon_mask","","",145,null],[12,"window_group","","",145,null],[3,"AspectRatio","","",null,null],[12,"x","","",146,null],[12,"y","","",146,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",147,null],[12,"destroy_image","","",147,null],[12,"get_pixel","","",147,null],[12,"put_pixel","","",147,null],[12,"sub_image","","",147,null],[12,"add_pixel","","",147,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[0,"xkb","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[11,"open","","",64,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"xevent"}}],[11,"get_type","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"c_int"}}],[11,"from","","",65,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"eq","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",66,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"eq","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",67,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",68,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",69,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",70,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",71,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",72,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",73,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",74,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",75,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",76,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",78,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",79,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",80,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",81,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",82,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",83,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"eq","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",85,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",86,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",87,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",88,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",89,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",92,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",93,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",94,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",95,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"_xkbdesc"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"_xkbkeynamerec"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"_xkbnamesrec"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"eq","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"screenformat"}],"output":{"name":"screenformat"}}],[11,"eq","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"eq","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"xarc"}],"output":{"name":"xarc"}}],[11,"eq","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"xchar2b"}],"output":{"name":"xchar2b"}}],[11,"eq","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"xcharstruct"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"xclasshint"}],"output":{"name":"xclasshint"}}],[11,"eq","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"xcolor"}],"output":{"name":"xcolor"}}],[11,"eq","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"xcomposestatus"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"xextcodes"}],"output":{"name":"xextcodes"}}],[11,"eq","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"xfontprop"}],"output":{"name":"xfontprop"}}],[11,"eq","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"xfontsetextents"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"xfontstruct"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"xgcvalues"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",119,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"xhostaddress"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"xiconsize"}],"output":{"name":"xiconsize"}}],[11,"eq","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"ximage"}],"output":{"name":"ximage"}}],[11,"eq","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"xkeyboardcontrol"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"xkeyboardstate"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"xmbtextitem"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"xmodifierkeymap"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"xomcharsetlist"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"xpixmapformatvalues"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"xpoint"}],"output":{"name":"xpoint"}}],[11,"eq","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"xrectangle"}],"output":{"name":"xrectangle"}}],[11,"eq","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"xrmoptiondescrec"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"xrmvalue"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"xsegment"}],"output":{"name":"xsegment"}}],[11,"eq","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"xsetwindowattributes"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"xsizehints"}],"output":{"name":"xsizehints"}}],[11,"eq","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"xstandardcolormap"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"xtextitem"}],"output":{"name":"xtextitem"}}],[11,"eq","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"xtextitem16"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"xtextproperty"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"xtimecoord"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"xvisualinfo"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"xwctextitem"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"xwindowattributes"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"xwindowchanges"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"xwmhints"}],"output":{"name":"xwmhints"}}],[11,"eq","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"aspectratio"}],"output":{"name":"aspectratio"}}],[11,"eq","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"new","","",148,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"get_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_char"}}],[11,"get_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_long"}}],[11,"get_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_short"}}],[11,"set_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_char"}],"output":null}],[11,"set_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_long"}],"output":null}],[11,"set_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_short"}],"output":null}],[11,"clone","","",147,{"inputs":[{"name":"imagefns"}],"output":{"name":"imagefns"}}],[11,"eq","","",147,{"inputs":[{"name":"imagefns"},{"name":"imagefns"}],"output":{"name":"bool"}}],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",149,null],[12,"XmuAddInitializer","","",149,null],[12,"XmuAllStandardColormaps","","",149,null],[12,"XmuAppendSegment","","",149,null],[12,"XmuAreaAnd","","",149,null],[12,"XmuAreaCopy","","",149,null],[12,"XmuAreaDup","","",149,null],[12,"XmuAreaNot","","",149,null],[12,"XmuAreaOrXor","","",149,null],[12,"XmuCallInitializers","","",149,null],[12,"XmuClientWindow","","",149,null],[12,"XmuCompareISOLatin1","","",149,null],[12,"XmuConvertStandardSelection","","",149,null],[12,"XmuCopyISOLatin1Lowered","","",149,null],[12,"XmuCopyISOLatin1Uppered","","",149,null],[12,"XmuCreateColormap","","",149,null],[12,"XmuCreatePixmapFromBitmap","","",149,null],[12,"XmuCreateStippledPixmap","","",149,null],[12,"XmuCursorNameToIndex","","",149,null],[12,"XmuCvtBackingStoreToString","","",149,null],[12,"XmuCvtFunctionToCallback","","",149,null],[12,"XmuCvtGravityToString","","",149,null],[12,"XmuCvtJustifyToString","","",149,null],[12,"XmuCvtLongToString","","",149,null],[12,"XmuCvtOrientationToString","","",149,null],[12,"XmuCvtShapeStyleToString","","",149,null],[12,"XmuCvtStringToBackingStore","","",149,null],[12,"XmuCvtStringToBitmap","","",149,null],[12,"XmuCvtStringToColorCursor","","",149,null],[12,"XmuCvtStringToCursor","","",149,null],[12,"XmuCvtStringToGravity","","",149,null],[12,"XmuCvtStringToJustify","","",149,null],[12,"XmuCvtStringToLong","","",149,null],[12,"XmuCvtStringToOrientation","","",149,null],[12,"XmuCvtStringToShapeStyle","","",149,null],[12,"XmuCvtStringToWidget","","",149,null],[12,"XmuCvtWidgetToString","","",149,null],[12,"XmuDeleteStandardColormap","","",149,null],[12,"XmuDestroyScanlineList","","",149,null],[12,"XmuDestroySegmentList","","",149,null],[12,"XmuDistinguishableColors","","",149,null],[12,"XmuDistinguishablePixels","","",149,null],[12,"XmuDQAddDisplay","","",149,null],[12,"XmuDQCreate","","",149,null],[12,"XmuDQDestroy","","",149,null],[12,"XmuDQLookupDisplay","","",149,null],[12,"XmuDQRemoveDisplay","","",149,null],[12,"XmuDrawLogo","","",149,null],[12,"XmuDrawRoundedRectangle","","",149,null],[12,"XmuFillRoundedRectangle","","",149,null],[12,"XmuGetAtomName","","",149,null],[12,"XmuGetColormapAllocation","","",149,null],[12,"XmuGetHostname","","",149,null],[12,"XmuInternAtom","","",149,null],[12,"XmuInternStrings","","",149,null],[12,"XmuLocateBitmapFile","","",149,null],[12,"XmuLocatePixmapFile","","",149,null],[12,"XmuLookupAPL","","",149,null],[12,"XmuLookupArabic","","",149,null],[12,"XmuLookupCloseDisplayHook","","",149,null],[12,"XmuLookupCyrillic","","",149,null],[12,"XmuLookupGreek","","",149,null],[12,"XmuLookupHebrew","","",149,null],[12,"XmuLookupJISX0201","","",149,null],[12,"XmuLookupKana","","",149,null],[12,"XmuLookupLatin1","","",149,null],[12,"XmuLookupLatin2","","",149,null],[12,"XmuLookupLatin3","","",149,null],[12,"XmuLookupLatin4","","",149,null],[12,"XmuLookupStandardColormap","","",149,null],[12,"XmuLookupString","","",149,null],[12,"XmuMakeAtom","","",149,null],[12,"XmuNameOfAtom","","",149,null],[12,"XmuNCopyISOLatin1Lowered","","",149,null],[12,"XmuNCopyISOLatin1Uppered","","",149,null],[12,"XmuNewArea","","",149,null],[12,"XmuNewCvtStringToWidget","","",149,null],[12,"XmuNewScanline","","",149,null],[12,"XmuNewSegment","","",149,null],[12,"XmuOptimizeArea","","",149,null],[12,"XmuOptimizeScanline","","",149,null],[12,"XmuPrintDefaultErrorMessage","","",149,null],[12,"XmuReadBitmapData","","",149,null],[12,"XmuReadBitmapDataFromFile","","",149,null],[12,"XmuRegisterExternalAgent","","",149,null],[12,"XmuReleaseStippledPixmap","","",149,null],[12,"XmuRemoveCloseDisplayHook","","",149,null],[12,"XmuReshapeWidget","","",149,null],[12,"XmuScanlineAnd","","",149,null],[12,"XmuScanlineAndSegment","","",149,null],[12,"XmuScanlineCopy","","",149,null],[12,"XmuScanlineEqu","","",149,null],[12,"XmuScanlineNot","","",149,null],[12,"XmuScanlineOr","","",149,null],[12,"XmuScanlineOrSegment","","",149,null],[12,"XmuScanlineXor","","",149,null],[12,"XmuScanlineXorSegment","","",149,null],[12,"XmuScreenOfWindow","","",149,null],[12,"XmuSimpleErrorHandler","","",149,null],[12,"XmuStandardColormap","","",149,null],[12,"XmuUpdateMapHints","","",149,null],[12,"XmuValidArea","","",149,null],[12,"XmuValidScanline","","",149,null],[12,"XmuVisualStandardColormaps","","",149,null],[12,"XmuWnCountOwnedResources","","",149,null],[12,"XmuWnFetchResources","","",149,null],[12,"XmuWnInitializeNodes","","",149,null],[12,"XmuWnNameToNode","","",149,null],[12,"XmuSnprintf","","",149,null],[12,"_XA_ATOM_PAIR","","",149,null],[12,"_XA_CHARACTER_POSITION","","",149,null],[12,"_XA_CLASS","","",149,null],[12,"_XA_CLIENT_WINDOW","","",149,null],[12,"_XA_CLIPBOARD","","",149,null],[12,"_XA_COMPOUND_TEXT","","",149,null],[12,"_XA_DECNET_ADDRESS","","",149,null],[12,"_XA_DELETE","","",149,null],[12,"_XA_FILENAME","","",149,null],[12,"_XA_HOSTNAME","","",149,null],[12,"_XA_IP_ADDRESS","","",149,null],[12,"_XA_LENGTH","","",149,null],[12,"_XA_LIST_LENGTH","","",149,null],[12,"_XA_NAME","","",149,null],[12,"_XA_NET_ADDRESS","","",149,null],[12,"_XA_NULL","","",149,null],[12,"_XA_OWNER_OS","","",149,null],[12,"_XA_SPAN","","",149,null],[12,"_XA_TARGETS","","",149,null],[12,"_XA_TEXT","","",149,null],[12,"_XA_TIMESTAMP","","",149,null],[12,"_XA_USER","","",149,null],[12,"_XA_UTF8_STRING","","",149,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",149,{"inputs":[],"output":{"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",150,null],[12,"XRecordCreateContext","","",150,null],[12,"XRecordDisableContext","","",150,null],[12,"XRecordEnableContext","","",150,null],[12,"XRecordEnableContextAsync","","",150,null],[12,"XRecordFreeContext","","",150,null],[12,"XRecordFreeData","","",150,null],[12,"XRecordFreeState","","",150,null],[12,"XRecordGetContext","","",150,null],[12,"XRecordIdBaseMask","","",150,null],[12,"XRecordProcessReplies","","",150,null],[12,"XRecordQueryVersion","","",150,null],[12,"XRecordRegisterClients","","",150,null],[12,"XRecordUnregisterClients","","",150,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",151,null],[12,"nranges","","",151,null],[12,"ranges","","",151,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",152,null],[12,"ext_minor","","",152,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",153,null],[12,"server_time","","",153,null],[12,"client_seq","","",153,null],[12,"category","","",153,null],[12,"client_swapped","","",153,null],[12,"data","","",153,null],[12,"data_len","","",153,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",154,null],[12,"core_replies","","",154,null],[12,"ext_requests","","",154,null],[12,"ext_replies","","",154,null],[12,"delivered_events","","",154,null],[12,"device_events","","",154,null],[12,"errors","","",154,null],[12,"client_started","","",154,null],[12,"client_died","","",154,null],[3,"XRecordRange8","","",null,null],[12,"first","","",155,null],[12,"last","","",155,null],[3,"XRecordRange16","","",null,null],[12,"first","","",156,null],[12,"last","","",156,null],[3,"XRecordState","","",null,null],[12,"enabled","","",157,null],[12,"datum_flags","","",157,null],[12,"nclients","","",157,null],[12,"client_info","","",157,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[17,"XRecordFromServerTime","","",null,null],[17,"XRecordFromClientTime","","",null,null],[17,"XRecordFromClientSequence","","",null,null],[17,"XRecordCurrentClients","","",null,null],[17,"XRecordFutureClients","","",null,null],[17,"XRecordAllClients","","",null,null],[17,"XRecordFromServer","","",null,null],[17,"XRecordFromClient","","",null,null],[17,"XRecordClientStarted","","",null,null],[17,"XRecordClientDied","","",null,null],[17,"XRecordStartOfData","","",null,null],[17,"XRecordEndOfData","","",null,null],[11,"open","","",150,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"xrecordclientinfo"}],"output":{"name":"xrecordclientinfo"}}],[11,"eq","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"xrecordextrange"}],"output":{"name":"xrecordextrange"}}],[11,"eq","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"xrecordinterceptdata"}],"output":{"name":"xrecordinterceptdata"}}],[11,"eq","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"xrecordrange"}],"output":{"name":"xrecordrange"}}],[11,"eq","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"xrecordrange8"}],"output":{"name":"xrecordrange8"}}],[11,"eq","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"xrecordrange16"}],"output":{"name":"xrecordrange16"}}],[11,"eq","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"xrecordstate"}],"output":{"name":"xrecordstate"}}],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",158,null],[12,"XRenderAddTraps","","",158,null],[12,"XRenderChangePicture","","",158,null],[12,"XRenderComposite","","",158,null],[12,"XRenderCompositeDoublePoly","","",158,null],[12,"XRenderCompositeString16","","",158,null],[12,"XRenderCompositeString32","","",158,null],[12,"XRenderCompositeString8","","",158,null],[12,"XRenderCompositeText16","","",158,null],[12,"XRenderCompositeText32","","",158,null],[12,"XRenderCompositeText8","","",158,null],[12,"XRenderCompositeTrapezoids","","",158,null],[12,"XRenderCompositeTriangles","","",158,null],[12,"XRenderCompositeTriFan","","",158,null],[12,"XRenderCompositeTriStrip","","",158,null],[12,"XRenderCreateAnimCursor","","",158,null],[12,"XRenderCreateConicalGradient","","",158,null],[12,"XRenderCreateCursor","","",158,null],[12,"XRenderCreateGlyphSet","","",158,null],[12,"XRenderCreateLinearGradient","","",158,null],[12,"XRenderCreatePicture","","",158,null],[12,"XRenderCreateRadialGradient","","",158,null],[12,"XRenderCreateSolidFill","","",158,null],[12,"XRenderFillRectangle","","",158,null],[12,"XRenderFillRectangles","","",158,null],[12,"XRenderFindFormat","","",158,null],[12,"XRenderFindStandardFormat","","",158,null],[12,"XRenderFindVisualFormat","","",158,null],[12,"XRenderFreeGlyphs","","",158,null],[12,"XRenderFreeGlyphSet","","",158,null],[12,"XRenderFreePicture","","",158,null],[12,"XRenderParseColor","","",158,null],[12,"XRenderQueryExtension","","",158,null],[12,"XRenderQueryFilters","","",158,null],[12,"XRenderQueryFormats","","",158,null],[12,"XRenderQueryPictIndexValues","","",158,null],[12,"XRenderQuerySubpixelOrder","","",158,null],[12,"XRenderQueryVersion","","",158,null],[12,"XRenderReferenceGlyphSet","","",158,null],[12,"XRenderSetPictureClipRectangles","","",158,null],[12,"XRenderSetPictureClipRegion","","",158,null],[12,"XRenderSetPictureFilter","","",158,null],[12,"XRenderSetPictureTransform","","",158,null],[12,"XRenderSetSubpixelOrder","","",158,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",159,null],[12,"delay","","",159,null],[3,"_XCircle","","",null,null],[12,"x","","",160,null],[12,"y","","",160,null],[12,"radius","","",160,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",161,null],[12,"angle","","",161,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",162,null],[12,"filter","","",162,null],[12,"nalias","","",162,null],[12,"alias","","",162,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",163,null],[12,"chars","","",163,null],[12,"nchars","","",163,null],[12,"xOff","","",163,null],[12,"yOff","","",163,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",164,null],[12,"chars","","",164,null],[12,"nchars","","",164,null],[12,"xOff","","",164,null],[12,"yOff","","",164,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",165,null],[12,"chars","","",165,null],[12,"nchars","","",165,null],[12,"xOff","","",165,null],[12,"yOff","","",165,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",166,null],[12,"height","","",166,null],[12,"x","","",166,null],[12,"y","","",166,null],[12,"xOff","","",166,null],[12,"yOff","","",166,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",167,null],[12,"red","","",167,null],[12,"green","","",167,null],[12,"blue","","",167,null],[12,"alpha","","",167,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",168,null],[12,"p2","","",168,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",169,null],[12,"p2","","",169,null],[3,"_XPointDouble","","",null,null],[12,"x","","",170,null],[12,"y","","",170,null],[3,"_XPointFixed","","",null,null],[12,"x","","",171,null],[12,"y","","",171,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",172,null],[12,"outer","","",172,null],[3,"XRenderColor","","",null,null],[12,"red","","",173,null],[12,"green","","",173,null],[12,"blue","","",173,null],[12,"alpha","","",173,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",174,null],[12,"redMask","","",174,null],[12,"green","","",174,null],[12,"greenMask","","",174,null],[12,"blue","","",174,null],[12,"blueMask","","",174,null],[12,"alpha","","",174,null],[12,"alphaMask","","",174,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",175,null],[12,"type_","","",175,null],[12,"depth","","",175,null],[12,"direct","","",175,null],[12,"colormap","","",175,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",176,null],[12,"alpha_map","","",176,null],[12,"alpha_x_origin","","",176,null],[12,"alpha_y_origin","","",176,null],[12,"clip_x_origin","","",176,null],[12,"clip_y_origin","","",176,null],[12,"clip_mask","","",176,null],[12,"graphics_exposures","","",176,null],[12,"subwindow_mode","","",176,null],[12,"poly_edge","","",176,null],[12,"poly_mode","","",176,null],[12,"dither","","",176,null],[12,"component_alpha","","",176,null],[3,"_XSpanFix","","",null,null],[12,"left","","",177,null],[12,"right","","",177,null],[12,"y","","",177,null],[3,"_XTrap","","",null,null],[12,"top","","",178,null],[12,"bottom","","",178,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",179,null],[12,"bottom","","",179,null],[12,"left","","",179,null],[12,"right","","",179,null],[3,"_XTriangle","","",null,null],[12,"p1","","",180,null],[12,"p2","","",180,null],[12,"p3","","",180,null],[3,"_XTransform","","",null,null],[12,"matrix","","",181,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[11,"open","","",158,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"_xanimcursor"}],"output":{"name":"_xanimcursor"}}],[11,"clone","","",160,{"inputs":[{"name":"_xcircle"}],"output":{"name":"_xcircle"}}],[11,"clone","","",161,{"inputs":[{"name":"_xconicalgradient"}],"output":{"name":"_xconicalgradient"}}],[11,"clone","","",162,{"inputs":[{"name":"_xfilters"}],"output":{"name":"_xfilters"}}],[11,"clone","","",163,{"inputs":[{"name":"_xglyphelt8"}],"output":{"name":"_xglyphelt8"}}],[11,"clone","","",164,{"inputs":[{"name":"_xglyphelt16"}],"output":{"name":"_xglyphelt16"}}],[11,"clone","","",165,{"inputs":[{"name":"_xglyphelt32"}],"output":{"name":"_xglyphelt32"}}],[11,"clone","","",166,{"inputs":[{"name":"_xglyphinfo"}],"output":{"name":"_xglyphinfo"}}],[11,"clone","","",167,{"inputs":[{"name":"_xindexvalue"}],"output":{"name":"_xindexvalue"}}],[11,"clone","","",168,{"inputs":[{"name":"_xlineargradient"}],"output":{"name":"_xlineargradient"}}],[11,"clone","","",169,{"inputs":[{"name":"_xlinefixed"}],"output":{"name":"_xlinefixed"}}],[11,"clone","","",170,{"inputs":[{"name":"_xpointdouble"}],"output":{"name":"_xpointdouble"}}],[11,"clone","","",171,{"inputs":[{"name":"_xpointfixed"}],"output":{"name":"_xpointfixed"}}],[11,"clone","","",172,{"inputs":[{"name":"_xradialgradient"}],"output":{"name":"_xradialgradient"}}],[11,"clone","","",173,{"inputs":[{"name":"xrendercolor"}],"output":{"name":"xrendercolor"}}],[11,"clone","","",174,{"inputs":[{"name":"xrenderdirectformat"}],"output":{"name":"xrenderdirectformat"}}],[11,"clone","","",175,{"inputs":[{"name":"xrenderpictformat"}],"output":{"name":"xrenderpictformat"}}],[11,"clone","","",176,{"inputs":[{"name":"_xrenderpictureattributes"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"clone","","",177,{"inputs":[{"name":"_xspanfix"}],"output":{"name":"_xspanfix"}}],[11,"clone","","",178,{"inputs":[{"name":"_xtrap"}],"output":{"name":"_xtrap"}}],[11,"clone","","",179,{"inputs":[{"name":"_xtrapezoid"}],"output":{"name":"_xtrapezoid"}}],[11,"clone","","",180,{"inputs":[{"name":"_xtriangle"}],"output":{"name":"_xtriangle"}}],[11,"clone","","",181,{"inputs":[{"name":"_xtransform"}],"output":{"name":"_xtransform"}}],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",182,null],[12,"XtAddCallback","","",182,null],[12,"XtAddCallbacks","","",182,null],[12,"XtAddConverter","","",182,null],[12,"XtAddEventHandler","","",182,null],[12,"XtAddExposureToRegion","","",182,null],[12,"XtAddGrab","","",182,null],[12,"XtAddInput","","",182,null],[12,"XtAddRawEventHandler","","",182,null],[12,"XtAddSignal","","",182,null],[12,"XtAddTimeOut","","",182,null],[12,"XtAddWorkProc","","",182,null],[12,"XtAllocateGC","","",182,null],[12,"XtAppAddActionHook","","",182,null],[12,"XtAppAddActions","","",182,null],[12,"XtAppAddBlockHook","","",182,null],[12,"XtAppAddConverter","","",182,null],[12,"XtAppAddInput","","",182,null],[12,"XtAppAddSignal","","",182,null],[12,"XtAppAddTimeOut","","",182,null],[12,"XtAppAddWorkProc","","",182,null],[12,"XtAppCreateShell","","",182,null],[12,"XtAppError","","",182,null],[12,"XtAppErrorMsg","","",182,null],[12,"XtAppGetErrorDatabase","","",182,null],[12,"XtAppGetErrorDatabaseText","","",182,null],[12,"XtAppGetExitFlag","","",182,null],[12,"XtAppGetSelectionTimeout","","",182,null],[12,"XtAppInitialize","","",182,null],[12,"XtAppLock","","",182,null],[12,"XtAppMainLoop","","",182,null],[12,"XtAppNextEvent","","",182,null],[12,"XtAppPeekEvent","","",182,null],[12,"XtAppPending","","",182,null],[12,"XtAppProcessEvent","","",182,null],[12,"XtAppReleaseCacheRefs","","",182,null],[12,"XtAppSetErrorHandler","","",182,null],[12,"XtAppSetErrorMsgHandler","","",182,null],[12,"XtAppSetExitFlag","","",182,null],[12,"XtAppSetFallbackResources","","",182,null],[12,"XtAppSetSelectionTimeout","","",182,null],[12,"XtAppSetTypeConverter","","",182,null],[12,"XtAppSetWarningHandler","","",182,null],[12,"XtAppSetWarningMsgHandler","","",182,null],[12,"XtAppUnlock","","",182,null],[12,"XtAppWarning","","",182,null],[12,"XtAppWarningMsg","","",182,null],[12,"XtAugmentTranslations","","",182,null],[12,"XtBuildEventMask","","",182,null],[12,"XtCallAcceptFocus","","",182,null],[12,"XtCallActionProc","","",182,null],[12,"XtCallbackExclusive","","",182,null],[12,"XtCallbackNone","","",182,null],[12,"XtCallbackNonexclusive","","",182,null],[12,"XtCallbackPopdown","","",182,null],[12,"XtCallbackReleaseCacheRef","","",182,null],[12,"XtCallbackReleaseCacheRefList","","",182,null],[12,"XtCallCallbackList","","",182,null],[12,"XtCallCallbacks","","",182,null],[12,"XtCallConverter","","",182,null],[12,"XtCalloc","","",182,null],[12,"XtCancelSelectionRequest","","",182,null],[12,"XtChangeManagedSet","","",182,null],[12,"XtClass","","",182,null],[12,"XtCloseDisplay","","",182,null],[12,"XtConfigureWidget","","",182,null],[12,"XtConvert","","",182,null],[12,"XtConvertAndStore","","",182,null],[12,"XtConvertCase","","",182,null],[12,"XtCreateApplicationContext","","",182,null],[12,"XtCreateApplicationShell","","",182,null],[12,"XtCreateManagedWidget","","",182,null],[12,"XtCreatePopupShell","","",182,null],[12,"XtCreateSelectionRequest","","",182,null],[12,"XtCreateWidget","","",182,null],[12,"XtCreateWindow","","",182,null],[12,"XtCvtColorToPixel","","",182,null],[12,"XtCvtIntToBool","","",182,null],[12,"XtCvtIntToBoolean","","",182,null],[12,"XtCvtIntToColor","","",182,null],[12,"XtCvtIntToFloat","","",182,null],[12,"XtCvtIntToFont","","",182,null],[12,"XtCvtIntToPixel","","",182,null],[12,"XtCvtIntToPixmap","","",182,null],[12,"XtCvtIntToShort","","",182,null],[12,"XtCvtIntToUnsignedChar","","",182,null],[12,"XtCvtStringToAcceleratorTable","","",182,null],[12,"XtCvtStringToAtom","","",182,null],[12,"XtCvtStringToBool","","",182,null],[12,"XtCvtStringToBoolean","","",182,null],[12,"XtCvtStringToCommandArgArray","","",182,null],[12,"XtCvtStringToCursor","","",182,null],[12,"XtCvtStringToDimension","","",182,null],[12,"XtCvtStringToDirectoryString","","",182,null],[12,"XtCvtStringToDisplay","","",182,null],[12,"XtCvtStringToFile","","",182,null],[12,"XtCvtStringToFloat","","",182,null],[12,"XtCvtStringToFont","","",182,null],[12,"XtCvtStringToFontSet","","",182,null],[12,"XtCvtStringToFontStruct","","",182,null],[12,"XtCvtStringToGravity","","",182,null],[12,"XtCvtStringToInitialState","","",182,null],[12,"XtCvtStringToInt","","",182,null],[12,"XtCvtStringToPixel","","",182,null],[12,"XtCvtStringToRestartStyle","","",182,null],[12,"XtCvtStringToShort","","",182,null],[12,"XtCvtStringToTranslationTable","","",182,null],[12,"XtCvtStringToUnsignedChar","","",182,null],[12,"XtCvtStringToVisual","","",182,null],[12,"XtDatabase","","",182,null],[12,"XtDestroyApplicationContext","","",182,null],[12,"XtDestroyGC","","",182,null],[12,"XtDestroyWidget","","",182,null],[12,"XtDirectConvert","","",182,null],[12,"XtDisownSelection","","",182,null],[12,"XtDispatchEvent","","",182,null],[12,"XtDispatchEventToWidget","","",182,null],[12,"XtDisplay","","",182,null],[12,"XtDisplayInitialize","","",182,null],[12,"XtDisplayOfObject","","",182,null],[12,"XtDisplayStringConversionWarning","","",182,null],[12,"XtDisplayToApplicationContext","","",182,null],[12,"XtError","","",182,null],[12,"XtErrorMsg","","",182,null],[12,"XtFindFile","","",182,null],[12,"XtFree","","",182,null],[12,"XtGetActionKeysym","","",182,null],[12,"XtGetActionList","","",182,null],[12,"XtGetApplicationNameAndClass","","",182,null],[12,"XtGetApplicationResources","","",182,null],[12,"XtGetClassExtension","","",182,null],[12,"XtGetConstraintResourceList","","",182,null],[12,"XtGetDisplays","","",182,null],[12,"XtGetErrorDatabase","","",182,null],[12,"XtGetErrorDatabaseText","","",182,null],[12,"XtGetGC","","",182,null],[12,"XtGetKeyboardFocusWidget","","",182,null],[12,"XtGetKeysymTable","","",182,null],[12,"XtGetMultiClickTime","","",182,null],[12,"XtGetResourceList","","",182,null],[12,"XtGetSelectionParameters","","",182,null],[12,"XtGetSelectionRequest","","",182,null],[12,"XtGetSelectionTimeout","","",182,null],[12,"XtGetSelectionValue","","",182,null],[12,"XtGetSelectionValueIncremental","","",182,null],[12,"XtGetSelectionValues","","",182,null],[12,"XtGetSelectionValuesIncremental","","",182,null],[12,"XtGetSubresources","","",182,null],[12,"XtGetSubvalues","","",182,null],[12,"XtGetValues","","",182,null],[12,"XtGrabButton","","",182,null],[12,"XtGrabKey","","",182,null],[12,"XtGrabKeyboard","","",182,null],[12,"XtGrabPointer","","",182,null],[12,"XtHasCallbacks","","",182,null],[12,"XtHooksOfDisplay","","",182,null],[12,"XtInitialize","","",182,null],[12,"XtInitializeWidgetClass","","",182,null],[12,"XtInsertEventHandler","","",182,null],[12,"XtInsertEventTypeHandler","","",182,null],[12,"XtInsertRawEventHandler","","",182,null],[12,"XtInstallAccelerators","","",182,null],[12,"XtInstallAllAccelerators","","",182,null],[12,"XtIsApplicationShell","","",182,null],[12,"XtIsComposite","","",182,null],[12,"XtIsConstraint","","",182,null],[12,"XtIsManaged","","",182,null],[12,"XtIsObject","","",182,null],[12,"XtIsOverrideShell","","",182,null],[12,"XtIsRealized","","",182,null],[12,"XtIsRectObj","","",182,null],[12,"XtIsSensitive","","",182,null],[12,"XtIsSessionShell","","",182,null],[12,"XtIsShell","","",182,null],[12,"XtIsSubclass","","",182,null],[12,"XtIsTopLevelShell","","",182,null],[12,"XtIsTransientShell","","",182,null],[12,"XtIsVendorShell","","",182,null],[12,"XtIsWidget","","",182,null],[12,"XtIsWMShell","","",182,null],[12,"XtKeysymToKeycodeList","","",182,null],[12,"XtLastEventProcessed","","",182,null],[12,"XtLastTimestampProcessed","","",182,null],[12,"XtMainLoop","","",182,null],[12,"XtMakeGeometryRequest","","",182,null],[12,"XtMakeResizeRequest","","",182,null],[12,"XtMalloc","","",182,null],[12,"XtManageChild","","",182,null],[12,"XtManageChildren","","",182,null],[12,"XtMapWidget","","",182,null],[12,"XtMenuPopupAction","","",182,null],[12,"XtMergeArgLists","","",182,null],[12,"XtMoveWidget","","",182,null],[12,"XtName","","",182,null],[12,"XtNameToWidget","","",182,null],[12,"XtNewString","","",182,null],[12,"XtNextEvent","","",182,null],[12,"XtNoticeSignal","","",182,null],[12,"XtOpenApplication","","",182,null],[12,"XtOpenDisplay","","",182,null],[12,"XtOverrideTranslations","","",182,null],[12,"XtOwnSelection","","",182,null],[12,"XtOwnSelectionIncremental","","",182,null],[12,"XtParent","","",182,null],[12,"XtParseAcceleratorTable","","",182,null],[12,"XtParseTranslationTable","","",182,null],[12,"XtPeekEvent","","",182,null],[12,"XtPending","","",182,null],[12,"XtPopdown","","",182,null],[12,"XtPopup","","",182,null],[12,"XtPopupSpringLoaded","","",182,null],[12,"XtProcessEvent","","",182,null],[12,"XtProcessLock","","",182,null],[12,"XtProcessUnlock","","",182,null],[12,"XtQueryGeometry","","",182,null],[12,"XtRealizeWidget","","",182,null],[12,"XtRealloc","","",182,null],[12,"XtRegisterCaseConverter","","",182,null],[12,"XtRegisterDrawable","","",182,null],[12,"XtRegisterExtensionSelector","","",182,null],[12,"XtRegisterGrabAction","","",182,null],[12,"XtReleaseGC","","",182,null],[12,"XtReleasePropertyAtom","","",182,null],[12,"XtRemoveActionHook","","",182,null],[12,"XtRemoveAllCallbacks","","",182,null],[12,"XtRemoveBlockHook","","",182,null],[12,"XtRemoveCallback","","",182,null],[12,"XtRemoveCallbacks","","",182,null],[12,"XtRemoveEventHandler","","",182,null],[12,"XtRemoveEventTypeHandler","","",182,null],[12,"XtRemoveGrab","","",182,null],[12,"XtRemoveInput","","",182,null],[12,"XtRemoveRawEventHandler","","",182,null],[12,"XtRemoveSignal","","",182,null],[12,"XtRemoveTimeOut","","",182,null],[12,"XtRemoveWorkProc","","",182,null],[12,"XtReservePropertyAtom","","",182,null],[12,"XtResizeWidget","","",182,null],[12,"XtResizeWindow","","",182,null],[12,"XtResolvePathname","","",182,null],[12,"XtScreen","","",182,null],[12,"XtScreenDatabase","","",182,null],[12,"XtScreenOfObject","","",182,null],[12,"XtSendSelectionRequest","","",182,null],[12,"XtSessionGetToken","","",182,null],[12,"XtSessionReturnToken","","",182,null],[12,"XtSetErrorHandler","","",182,null],[12,"XtSetErrorMsgHandler","","",182,null],[12,"XtSetEventDispatcher","","",182,null],[12,"XtSetKeyboardFocus","","",182,null],[12,"XtSetKeyTranslator","","",182,null],[12,"XtSetLanguageProc","","",182,null],[12,"XtSetMappedWhenManaged","","",182,null],[12,"XtSetMultiClickTime","","",182,null],[12,"XtSetSelectionParameters","","",182,null],[12,"XtSetSelectionTimeout","","",182,null],[12,"XtSetSensitive","","",182,null],[12,"XtSetSubvalues","","",182,null],[12,"XtSetTypeConverter","","",182,null],[12,"XtSetValues","","",182,null],[12,"XtSetWarningHandler","","",182,null],[12,"XtSetWarningMsgHandler","","",182,null],[12,"XtSetWMColormapWindows","","",182,null],[12,"XtStringConversionWarning","","",182,null],[12,"XtSuperclass","","",182,null],[12,"XtToolkitInitialize","","",182,null],[12,"XtToolkitThreadInitialize","","",182,null],[12,"XtTranslateCoords","","",182,null],[12,"XtTranslateKey","","",182,null],[12,"XtTranslateKeycode","","",182,null],[12,"XtUngrabButton","","",182,null],[12,"XtUngrabKey","","",182,null],[12,"XtUngrabKeyboard","","",182,null],[12,"XtUngrabPointer","","",182,null],[12,"XtUninstallTranslations","","",182,null],[12,"XtUnmanageChild","","",182,null],[12,"XtUnmanageChildren","","",182,null],[12,"XtUnmapWidget","","",182,null],[12,"XtUnrealizeWidget","","",182,null],[12,"XtUnregisterDrawable","","",182,null],[12,"XtWarning","","",182,null],[12,"XtWarningMsg","","",182,null],[12,"XtWidgetToApplicationContext","","",182,null],[12,"XtWindow","","",182,null],[12,"XtWindowOfObject","","",182,null],[12,"XtWindowToWidget","","",182,null],[12,"XtAsprintf","","",182,null],[12,"XtVaAppCreateShell","","",182,null],[12,"XtVaAppInitialize","","",182,null],[12,"XtVaCreateArgsList","","",182,null],[12,"XtVaCreateManagedWidget","","",182,null],[12,"XtVaCreatePopupShell","","",182,null],[12,"XtVaCreateWidget","","",182,null],[12,"XtVaGetApplicationResources","","",182,null],[12,"XtVaGetSubresources","","",182,null],[12,"XtVaGetSubvalues","","",182,null],[12,"XtVaGetValues","","",182,null],[12,"XtVaOpenApplication","","",182,null],[12,"XtVaSetSubvalues","","",182,null],[12,"XtVaSetValues","","",182,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",182,{"inputs":[],"output":{"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",183,null],[12,"XTestCompareCursorWithWindow","","",183,null],[12,"XTestDiscard","","",183,null],[12,"XTestFakeButtonEvent","","",183,null],[12,"XTestFakeDeviceButtonEvent","","",183,null],[12,"XTestFakeDeviceKeyEvent","","",183,null],[12,"XTestFakeDeviceMotionEvent","","",183,null],[12,"XTestFakeKeyEvent","","",183,null],[12,"XTestFakeMotionEvent","","",183,null],[12,"XTestFakeProximityEvent","","",183,null],[12,"XTestFakeRelativeMotionEvent","","",183,null],[12,"XTestGrabControl","","",183,null],[12,"XTestQueryExtension","","",183,null],[12,"XTestSetGContextOfGC","","",183,null],[12,"XTestSetVisualIDOfVisual","","",183,null],[11,"open","","",183,{"inputs":[],"output":{"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"]]};
searchIndex["dylib"] = {"doc":"Dynamic library facilities.","items":[[3,"DynamicLibrary","dylib","",null,null],[11,"drop","","",0,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",0,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",0,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",0,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",0,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",0,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"DynamicLibrary"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",7,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",8,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",10,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",11,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",16,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",16,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",18,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",19,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",20,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",21,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",21,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",23,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst-case performance. The specific syntax supported is\ndocumented further down.","items":[[3,"RegexSet","regex","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group\nname and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.",1,null],[13,"InvalidSet","","**DEPRECATED:** Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexSet","regex::bytes","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIterBytes","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIntoIterBytes","","An owned iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and\nthe value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte\nstring.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,{"inputs":[{"name":"replacer"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"replacer"}],"output":{"name":"option"}}],[11,"fmt","regex","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","mempool","Create a new memory pool with the given initialization function.",4,{"inputs":[{"name":"box"}],"output":{"name":"pool"}}],[11,"get","","Get a reference to a new value from the pool. The underlying value may\nbe reused in subsequent calls to `get`.",4,{"inputs":[{"name":"pool"}],"output":{"name":"t"}}],[11,"fmt","","",4,{"inputs":[{"name":"pool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"no_expansion","regex::re_bytes","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"replacer"}],"output":{"name":"option"}}],[11,"clone","regex::bytes","",5,{"inputs":[{"name":"regex"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",5,{"inputs":[{"name":"regex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",5,{"inputs":[{"name":"regex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",5,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",5,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",5,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",5,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",5,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",5,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",5,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",5,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced byte string.",5,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",5,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",5,null],[11,"shortest_match","","Returns the end location of a match in the text given.",5,null],[11,"as_str","","Returns the original string of this regex.",5,{"inputs":[{"name":"regex"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",5,{"inputs":[{"name":"regex"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",5,{"inputs":[{"name":"regex"}],"output":{"name":"usize"}}],[11,"next","","",6,{"inputs":[{"name":"findmatches"}],"output":{"name":"option"}}],[11,"next","","",7,{"inputs":[{"name":"findcaptures"}],"output":{"name":"option"}}],[11,"next","","",8,{"inputs":[{"name":"splits"}],"output":{"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"splitsn"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"capturenames"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original byte string matched.",11,{"inputs":[{"name":"captures"},{"name":"usize"}],"output":{"name":"option"}}],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",11,{"inputs":[{"name":"captures"},{"name":"usize"}],"output":{"name":"option"}}],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",11,{"inputs":[{"name":"captures"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",11,{"inputs":[{"name":"captures"}],"output":{"name":"subcaptures"}}],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",11,{"inputs":[{"name":"captures"}],"output":{"name":"subcapturespos"}}],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",11,{"inputs":[{"name":"captures"}],"output":{"name":"subcapturesnamed"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`, and writes them to the `dst` buffer given.",11,null],[11,"len","","Returns the number of captured groups.",11,{"inputs":[{"name":"captures"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if and only if there are no captured groups.",11,{"inputs":[{"name":"captures"}],"output":{"name":"bool"}}],[11,"index","","",11,null],[11,"index","","",11,null],[11,"next","","",12,{"inputs":[{"name":"subcaptures"}],"output":{"name":"option"}}],[11,"next","","",13,{"inputs":[{"name":"subcapturespos"}],"output":{"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"subcapturesnamed"}],"output":{"name":"option"}}],[11,"replace_append","","",2,{"inputs":[{"name":"noexpand"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","",2,{"inputs":[{"name":"noexpand"}],"output":{"name":"option"}}],[11,"clone","regex","",15,{"inputs":[{"name":"regex"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",15,{"inputs":[{"name":"regex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",15,{"inputs":[{"name":"regex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"regex"},{"name":"regex"}],"output":{"name":"bool"}}],[11,"from_str","","Attempts to parse a string into a regular expression",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",15,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"bool"}}],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"findmatches"}}],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"option"}}],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"findcaptures"}}],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"regexsplits"}}],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",15,{"inputs":[{"name":"regex"},{"name":"str"},{"name":"usize"}],"output":{"name":"regexsplitsn"}}],[11,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced string.",15,{"inputs":[{"name":"regex"},{"name":"str"},{"name":"r"}],"output":{"name":"string"}}],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",15,{"inputs":[{"name":"regex"},{"name":"str"},{"name":"r"}],"output":{"name":"string"}}],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",15,{"inputs":[{"name":"regex"},{"name":"str"},{"name":"usize"},{"name":"r"}],"output":{"name":"string"}}],[11,"shortest_match","","Returns the end location of a match in the text given.",15,{"inputs":[{"name":"regex"},{"name":"str"}],"output":{"name":"option"}}],[11,"as_str","","Returns the original string of this regex.",15,{"inputs":[{"name":"regex"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",15,{"inputs":[{"name":"regex"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",15,{"inputs":[{"name":"regex"}],"output":{"name":"usize"}}],[11,"next","","",16,{"inputs":[{"name":"capturenames"}],"output":{"name":"option"}}],[11,"size_hint","","",16,null],[11,"reg_replace","","",0,{"inputs":[{"name":"noexpand"},{"name":"captures"}],"output":{"name":"cow"}}],[11,"no_expand","","",0,{"inputs":[{"name":"noexpand"}],"output":{"name":"option"}}],[11,"next","","",17,{"inputs":[{"name":"regexsplits"}],"output":{"name":"option"}}],[11,"next","","",18,{"inputs":[{"name":"regexsplitsn"}],"output":{"name":"option"}}],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.",19,{"inputs":[{"name":"captures"},{"name":"usize"}],"output":{"name":"option"}}],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",19,{"inputs":[{"name":"captures"},{"name":"usize"}],"output":{"name":"option"}}],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",19,{"inputs":[{"name":"captures"},{"name":"str"}],"output":{"name":"option"}}],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",19,{"inputs":[{"name":"captures"}],"output":{"name":"subcaptures"}}],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",19,{"inputs":[{"name":"captures"}],"output":{"name":"subcapturespos"}}],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",19,{"inputs":[{"name":"captures"}],"output":{"name":"subcapturesnamed"}}],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",19,{"inputs":[{"name":"captures"},{"name":"str"}],"output":{"name":"string"}}],[11,"len","","Returns the number of captured groups.",19,{"inputs":[{"name":"captures"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if and only if there are no captured groups.",19,{"inputs":[{"name":"captures"}],"output":{"name":"bool"}}],[11,"index","","",19,{"inputs":[{"name":"captures"},{"name":"usize"}],"output":{"name":"str"}}],[11,"index","","",19,{"inputs":[{"name":"captures"},{"name":"str"}],"output":{"name":"str"}}],[11,"next","","",20,{"inputs":[{"name":"subcaptures"}],"output":{"name":"option"}}],[11,"next","","",21,{"inputs":[{"name":"subcapturespos"}],"output":{"name":"option"}}],[11,"next","","",22,{"inputs":[{"name":"subcapturesnamed"}],"output":{"name":"option"}}],[11,"next","","",23,{"inputs":[{"name":"findcaptures"}],"output":{"name":"option"}}],[11,"next","","",24,{"inputs":[{"name":"findmatches"}],"output":{"name":"option"}}],[11,"clone","","",25,{"inputs":[{"name":"regexset"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",25,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",25,{"inputs":[{"name":"regexset"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches","","Returns the set of regular expressions that match in the given text.",25,{"inputs":[{"name":"regexset"},{"name":"str"}],"output":{"name":"setmatches"}}],[11,"len","","Returns the total number of regular expressions in this set.",25,{"inputs":[{"name":"regexset"}],"output":{"name":"usize"}}],[11,"fmt","","",26,{"inputs":[{"name":"setmatches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"setmatches"}],"output":{"name":"setmatches"}}],[11,"matched_any","","Whether this set contains any matches.",26,{"inputs":[{"name":"setmatches"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",26,{"inputs":[{"name":"setmatches"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",26,{"inputs":[{"name":"setmatches"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",26,{"inputs":[{"name":"setmatches"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",26,{"inputs":[{"name":"setmatches"}],"output":{"name":"intoiter"}}],[11,"next","","",27,{"inputs":[{"name":"setmatchesintoiter"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"setmatchesiter"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",28,{"inputs":[{"name":"setmatchesiter"}],"output":{"name":"option"}}],[11,"clone","regex::bytes","",29,{"inputs":[{"name":"regexset"}],"output":{"name":"regexsetbytes"}}],[11,"new","","Create a new regex set with the given regular expressions.",29,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",29,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",29,null],[11,"len","","Returns the total number of regular expressions in this set.",29,{"inputs":[{"name":"regexset"}],"output":{"name":"usize"}}],[11,"fmt","","",30,{"inputs":[{"name":"setmatches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"setmatches"}],"output":{"name":"setmatchesbytes"}}],[11,"matched_any","","Whether this set contains any matches.",30,{"inputs":[{"name":"setmatches"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",30,{"inputs":[{"name":"setmatches"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",30,{"inputs":[{"name":"setmatches"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",30,{"inputs":[{"name":"setmatches"}],"output":{"name":"setmatchesiterbytes"}}],[11,"into_iter","","",30,{"inputs":[{"name":"setmatches"}],"output":{"name":"intoiter"}}],[11,"next","","",31,{"inputs":[{"name":"setmatchesintoiterbytes"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"setmatchesiterbytes"}],"output":{"name":"setmatchesiterbytes"}}],[11,"next","","",32,{"inputs":[{"name":"setmatchesiterbytes"}],"output":{"name":"option"}}],[11,"fmt","regex","",25,{"inputs":[{"name":"regexset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","regex::bytes","",29,{"inputs":[{"name":"regexset"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Replacer","regex","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",33,{"inputs":[{"name":"replacer"},{"name":"captures"}],"output":{"name":"cow"}}],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",33,{"inputs":[{"name":"replacer"}],"output":{"name":"option"}}],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",33,{"inputs":[{"name":"replacer"}],"output":{"name":"option"}}]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"Pool"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIterBytes"],[3,"SetMatchesIterBytes"],[8,"Replacer"]]};
searchIndex["aho_corasick"] = {"doc":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"eq","","",0,{"inputs":[{"name":"match"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"match"},{"name":"match"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"match"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"match"}],"output":{"name":"match"}}],[11,"fmt","","",1,{"inputs":[{"name":"matches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"streammatches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",2,{"inputs":[{"name":"streammatches"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"matchesoverlapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"matchesoverlapping"}],"output":{"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"streammatchesoverlapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"streammatchesoverlapping"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"fullacautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing\nAho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,{"inputs":[{"name":"fullacautomaton"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",5,{"inputs":[{"name":"fullacautomaton"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",5,{"inputs":[{"name":"fullacautomaton"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,{"inputs":[{"name":"fullacautomaton"},{"name":"usize"}],"output":{"name":"p"}}],[11,"fmt","","",5,{"inputs":[{"name":"fullacautomaton"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators.\nThe type parameter `P` is the type of the pattern that was used to\nconstruct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,{"inputs":[{"name":"automaton"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"has_match","","Return true if and only if the given state and current pattern index\nindicate a match.",6,{"inputs":[{"name":"automaton"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,{"inputs":[{"name":"automaton"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,{"inputs":[{"name":"automaton"},{"name":"usize"}],"output":{"name":"p"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"automaton"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"automaton"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"automaton"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"automaton"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"automaton"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"automaton"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,{"inputs":[{"name":"transitions"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"set_goto","","Set the next state index for the character given.",7,{"inputs":[{"name":"transitions"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,{"inputs":[{"name":"transitions"}],"output":{"name":"usize"}}],[11,"clone","","",8,{"inputs":[{"name":"acautomaton"}],"output":{"name":"acautomaton"}}],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",8,{"inputs":[{"name":"acautomaton"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",8,{"inputs":[{"name":"acautomaton"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",8,{"inputs":[{"name":"acautomaton"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,{"inputs":[{"name":"acautomaton"},{"name":"usize"}],"output":{"name":"p"}}],[11,"fmt","","",9,{"inputs":[{"name":"dense"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"dense"}],"output":{"name":"dense"}}],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,{"inputs":[{"name":"dense"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",9,{"inputs":[{"name":"dense"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",9,{"inputs":[{"name":"dense"}],"output":{"name":"usize"}}],[11,"fmt","","",10,{"inputs":[{"name":"sparse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"sparse"}],"output":{"name":"sparse"}}],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,{"inputs":[{"name":"sparse"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",10,{"inputs":[{"name":"sparse"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",10,{"inputs":[{"name":"sparse"}],"output":{"name":"usize"}}],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,{"inputs":[{"name":"acautomaton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"automaton"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"automaton"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"automaton"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"automaton"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"automaton"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"automaton"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"dirent","","",null,null],[12,"d_ino","","",26,null],[12,"d_off","","",26,null],[12,"d_reclen","","",26,null],[12,"d_type","","",26,null],[12,"d_name","","",26,null],[3,"dirent64","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",28,null],[12,"rlim_max","","",28,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",29,null],[12,"gl_pathv","","",29,null],[12,"gl_offs","","",29,null],[12,"gl_flags","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",31,null],[12,"pw_passwd","","",31,null],[12,"pw_uid","","",31,null],[12,"pw_gid","","",31,null],[12,"pw_gecos","","",31,null],[12,"pw_dir","","",31,null],[12,"pw_shell","","",31,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",32,null],[12,"f_frsize","","",32,null],[12,"f_blocks","","",32,null],[12,"f_bfree","","",32,null],[12,"f_bavail","","",32,null],[12,"f_files","","",32,null],[12,"f_ffree","","",32,null],[12,"f_favail","","",32,null],[12,"f_fsid","","",32,null],[12,"f_flag","","",32,null],[12,"f_namemax","","",32,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",33,null],[12,"dqb_bsoftlimit","","",33,null],[12,"dqb_curspace","","",33,null],[12,"dqb_ihardlimit","","",33,null],[12,"dqb_isoftlimit","","",33,null],[12,"dqb_curinodes","","",33,null],[12,"dqb_btime","","",33,null],[12,"dqb_itime","","",33,null],[12,"dqb_valid","","",33,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",34,null],[12,"ssi_errno","","",34,null],[12,"ssi_code","","",34,null],[12,"ssi_pid","","",34,null],[12,"ssi_uid","","",34,null],[12,"ssi_fd","","",34,null],[12,"ssi_tid","","",34,null],[12,"ssi_band","","",34,null],[12,"ssi_overrun","","",34,null],[12,"ssi_trapno","","",34,null],[12,"ssi_status","","",34,null],[12,"ssi_int","","",34,null],[12,"ssi_ptr","","",34,null],[12,"ssi_utime","","",34,null],[12,"ssi_stime","","",34,null],[12,"ssi_addr","","",34,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",35,null],[12,"mq_maxmsg","","",35,null],[12,"mq_msgsize","","",35,null],[12,"mq_curmsgs","","",35,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",36,null],[12,"sa_mask","","",36,null],[12,"sa_flags","","",36,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",37,null],[12,"ss_flags","","",37,null],[12,"ss_size","","",37,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",38,null],[12,"si_errno","","",38,null],[12,"si_code","","",38,null],[12,"_pad","","",38,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",39,null],[12,"gl_pathv","","",39,null],[12,"gl_offs","","",39,null],[12,"gl_flags","","",39,null],[3,"ucred","","",null,null],[12,"pid","","",40,null],[12,"uid","","",40,null],[12,"gid","","",40,null],[3,"statfs","","",null,null],[12,"f_type","","",41,null],[12,"f_bsize","","",41,null],[12,"f_blocks","","",41,null],[12,"f_bfree","","",41,null],[12,"f_bavail","","",41,null],[12,"f_files","","",41,null],[12,"f_ffree","","",41,null],[12,"f_fsid","","",41,null],[12,"f_namelen","","",41,null],[12,"f_frsize","","",41,null],[3,"msghdr","","",null,null],[12,"msg_name","","",42,null],[12,"msg_namelen","","",42,null],[12,"msg_iov","","",42,null],[12,"msg_iovlen","","",42,null],[12,"msg_control","","",42,null],[12,"msg_controllen","","",42,null],[12,"msg_flags","","",42,null],[3,"termios","","",null,null],[12,"c_iflag","","",43,null],[12,"c_oflag","","",43,null],[12,"c_cflag","","",43,null],[12,"c_lflag","","",43,null],[12,"c_line","","",43,null],[12,"c_cc","","",43,null],[12,"c_ispeed","","",43,null],[12,"c_ospeed","","",43,null],[3,"flock","","",null,null],[12,"l_type","","",44,null],[12,"l_whence","","",44,null],[12,"l_start","","",44,null],[12,"l_len","","",44,null],[12,"l_pid","","",44,null],[3,"ipc_perm","","",null,null],[12,"__key","","",45,null],[12,"uid","","",45,null],[12,"gid","","",45,null],[12,"cuid","","",45,null],[12,"cgid","","",45,null],[12,"mode","","",45,null],[12,"__seq","","",45,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",46,null],[12,"shm_segsz","","",46,null],[12,"shm_atime","","",46,null],[12,"shm_dtime","","",46,null],[12,"shm_ctime","","",46,null],[12,"shm_cpid","","",46,null],[12,"shm_lpid","","",46,null],[12,"shm_nattch","","",46,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",47,null],[12,"st_ino","","",47,null],[12,"st_nlink","","",47,null],[12,"st_mode","","",47,null],[12,"st_uid","","",47,null],[12,"st_gid","","",47,null],[12,"st_rdev","","",47,null],[12,"st_size","","",47,null],[12,"st_blksize","","",47,null],[12,"st_blocks","","",47,null],[12,"st_atime","","",47,null],[12,"st_atime_nsec","","",47,null],[12,"st_mtime","","",47,null],[12,"st_mtime_nsec","","",47,null],[12,"st_ctime","","",47,null],[12,"st_ctime_nsec","","",47,null],[3,"stat64","","",null,null],[12,"st_dev","","",48,null],[12,"st_ino","","",48,null],[12,"st_nlink","","",48,null],[12,"st_mode","","",48,null],[12,"st_uid","","",48,null],[12,"st_gid","","",48,null],[12,"st_rdev","","",48,null],[12,"st_size","","",48,null],[12,"st_blksize","","",48,null],[12,"st_blocks","","",48,null],[12,"st_atime","","",48,null],[12,"st_atime_nsec","","",48,null],[12,"st_mtime","","",48,null],[12,"st_mtime_nsec","","",48,null],[12,"st_ctime","","",48,null],[12,"st_ctime_nsec","","",48,null],[3,"pthread_attr_t","","",null,null],[3,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",49,null],[12,"uc_link","","",49,null],[12,"uc_stack","","",49,null],[12,"uc_mcontext","","",49,null],[12,"uc_sigmask","","",49,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",50,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",50,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",50,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",50,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",50,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",50,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",50,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",50,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",50,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",50,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",50,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",50,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",50,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",50,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",50,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",50,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",50,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",50,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",50,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",50,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",50,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",50,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",50,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",50,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",51,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",51,null],[11,"clone","libc","",47,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",48,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",52,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",53,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",49,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",54,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",36,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",37,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",38,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",39,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",40,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",41,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",42,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",43,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",44,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",45,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",46,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",26,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",27,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",28,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",29,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",30,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",55,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",56,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",57,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",58,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",31,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",32,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",33,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",34,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",59,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",35,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",60,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",61,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",21,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",22,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",23,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",24,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",25,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[4,"Option"],[8,"Clone"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["draw_state"] = {"doc":"Graphics state blocks for gfx-rs","items":[[0,"preset","draw_state","State presets",null,null],[0,"blend","draw_state::preset","Blending preset modes.",null,null],[17,"ADD","draw_state::preset::blend","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",null,null],[0,"depth","draw_state::preset","Depth preset modes.",null,null],[17,"LESS_EQUAL_TEST","draw_state::preset::depth","&quot;&lt;=&quot; comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","&quot;&lt;=&quot; comparison with writable depth",null,null],[0,"state","draw_state","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",1,null],[12,"method","","How to rasterize this primitive.",1,null],[12,"offset","","Any polygon offset to apply.",1,null],[12,"samples","","Multi-sampling mode.",1,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",2,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",2,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",2,null],[12,"op_fail","","What operation to do if the stencil test fails.",2,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",2,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",2,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",3,null],[12,"back","","",3,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",4,null],[12,"write","","Specify whether to write to the depth buffer or not.",4,null],[3,"BlendChannel","","",null,null],[12,"equation","","",5,null],[12,"source","","",5,null],[12,"destination","","",5,null],[3,"Blend","","",null,null],[12,"color","","",6,null],[12,"alpha","","",6,null],[3,"ColorMask","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",7,null],[12,"blend","","Optional blending.",7,null],[3,"RefValues","","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",8,null],[12,"blend","","Constant blend color.",8,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",9,null],[13,"CounterClockwise","","Counter-clockwise winding order.",9,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",10,null],[13,"Front","","",10,null],[13,"Back","","",10,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",11,null],[13,"Line","","Rasterize as a line with the given width.",11,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",11,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",12,null],[13,"Less","","`x &lt; y`",12,null],[13,"LessEqual","","`x &lt;= y`",12,null],[13,"Equal","","`x == y`",12,null],[13,"GreaterEqual","","`x &gt;= y`",12,null],[13,"Greater","","`x &gt; y`",12,null],[13,"NotEqual","","`x != y`",12,null],[13,"Always","","`true`",12,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",13,null],[13,"Zero","","Set the value in the stencil buffer to zero.",13,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",13,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",13,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",13,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",13,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",13,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",13,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",14,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",14,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",14,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",14,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",14,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",15,null],[13,"SourceAlpha","","",15,null],[13,"DestColor","","",15,null],[13,"DestAlpha","","",15,null],[13,"ConstColor","","",15,null],[13,"ConstAlpha","","",15,null],[4,"Factor","","",null,null],[13,"Zero","","",16,null],[13,"One","","",16,null],[13,"SourceAlphaSaturated","","",16,null],[13,"ZeroPlus","","",16,null],[13,"OneMinus","","",16,null],[6,"LineWidth","","Width of a line.\nCould be f32 if not for Hash deriving issues.",null,null],[6,"OffsetSlope","","Slope depth offset factor\nCould be f32 if not for Hash deriving issues.",null,null],[6,"OffsetUnits","","Number of units to offset, where\nthe unit is the minimal difference in the depth value\ndictated by the precision of the depth buffer.",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"fmt","","",9,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"eq","","",9,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",10,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",11,{"inputs":[{"name":"rastermethod"}],"output":{"name":"cullface"}}],[11,"cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"hash","","",17,null],[11,"fmt","","",17,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"rasterizer"},{"name":"rasterizer"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"rasterizer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"rasterizer"}],"output":{"name":"rasterizer"}}],[11,"new_fill","","Create a new filling rasterizer.",1,{"inputs":[{"name":"cullface"}],"output":{"name":"rasterizer"}}],[11,"with_offset","","Add polygon offset.",1,{"inputs":[{"name":"rasterizer"},{"name":"f32"},{"name":"offsetunits"}],"output":{"name":"rasterizer"}}],[11,"cmp","","",12,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",13,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"stencilside"}}],[11,"cmp","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"stencil"}}],[11,"new","","Create a new stencil state with a given function.",3,null],[11,"cmp","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"depth"}}],[11,"cmp","","",14,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",15,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",5,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"eq","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"blend"}}],[11,"new","","Create a new blend state with a given equation.",6,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"fmt","","",6,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",18,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"color"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"refvalues"},{"name":"refvalues"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"refvalues"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"refvalues"}],"output":{"name":"refvalues"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"refvalues"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"partial_cmp","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"eq","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}]],"paths":[[3,"Offset"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"Mirror"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"eq","","",1,{"inputs":[{"name":"utf8sequence"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"utf8sequence"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"utf8sequence"}],"output":{"name":"utf8sequence"}}],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,{"inputs":[{"name":"utf8sequence"}],"output":{"name":"usize"}}],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence\nof byte ranges.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"utf8sequence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"utf8range"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"utf8range"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"utf8range"}],"output":{"name":"utf8range"}}],[11,"matches","","Returns true if and only if the given byte is in this range.",0,{"inputs":[{"name":"utf8range"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"utf8range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range\ngiven.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"utf8sequences"}],"output":{"name":"option"}}]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["gl_common"] = {"doc":"Defines everything used by `gl_generator`.","items":[[8,"GlFunctionsSource","gl_common","",null,null],[10,"get_proc_addr","","",0,null]],"paths":[[8,"GlFunctionsSource"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"shutdownloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["mempool"] = {"doc":"This crate provides a fast thread safe memory pool for reusing allocations. It\naggressively optimizes for the single-threaded use case, but gracefully\nsupports access from multiple threads simultaneously. In particular, values in\na pool may not be shared across threads.","items":[[3,"Pool","mempool","A fast memory pool.",null,null],[6,"CreateFn","","The type of an initialization function.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"pool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new memory pool with the given initialization function.",0,{"inputs":[{"name":"createfn"}],"output":{"name":"pool"}}],[11,"get","","Get a reference to a new value from the pool. The underlying value may\nbe reused in subsequent calls to `get`.",0,{"inputs":[{"name":"pool"}],"output":{"name":"t"}}]],"paths":[[3,"Pool"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"Error","byteorder","An error type for reading bytes.",null,null],[13,"UnexpectedEOF","","An unexpected EOF.",0,null],[13,"Io","","Any underlying IO error that occurs while reading bytes.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","byteorder","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[6,"Result","","A short-hand for `result::Result&lt;T, byteorder::Error&gt;`.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",4,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",4,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",4,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",4,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",4,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",4,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",4,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",4,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",4,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",4,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",4,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",4,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",4,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",4,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",4,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",4,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"read_u16","","",5,null],[11,"read_u32","","",5,null],[11,"read_u64","","",5,null],[11,"read_uint","","",5,null],[11,"write_u16","","",5,null],[11,"write_u32","","",5,null],[11,"write_u64","","",5,null],[11,"write_uint","","",5,null],[11,"read_u16","","",6,null],[11,"read_u32","","",6,null],[11,"read_u64","","",6,null],[11,"read_uint","","",6,null],[11,"write_u16","","",6,null],[11,"write_u32","","",6,null],[11,"write_u64","","",6,null],[11,"write_uint","","",6,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[3,"Error"],[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word\ncharacter on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word\ncharacters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes\nor grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the\nleast).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings.\ne.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once.\ne.g., `(?P&lt;a&gt;.)(?P&lt;a&gt;.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P&lt;&gt;a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence.\ne.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P&lt;0a&gt;b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the\nrange is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not\nallowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal\nsequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be\nrepeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P&lt;a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `b`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the bytes (`b`) flag was enabled.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",5,{"inputs":[{"name":"literals"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"literals"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"literals"}],"output":{"name":"literals"}}],[11,"cmp","","",6,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"ordering"}}],[11,"clone","","",6,{"inputs":[{"name":"lit"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"literals"}],"output":{"name":"usize"}}],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"literals"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"limit_class","","Get the character class size limit for this set.",5,{"inputs":[{"name":"literals"}],"output":{"name":"usize"}}],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,{"inputs":[{"name":"literals"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"all_complete","","Returns true if all members in this set are complete.",5,{"inputs":[{"name":"literals"}],"output":{"name":"bool"}}],[11,"any_complete","","Returns true if any member in this set is complete.",5,{"inputs":[{"name":"literals"}],"output":{"name":"bool"}}],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,{"inputs":[{"name":"literals"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,{"inputs":[{"name":"literals"}],"output":{"name":"bool"}}],[11,"to_empty","","Returns a new empty set of literals using this set&#39;s limits.",5,{"inputs":[{"name":"literals"}],"output":{"name":"literals"}}],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are\nguaranteed to be unambiguous.",5,{"inputs":[{"name":"literals"}],"output":{"name":"literals"}}],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are\nguaranteed to be unambiguous.",5,{"inputs":[{"name":"literals"}],"output":{"name":"literals"}}],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,{"inputs":[{"name":"literals"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,{"inputs":[{"name":"literals"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union","","Unions this set with another set.",5,{"inputs":[{"name":"literals"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_product","","Extends this set with another set.",5,{"inputs":[{"name":"literals"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,{"inputs":[{"name":"literals"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,{"inputs":[{"name":"literals"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,{"inputs":[{"name":"literals"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"cut","","Cuts every member of this set. When a member is cut, it can never\nbe extended.",5,{"inputs":[{"name":"literals"}],"output":null}],[11,"reverse","","Reverses all members in place.",5,{"inputs":[{"name":"literals"}],"output":null}],[11,"clear","","Clears this set of all members.",5,{"inputs":[{"name":"literals"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"literals"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was &quot;cut.&quot;",6,{"inputs":[{"name":"lit"}],"output":{"name":"bool"}}],[11,"cut","","Cuts this literal.",6,{"inputs":[{"name":"lit"}],"output":null}],[11,"eq","","",6,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"lit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",7,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",7,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",7,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",7,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",7,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",7,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",7,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",7,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",7,null],[11,"as_slice","","Extracts a slice containing the entire vector.",7,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",7,null],[11,"set_len","","Sets the length of a vector.",7,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",7,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",7,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",7,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",7,null],[11,"push","","Appends an element to the back of a collection.",7,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",7,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",7,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",7,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",7,null],[11,"len","","Returns the number of elements in the vector.",7,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",7,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",7,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",7,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",7,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",7,null],[11,"from","","",7,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","","",7,null],[11,"as_mut","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",7,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",7,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"vec"}}],[11,"drop","","",7,null],[11,"cmp","","",7,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"extend","","",7,null],[11,"extend","","",7,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",7,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"from_iter","","",7,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"deref_mut","","",7,null],[11,"deref","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",7,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",7,null],[11,"borrow_mut","","",7,null],[11,"borrow","","",7,null],[11,"from","","",7,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"deref","regex_syntax","",6,{"inputs":[{"name":"lit"}],"output":{"name":"vec"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"lit"}],"output":{"name":"vec"}}],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"eq","","",2,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"expr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"expr"}],"output":{"name":"expr"}}],[11,"eq","","",3,{"inputs":[{"name":"repeater"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"repeater"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"repeater"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"repeater"}],"output":{"name":"repeater"}}],[11,"eq","","",8,{"inputs":[{"name":"charclass"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"charclass"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"charclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"charclass"}],"output":{"name":"charclass"}}],[11,"cmp","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"classrange"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"classrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"classrange"}],"output":{"name":"classrange"}}],[11,"eq","","",9,{"inputs":[{"name":"byteclass"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"byteclass"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"byteclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"byteclass"}],"output":{"name":"byteclass"}}],[11,"cmp","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"byterange"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"byterange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"byterange"}],"output":{"name":"byterange"}}],[11,"fmt","","",10,{"inputs":[{"name":"exprbuilder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"new","","Create a new builder for configuring expression parsing.",10,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"allow_bytes","","Whether the Unicode flag can be used or not. By default, the flag is\nenabled but it cannot be toggled.",10,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",10,{"inputs":[{"name":"exprbuilder"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",10,{"inputs":[{"name":"exprbuilder"},{"name":"str"}],"output":{"name":"result"}}],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,{"inputs":[{"name":"expr"}],"output":{"name":"literals"}}],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,{"inputs":[{"name":"expr"}],"output":{"name":"literals"}}],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from\nthe beginning of text.",2,{"inputs":[{"name":"expr"}],"output":{"name":"bool"}}],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the\nend of the text.",2,{"inputs":[{"name":"expr"}],"output":{"name":"bool"}}],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions\nthat can match arbitrary bytes.",2,{"inputs":[{"name":"expr"}],"output":{"name":"bool"}}],[11,"deref","","",8,{"inputs":[{"name":"charclass"}],"output":{"name":"vec"}}],[11,"into_iter","","",8,{"inputs":[{"name":"charclass"}],"output":{"name":"intoiter"}}],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",8,{"inputs":[{"name":"charclass"},{"name":"char"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given character from the class if it exists.",8,{"inputs":[{"name":"charclass"},{"name":"char"}],"output":null}],[11,"negate","","Negates the character class.",8,{"inputs":[{"name":"charclass"}],"output":{"name":"charclass"}}],[11,"case_fold","","Apply case folding to this character class.",8,{"inputs":[{"name":"charclass"}],"output":{"name":"charclass"}}],[11,"eq","","",0,{"inputs":[{"name":"classrange"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"classrange"},{"name":"char"}],"output":{"name":"option"}}],[11,"new","","Create a new class from an existing set of ranges.",9,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",9,{"inputs":[{"name":"byteclass"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given byte from the class if it exists.",9,{"inputs":[{"name":"byteclass"},{"name":"u8"}],"output":null}],[11,"negate","","Negates the byte class.",9,{"inputs":[{"name":"byteclass"}],"output":{"name":"byteclass"}}],[11,"case_fold","","Apply case folding to this byte class.",9,{"inputs":[{"name":"byteclass"}],"output":{"name":"byteclass"}}],[11,"deref","","",9,{"inputs":[{"name":"byteclass"}],"output":{"name":"vec"}}],[11,"into_iter","","",9,{"inputs":[{"name":"byteclass"}],"output":{"name":"intoiter"}}],[11,"eq","","",1,{"inputs":[{"name":"byterange"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"byterange"},{"name":"u8"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"expr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"repeater"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"charclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"classrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"byteclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"byterange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"eq","","",4,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"position","","Returns an approximate *character* offset at which the error occurred.",11,{"inputs":[{"name":"error"}],"output":{"name":"usize"}}],[11,"kind","","Returns the type of the regex parse error.",11,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"description","","",11,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"Vec"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Owned","crossbeam::mem::epoch","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[3,"Atomic","","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"new","","Move `t` to a new heap allocation.",0,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"deref","","",0,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"eq","","",1,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",1,{"inputs":[{"name":"shared"}],"output":{"name":"t"}}],[11,"null","","Create a new, null atomic pointer.",2,{"inputs":[],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"store","","Do an atomic store with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",2,{"inputs":[{"name":"atomic"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"shared"}}],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"result"}}],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",3,{"inputs":[{"name":"guard"},{"name":"shared"}],"output":null}],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",3,{"inputs":[{"name":"guard"}],"output":null}],[11,"drop","","",3,{"inputs":[{"name":"guard"}],"output":null}],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,{"inputs":[{"name":"atomicoption"},{"name":"box"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"swap","","",5,{"inputs":[{"name":"atomicoption"},{"name":"t"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"take","","",5,{"inputs":[{"name":"atomicoption"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue.",6,{"inputs":[{"name":"msqueue"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to dequeue from the front.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"option"}}],[11,"new","","Crate a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,{"inputs":[{"name":"treiberstack"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to pop the top element of the stack.",7,{"inputs":[{"name":"treiberstack"}],"output":{"name":"option"}}],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,{"inputs":[{"name":"segqueue"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to dequeue from the front.",8,{"inputs":[{"name":"segqueue"}],"output":{"name":"option"}}],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",9,{"inputs":[{"name":"scope"},{"name":"f"}],"output":null}],[11,"spawn","","Create a scoped thread.",9,{"inputs":[{"name":"scope"},{"name":"f"}],"output":{"name":"scopedjoinhandle"}}],[11,"join","","Join the scoped thread, returning the result it produced.",10,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"t"}}],[11,"thread","","Get the underlying thread handle.",10,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"thread"}}],[11,"drop","","",9,{"inputs":[{"name":"scope"}],"output":null}]],"paths":[[3,"Owned"],[3,"Shared"],[3,"Atomic"],[3,"Guard"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[14,"lazy_static!","lazy_static","",null,null]],"paths":[]};
searchIndex["getopts"] = {"doc":"Simple getopt alternative.","items":[[3,"Options","getopts","A description of the options that a program can handle.",null,null],[3,"Matches","","The result of checking command line arguments. Contains a vector\nof matches and a vector of free strings.",null,null],[12,"free","","Free string fragments",0,null],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",null,null],[13,"FloatingFrees","","Flags and &quot;free&quot; arguments can be freely inter-mixed.",1,null],[13,"StopAtFirstFree","","As soon as a &quot;free&quot; argument (i.e. non-flag) is encountered, stop\nconsidering any remaining arguments as flags.",1,null],[4,"HasArg","","Describes whether an option has an argument.",null,null],[13,"Yes","","The option requires an argument.",2,null],[13,"No","","The option takes no argument.",2,null],[13,"Maybe","","The option argument is optional.",2,null],[4,"Occur","","Describes how often an option may occur.",null,null],[13,"Req","","The option occurs once.",3,null],[13,"Optional","","The option occurs at most once.",3,null],[13,"Multi","","The option occurs zero or more times.",3,null],[4,"Fail","","The type returned when the command line does not conform to the\nexpected format. Use the `Debug` implementation to output detailed\ninformation.",null,null],[13,"ArgumentMissing","","The option requires an argument but none was passed.",4,null],[13,"UnrecognizedOption","","The passed option is not declared among the possible options.",4,null],[13,"OptionMissing","","A required option is not present.",4,null],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",4,null],[13,"UnexpectedArgument","","There&#39;s an argument being passed to a non-argument option.",4,null],[4,"FailType","","The type of failure that occurred.",null,null],[13,"ArgumentMissing_","","",5,null],[13,"UnrecognizedOption_","","",5,null],[13,"OptionMissing_","","",5,null],[13,"OptionDuplicated_","","",5,null],[13,"UnexpectedArgument_","","",5,null],[6,"Result","","The result of parsing a command line with a set of options.",null,null],[11,"new","","Create a blank set of options.",6,{"inputs":[],"output":{"name":"options"}}],[11,"parsing_style","","Set the parsing style.",6,{"inputs":[{"name":"options"},{"name":"parsingstyle"}],"output":{"name":"options"}}],[11,"opt","","Create a generic option group, stating all parameters explicitly.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"hasarg"},{"name":"occur"}],"output":{"name":"options"}}],[11,"optflag","","Create a long option that is optional and does not take an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optflagmulti","","Create a long option that can occur more than once and does not\ntake an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optflagopt","","Create a long option that is optional and takes an optional argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optmulti","","Create a long option that is optional, takes an argument, and may occur\nmultiple times.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optopt","","Create a long option that is optional and takes an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"reqopt","","Create a long option that is required and takes an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"parse","","Parse command line arguments according to the provided options.",6,{"inputs":[{"name":"options"},{"name":"c"}],"output":{"name":"result"}}],[11,"short_usage","","Derive a short one-line usage summary from a set of long options.",6,{"inputs":[{"name":"options"},{"name":"str"}],"output":{"name":"string"}}],[11,"usage","","Derive a usage message from a set of options.",6,{"inputs":[{"name":"options"},{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",1,{"inputs":[{"name":"parsingstyle"},{"name":"parsingstyle"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"parsingstyle"}],"output":{"name":"parsingstyle"}}],[11,"eq","","",2,{"inputs":[{"name":"hasarg"},{"name":"hasarg"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"hasarg"}],"output":{"name":"hasarg"}}],[11,"eq","","",3,{"inputs":[{"name":"occur"},{"name":"occur"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"occur"}],"output":{"name":"occur"}}],[11,"eq","","",0,{"inputs":[{"name":"matches"},{"name":"matches"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"matches"},{"name":"matches"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"eq","","",4,{"inputs":[{"name":"fail"},{"name":"fail"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"fail"},{"name":"fail"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"fail"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"fail"}],"output":{"name":"fail"}}],[11,"description","","",4,{"inputs":[{"name":"fail"}],"output":{"name":"str"}}],[11,"eq","","",5,{"inputs":[{"name":"failtype"},{"name":"failtype"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"failtype"}],"output":{"name":"failtype"}}],[11,"opt_present","","Returns true if an option was matched.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"bool"}}],[11,"opt_count","","Returns the number of times an option was matched.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"usize"}}],[11,"opts_present","","Returns true if any of several options were matched.",0,null],[11,"opts_str","","Returns the string argument supplied to one of several matching options or `None`.",0,null],[11,"opt_strs","","Returns a vector of the arguments provided to all matches of the given\noption.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"vec"}}],[11,"opt_str","","Returns the string argument supplied to a matching option or `None`.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"option"}}],[11,"opt_default","","Returns the matching string, a default, or `None`.",0,{"inputs":[{"name":"matches"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"fail"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Matches"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[4,"Fail"],[4,"FailType"],[3,"Options"]]};
initSearch(searchIndex);
